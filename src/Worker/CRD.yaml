apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: imagerepositories.image.toolkit.fluxcd.io
spec:
  group: image.toolkit.fluxcd.io
  names:
    plural: imagerepositories
    singular: imagerepository
    kind: ImageRepository
    listKind: ImageRepositoryList
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: ImageRepository is the Schema for the imagerepositories API
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: >-
                ImageRepositorySpec defines the parameters for scanning an image
                repository, e.g., `fluxcd/flux`.
              type: object
              properties:
                accessFrom:
                  description: >-
                    AccessFrom defines an ACL for allowing cross-namespace
                    references to the ImageRepository object based on the
                    caller's namespace labels.
                  type: object
                  properties:
                    namespaceSelectors:
                      type: array
                      items:
                        type: object
                        properties:
                          matchLabels:
                            type: object
                            additionalProperties:
                              type: string
                certSecretRef:
                  description: >-
                    CertSecretRef can be given the name of a secret containing
                    either or both of
                      - a PEM-encoded client certificate (`certFile`) and private  key (`keyFile`);  - a PEM-encoded CA certificate (`caFile`)
                      and whichever are supplied, will be used for connecting to the  registry. The client cert and key are useful if you are  authenticating with a certificate; the CA cert is useful if  you are using a self-signed server certificate.
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: Name of the referent
                      type: string
                image:
                  description: Image is the name of the image repository
                  type: string
                interval:
                  description: >-
                    Interval is the length of time to wait between scans of the
                    image repository.
                  type: string
                secretRef:
                  description: >-
                    SecretRef can be given the name of a secret containing
                    credentials to use for the image registry. The secret should
                    be created with `kubectl create secret docker-registry`, or
                    the equivalent.
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: Name of the referent
                      type: string
                suspend:
                  description: >-
                    This flag tells the controller to suspend subsequent image
                    scans. It does not apply to already started scans. Defaults
                    to false.
                  type: boolean
                timeout:
                  description: Timeout for image scanning. Defaults to 'Interval' duration.
                  type: string
            status:
              description: >-
                ImageRepositoryStatus defines the observed state of
                ImageRepository
              type: object
              default:
                observedGeneration: -1
              properties:
                canonicalImageName:
                  description: >-
                    CanonicalName is the name of the image repository with all
                    the implied bits made explicit; e.g.,
                    `docker.io/library/alpine` rather than `alpine`.
                  type: string
                conditions:
                  type: array
                  items:
                    description: >-
                      Condition contains details for one aspect of the current
                      state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path
                      .status.conditions.  For example, type FooStatus
                      struct{     // Represents the observations of a foo's
                      current state.     // Known .status.conditions.type are:
                      "Available", "Progressing", and "Degraded"     //
                      +patchMergeKey=type     // +patchStrategy=merge     //
                      +listType=map     // +listMapKey=type     Conditions
                      []metav1.Condition `json:"conditions,omitempty"
                      patchStrategy:"merge" patchMergeKey:"type"
                      protobuf:"bytes,1,rep,name=conditions"`
                           // other fields }
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: >-
                          lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should
                          be when the underlying condition changed.  If that is
                          not known, then using the time when the API field
                          changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: >-
                          message is a human readable message indicating details
                          about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: >-
                          observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance,
                          if .metadata.generation is currently 12, but the
                          .status.conditions[x].observedGeneration is 9, the
                          condition is out of date with respect to the current
                          state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: >-
                          reason contains a programmatic identifier indicating
                          the reason for the condition's last transition.
                          Producers of specific condition types may define
                          expected values and meanings for this field, and
                          whether the values are considered a guaranteed API.
                          The value should be a CamelCase string. This field may
                          not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                      type:
                        description: >-
                          type of condition in CamelCase or in
                          foo.example.com/CamelCase. --- Many .condition.type
                          values are consistent across resources like Available,
                          but because arbitrary conditions can be useful (see
                          .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is
                          (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: >-
                          ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                lastHandledReconcileAt:
                  description: >-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change can be detected.
                  type: string
                lastScanResult:
                  description: LastScanResult contains the number of fetched tags.
                  type: object
                  required:
                    - tagCount
                  properties:
                    scanTime:
                      type: string
                      format: date-time
                    tagCount:
                      type: integer
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  type: integer
                  format: int64
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Last scan
          type: string
          jsonPath: .status.lastScanResult.scanTime
        - name: Tags
          type: string
          jsonPath: .status.lastScanResult.tagCount
  conversion:
    strategy: None
