apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureserviceoperator-system/azureserviceoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    serviceoperator.azure.com/version: v2.2.0
  name: namespaceseventhubs.eventhub.azure.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureserviceoperator-webhook-service
          namespace: azureserviceoperator-system
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
  group: eventhub.azure.com
  names:
    kind: NamespacesEventhub
    listKind: NamespacesEventhubList
    plural: namespaceseventhubs
    singular: namespaceseventhub
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20211101
    schema:
      openAPIV3Schema:
        description: 'Generator information: - Generated from: /eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/eventhubs.json - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              azureName:
                description: "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn't have to be."
                maxLength: 256
                minLength: 1
                type: string
              captureDescription:
                description: 'CaptureDescription: Properties of capture description'
                properties:
                  destination:
                    description: 'Destination: Properties of Destination where capture will be stored. (Storage Account, Blob Names)'
                    properties:
                      archiveNameFormat:
                        description: 'ArchiveNameFormat: Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order'
                        type: string
                      blobContainer:
                        description: 'BlobContainer: Blob container Name'
                        type: string
                      dataLakeAccountName:
                        description: 'DataLakeAccountName: The Azure Data Lake Store name for the captured events'
                        type: string
                      dataLakeFolderPath:
                        description: 'DataLakeFolderPath: The destination folder path for the captured events'
                        type: string
                      dataLakeSubscriptionId:
                        description: 'DataLakeSubscriptionId: Subscription Id of Azure Data Lake Store'
                        pattern: ^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$
                        type: string
                      name:
                        description: 'Name: Name for capture destination'
                        type: string
                      storageAccountResourceReference:
                        description: 'StorageAccountResourceReference: Resource id of the storage account to be used to create the blobs'
                        properties:
                          armId:
                            description: ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                            pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                            type: string
                          group:
                            description: Group is the Kubernetes group of the resource.
                            type: string
                          kind:
                            description: Kind is the Kubernetes kind of the resource.
                            type: string
                          name:
                            description: Name is the Kubernetes name of the resource.
                            type: string
                        type: object
                    type: object
                  enabled:
                    description: 'Enabled: A value that indicates whether capture description is enabled.'
                    type: boolean
                  encoding:
                    description: "Encoding: Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version"
                    enum:
                    - Avro
                    - AvroDeflate
                    type: string
                  intervalInSeconds:
                    description: 'IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds'
                    type: integer
                  sizeLimitInBytes:
                    description: 'SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes'
                    type: integer
                  skipEmptyArchives:
                    description: 'SkipEmptyArchives: A value that indicates whether to Skip Empty Archives'
                    type: boolean
                type: object
              messageRetentionInDays:
                description: 'MessageRetentionInDays: Number of days to retain the events for this Event Hub, value should be 1 to 7 days'
                minimum: 1
                type: integer
              owner:
                description: 'Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource'
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                required:
                - name
                type: object
              partitionCount:
                description: 'PartitionCount: Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.'
                minimum: 1
                type: integer
            required:
            - owner
            type: object
          status:
            properties:
              captureDescription:
                description: 'CaptureDescription: Properties of capture description'
                properties:
                  destination:
                    description: 'Destination: Properties of Destination where capture will be stored. (Storage Account, Blob Names)'
                    properties:
                      archiveNameFormat:
                        description: 'ArchiveNameFormat: Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order'
                        type: string
                      blobContainer:
                        description: 'BlobContainer: Blob container Name'
                        type: string
                      dataLakeAccountName:
                        description: 'DataLakeAccountName: The Azure Data Lake Store name for the captured events'
                        type: string
                      dataLakeFolderPath:
                        description: 'DataLakeFolderPath: The destination folder path for the captured events'
                        type: string
                      dataLakeSubscriptionId:
                        description: 'DataLakeSubscriptionId: Subscription Id of Azure Data Lake Store'
                        type: string
                      name:
                        description: 'Name: Name for capture destination'
                        type: string
                      storageAccountResourceId:
                        description: 'StorageAccountResourceId: Resource id of the storage account to be used to create the blobs'
                        type: string
                    type: object
                  enabled:
                    description: 'Enabled: A value that indicates whether capture description is enabled.'
                    type: boolean
                  encoding:
                    description: "Encoding: Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version"
                    type: string
                  intervalInSeconds:
                    description: 'IntervalInSeconds: The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds'
                    type: integer
                  sizeLimitInBytes:
                    description: 'SizeLimitInBytes: The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes'
                    type: integer
                  skipEmptyArchives:
                    description: 'SkipEmptyArchives: A value that indicates whether to Skip Empty Archives'
                    type: boolean
                type: object
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: 'CreatedAt: Exact time the Event Hub was created.'
                type: string
              id:
                description: 'Id: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
                type: string
              location:
                description: 'Location: The geo-location where the resource lives'
                type: string
              messageRetentionInDays:
                description: 'MessageRetentionInDays: Number of days to retain the events for this Event Hub, value should be 1 to 7 days'
                type: integer
              name:
                description: 'Name: The name of the resource'
                type: string
              partitionCount:
                description: 'PartitionCount: Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.'
                type: integer
              partitionIds:
                description: 'PartitionIds: Current number of shards on the Event Hub.'
                items:
                  type: string
                type: array
              status:
                description: 'Status: Enumerates the possible values for the status of the Event Hub.'
                type: string
              systemData:
                description: 'SystemData: The system meta data relating to this resource.'
                properties:
                  createdAt:
                    description: 'CreatedAt: The timestamp of resource creation (UTC).'
                    type: string
                  createdBy:
                    description: 'CreatedBy: The identity that created the resource.'
                    type: string
                  createdByType:
                    description: 'CreatedByType: The type of identity that created the resource.'
                    type: string
                  lastModifiedAt:
                    description: 'LastModifiedAt: The type of identity that last modified the resource.'
                    type: string
                  lastModifiedBy:
                    description: 'LastModifiedBy: The identity that last modified the resource.'
                    type: string
                  lastModifiedByType:
                    description: 'LastModifiedByType: The type of identity that last modified the resource.'
                    type: string
                type: object
              type:
                description: 'Type: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"'
                type: string
              updatedAt:
                description: 'UpdatedAt: The exact time the message was updated.'
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1api20211101storage
    schema:
      openAPIV3Schema:
        description: 'Storage version of v1api20211101.NamespacesEventhub Generator information: - Generated from: /eventhub/resource-manager/Microsoft.EventHub/stable/2021-11-01/eventhubs.json - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1api20211101.Namespaces_Eventhub_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                type: object
              azureName:
                description: "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn't have to be."
                maxLength: 256
                minLength: 1
                type: string
              captureDescription:
                description: Storage version of v1api20211101.CaptureDescription Properties to configure capture description for eventhub
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                    type: object
                  destination:
                    description: Storage version of v1api20211101.Destination Capture storage details for capture description
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                        type: object
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      name:
                        type: string
                      storageAccountResourceReference:
                        description: 'StorageAccountResourceReference: Resource id of the storage account to be used to create the blobs'
                        properties:
                          armId:
                            description: ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                            pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                            type: string
                          group:
                            description: Group is the Kubernetes group of the resource.
                            type: string
                          kind:
                            description: Kind is the Kubernetes kind of the resource.
                            type: string
                          name:
                            description: Name is the Kubernetes name of the resource.
                            type: string
                        type: object
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              messageRetentionInDays:
                type: integer
              originalVersion:
                type: string
              owner:
                description: 'Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource'
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                required:
                - name
                type: object
              partitionCount:
                type: integer
            required:
            - owner
            type: object
          status:
            description: Storage version of v1api20211101.Namespaces_Eventhub_STATUS
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                type: object
              captureDescription:
                description: Storage version of v1api20211101.CaptureDescription_STATUS Properties to configure capture description for eventhub
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                    type: object
                  destination:
                    description: Storage version of v1api20211101.Destination_STATUS Capture storage details for capture description
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                        type: object
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      name:
                        type: string
                      storageAccountResourceId:
                        type: string
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              conditions:
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                type: string
              id:
                type: string
              location:
                type: string
              messageRetentionInDays:
                type: integer
              name:
                type: string
              partitionCount:
                type: integer
              partitionIds:
                items:
                  type: string
                type: array
              status:
                type: string
              systemData:
                description: Storage version of v1api20211101.SystemData_STATUS Metadata pertaining to creation and last modification of the resource.
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                    type: object
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  createdByType:
                    type: string
                  lastModifiedAt:
                    type: string
                  lastModifiedBy:
                    type: string
                  lastModifiedByType:
                    type: string
                type: object
              type:
                type: string
              updatedAt:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1beta20211101
    schema:
      openAPIV3Schema:
        description: Deprecated version of NamespacesEventhub. Use v1api20211101.NamespacesEventhub instead
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              azureName:
                description: "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn't have to be."
                maxLength: 256
                minLength: 1
                type: string
              captureDescription:
                description: Deprecated version of CaptureDescription. Use v1api20211101.CaptureDescription instead
                properties:
                  destination:
                    description: Deprecated version of Destination. Use v1api20211101.Destination instead
                    properties:
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        pattern: ^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$
                        type: string
                      name:
                        type: string
                      storageAccountResourceReference:
                        description: ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID
                        properties:
                          armId:
                            description: ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                            pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                            type: string
                          group:
                            description: Group is the Kubernetes group of the resource.
                            type: string
                          kind:
                            description: Kind is the Kubernetes kind of the resource.
                            type: string
                          name:
                            description: Name is the Kubernetes name of the resource.
                            type: string
                        type: object
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    description: Deprecated version of CaptureDescription_Encoding. Use v1api20211101.CaptureDescription_Encoding instead
                    enum:
                    - Avro
                    - AvroDeflate
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              messageRetentionInDays:
                minimum: 1
                type: integer
              owner:
                description: 'Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource'
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                required:
                - name
                type: object
              partitionCount:
                minimum: 1
                type: integer
            required:
            - owner
            type: object
          status:
            description: Deprecated version of Namespaces_Eventhub_STATUS. Use v1api20211101.Namespaces_Eventhub_STATUS instead
            properties:
              captureDescription:
                description: Deprecated version of CaptureDescription_STATUS. Use v1api20211101.CaptureDescription_STATUS instead
                properties:
                  destination:
                    description: Deprecated version of Destination_STATUS. Use v1api20211101.Destination_STATUS instead
                    properties:
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      name:
                        type: string
                      storageAccountResourceId:
                        type: string
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    description: Deprecated version of CaptureDescription_Encoding_STATUS. Use v1api20211101.CaptureDescription_Encoding_STATUS instead
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              conditions:
                description: 'Conditions: The observed state of the resource'
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                type: string
              id:
                type: string
              location:
                type: string
              messageRetentionInDays:
                type: integer
              name:
                type: string
              partitionCount:
                type: integer
              partitionIds:
                items:
                  type: string
                type: array
              status:
                description: Deprecated version of Namespaces_Eventhub_Properties_Status_STATUS. Use v1api20211101.Namespaces_Eventhub_Properties_Status_STATUS instead
                type: string
              systemData:
                description: Deprecated version of SystemData_STATUS. Use v1api20211101.SystemData_STATUS instead
                properties:
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  createdByType:
                    description: Deprecated version of SystemData_CreatedByType_STATUS. Use v1api20211101.SystemData_CreatedByType_STATUS instead
                    type: string
                  lastModifiedAt:
                    type: string
                  lastModifiedBy:
                    type: string
                  lastModifiedByType:
                    description: Deprecated version of SystemData_LastModifiedByType_STATUS. Use v1api20211101.SystemData_LastModifiedByType_STATUS instead
                    type: string
                type: object
              type:
                type: string
              updatedAt:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].severity
      name: Severity
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1beta20211101storage
    schema:
      openAPIV3Schema:
        description: Storage version of v1beta20211101.NamespacesEventhub Deprecated version of NamespacesEventhub. Use v1api20211101.NamespacesEventhub instead
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Storage version of v1beta20211101.Namespaces_Eventhub_Spec
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                type: object
              azureName:
                description: "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn't have to be."
                maxLength: 256
                minLength: 1
                type: string
              captureDescription:
                description: Storage version of v1beta20211101.CaptureDescription Deprecated version of CaptureDescription. Use v1api20211101.CaptureDescription instead
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                    type: object
                  destination:
                    description: Storage version of v1beta20211101.Destination Deprecated version of Destination. Use v1api20211101.Destination instead
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                        type: object
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      name:
                        type: string
                      storageAccountResourceReference:
                        description: ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID
                        properties:
                          armId:
                            description: ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                            pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                            type: string
                          group:
                            description: Group is the Kubernetes group of the resource.
                            type: string
                          kind:
                            description: Kind is the Kubernetes kind of the resource.
                            type: string
                          name:
                            description: Name is the Kubernetes name of the resource.
                            type: string
                        type: object
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              messageRetentionInDays:
                type: integer
              originalVersion:
                type: string
              owner:
                description: 'Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a eventhub.azure.com/Namespace resource'
                properties:
                  name:
                    description: This is the name of the Kubernetes resource to reference.
                    type: string
                required:
                - name
                type: object
              partitionCount:
                type: integer
            required:
            - owner
            type: object
          status:
            description: Storage version of v1beta20211101.Namespaces_Eventhub_STATUS Deprecated version of Namespaces_Eventhub_STATUS. Use v1api20211101.Namespaces_Eventhub_STATUS instead
            properties:
              $propertyBag:
                additionalProperties:
                  type: string
                description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                type: object
              captureDescription:
                description: Storage version of v1beta20211101.CaptureDescription_STATUS Deprecated version of CaptureDescription_STATUS. Use v1api20211101.CaptureDescription_STATUS instead
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                    type: object
                  destination:
                    description: Storage version of v1beta20211101.Destination_STATUS Deprecated version of Destination_STATUS. Use v1api20211101.Destination_STATUS instead
                    properties:
                      $propertyBag:
                        additionalProperties:
                          type: string
                        description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                        type: object
                      archiveNameFormat:
                        type: string
                      blobContainer:
                        type: string
                      dataLakeAccountName:
                        type: string
                      dataLakeFolderPath:
                        type: string
                      dataLakeSubscriptionId:
                        type: string
                      name:
                        type: string
                      storageAccountResourceId:
                        type: string
                    type: object
                  enabled:
                    type: boolean
                  encoding:
                    type: string
                  intervalInSeconds:
                    type: integer
                  sizeLimitInBytes:
                    type: integer
                  skipEmptyArchives:
                    type: boolean
                type: object
              conditions:
                items:
                  description: Condition defines an extension to status (an observation) of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating details about the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
                      type: string
                    status:
                      description: Status of the condition, one of True, False, or Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                type: string
              id:
                type: string
              location:
                type: string
              messageRetentionInDays:
                type: integer
              name:
                type: string
              partitionCount:
                type: integer
              partitionIds:
                items:
                  type: string
                type: array
              status:
                type: string
              systemData:
                description: Storage version of v1beta20211101.SystemData_STATUS Deprecated version of SystemData_STATUS. Use v1api20211101.SystemData_STATUS instead
                properties:
                  $propertyBag:
                    additionalProperties:
                      type: string
                    description: PropertyBag is an unordered set of stashed information that used for properties not directly supported by storage resources, allowing for full fidelity round trip conversions
                    type: object
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  createdByType:
                    type: string
                  lastModifiedAt:
                    type: string
                  lastModifiedBy:
                    type: string
                  lastModifiedByType:
                    type: string
                type: object
              type:
                type: string
              updatedAt:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
