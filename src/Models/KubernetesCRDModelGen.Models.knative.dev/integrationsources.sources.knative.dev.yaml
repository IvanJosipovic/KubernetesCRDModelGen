apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
    app.kubernetes.io/version: 1.18.3
    app.kubernetes.io/name: knative-eventing
  name: integrationsources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
    - all
    - knative
    - sources
    kind: IntegrationSource
    plural: integrationsources
    singular: integrationsource
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.sinkUri
      name: Sink
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IntegrationSource is an event source that starts a container image which generates events under certain situations and sends messages to a sink URI
        properties:
          spec:
            properties:
              ceOverrides:
                description: CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.
                properties:
                  extensions:
                    description: Extensions specify what attribute are added or overridden on the outbound event. Each `Extensions` key-value pair are set on the event as an attribute extension independently.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              sink:
                description: Sink is a reference to an object that will resolve to a uri to use as the sink.
                properties:
                  ref:
                    description: Ref points to an Addressable.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.'
                        type: string
                    type: object
                  uri:
                    description: URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
                    type: string
                  CACerts:
                    description: CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
                    type: string
                  audience:
                    description: Audience is the OIDC audience. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the target itself. If specified, it takes precedence over the target's Audience.
                    type: string
                type: object
              timer:
                properties:
                  period:
                    default: 1000
                    description: The interval (in milliseconds) to wait between producing the next message.
                    title: Period
                    type: integer
                  message:
                    description: The message to generate.
                    example: hello world
                    title: Message
                    type: string
                  contentType:
                    default: text/plain
                    description: The content type of the generated message.
                    title: Content Type
                    type: string
                  repeatCount:
                    description: Specifies a maximum limit of number of fires
                    title: Repeat Count
                    type: integer
                type: object
              aws:
                properties:
                  s3:
                    properties:
                      arn:
                        description: The S3 Bucket name or Amazon Resource Name (ARN).
                        title: Bucket Name
                        type: string
                      deleteAfterRead:
                        default: true
                        description: Specifies to delete objects after consuming them.
                        title: Auto-delete Objects
                        type: boolean
                      moveAfterRead:
                        default: false
                        description: Move objects from S3 bucket to a different bucket after they have been retrieved.
                        title: Move Objects After Delete
                        type: boolean
                      destinationBucket:
                        description: Define the destination bucket where an object must be moved when moveAfterRead is set to true.
                        title: Destination Bucket
                        type: string
                      destinationBucketPrefix:
                        description: Define the destination bucket prefix to use when an object must be moved, and moveAfterRead is set to true.
                        title: Destination Bucket Prefix
                        type: string
                      destinationBucketSuffix:
                        description: Define the destination bucket suffix to use when an object must be moved, and moveAfterRead is set to true.
                        title: Destination Bucket Suffix
                        type: string
                      region:
                        description: The AWS region to access.
                        title: AWS Region
                        type: string
                      autoCreateBucket:
                        default: false
                        description: Specifies to automatically create the S3 bucket.
                        title: Autocreate Bucket
                        type: boolean
                      prefix:
                        description: The AWS S3 bucket prefix to consider while searching.
                        example: folder/
                        title: Prefix
                        type: string
                      ignoreBody:
                        default: false
                        description: If true, the S3 Object body is ignored. Setting this to true overrides any behavior defined by the `includeBody` option. If false, the S3 object is put in the body.
                        title: Ignore Body
                        type: boolean
                      uriEndpointOverride:
                        description: The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.
                        title: Overwrite Endpoint URI
                        type: string
                      overrideEndpoint:
                        default: false
                        description: Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.
                        title: Endpoint Overwrite
                        type: boolean
                      forcePathStyle:
                        default: false
                        description: Forces path style when accessing AWS S3 buckets.
                        title: Force Path Style
                        type: boolean
                      delay:
                        default: 500
                        description: The number of milliseconds before the next poll of the selected bucket.
                        title: Delay
                        type: integer
                      maxMessagesPerPoll:
                        default: 10
                        description: Gets the maximum number of messages as a limit to poll at each polling. Gets the maximum number of messages as a limit to poll at each polling. The default value is 10. Use 0 or a negative number to set it as unlimited.
                        title: Max Messages Per Poll
                        type: integer
                    type: object
                  sqs:
                    properties:
                      arn:
                        description: The SQS Queue Name or ARN
                        title: Queue Name
                        type: string
                      deleteAfterRead:
                        default: true
                        description: Delete messages after consuming them
                        title: Auto-delete Messages
                        type: boolean
                      region:
                        description: The AWS region to access.
                        title: AWS Region
                        type: string
                      autoCreateQueue:
                        default: false
                        description: Setting the autocreation of the SQS queue.
                        title: Autocreate Queue
                        type: boolean
                      host:
                        default: amazonaws.com
                        description: The hostname of the Amazon AWS cloud.
                        title: AWS Host
                        type: string
                      protocol:
                        default: https
                        description: The underlying protocol used to communicate with SQS
                        example: http or https
                        title: Protocol
                        type: string
                      queueURL:
                        description: The full SQS Queue URL (required if using KEDA)
                        title: Queue URL
                        type: string
                      uriEndpointOverride:
                        description: The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.
                        title: Overwrite Endpoint URI
                        type: string
                      overrideEndpoint:
                        default: false
                        description: Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.
                        title: Endpoint Overwrite
                        type: boolean
                      delay:
                        default: 500
                        description: The number of milliseconds before the next poll of the selected stream
                        title: Delay
                        type: integer
                      greedy:
                        default: false
                        description: If greedy is enabled, then the polling will happen immediately again, if the previous run polled 1 or more messages.
                        title: Greedy Scheduler
                        type: boolean
                      maxMessagesPerPoll:
                        default: 1
                        description: The maximum number of messages to return. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values 1 to 10. Default 1.
                        title: Max Messages Per Poll
                        type: integer
                      waitTimeSeconds:
                        description: The duration (in seconds) for which the call waits for a message to arrive in the queue before returning. If a message is available, the call returns sooner than WaitTimeSeconds. If no messages are available and the wait time expires, the call does not return a message list.
                        title: Wait Time Seconds
                        type: integer
                      visibilityTimeout:
                        description: The duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request.
                        title: Visibility Timeout
                        type: integer
                    type: object
                  ddbStreams:
                    properties:
                      table:
                        description: The name of the DynamoDB table.
                        title: Table
                        type: string
                      region:
                        description: The AWS region to access.
                        title: AWS Region
                        type: string
                      streamIteratorType:
                        default: FROM_LATEST
                        description: Defines where in the DynamoDB stream to start getting records. There are two enums and the value can be one of FROM_LATEST and FROM_START. Note that using FROM_START can cause a significant delay before the stream has caught up to real-time.
                        title: Stream Iterator Type
                        type: string
                      uriEndpointOverride:
                        description: The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.
                        title: Overwrite Endpoint URI
                        type: string
                      overrideEndpoint:
                        default: false
                        description: Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.
                        title: Endpoint Overwrite
                        type: boolean
                      delay:
                        default: 500
                        description: The number of milliseconds before the next poll from the database.
                        title: Delay
                        type: integer
                    type: object
                  auth:
                    description: Auth configurations
                    properties:
                      secret:
                        description: Auth secret
                        properties:
                          ref:
                            description: |
                              Secret reference.
                            properties:
                              name:
                                description: Secret name
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                    type: object
                type: object
            type: object
          status:
            properties:
              annotations:
                description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              auth:
                description: Auth provides the relevant information for OIDC authentication.
                properties:
                  serviceAccountName:
                    description: ServiceAccountName is the name of the generated service account used for this components OIDC authentication.
                    type: string
                  serviceAccountNames:
                    description: ServiceAccountNames is the list of names of the generated service accounts used for this components OIDC authentication.
                    items:
                      type: string
                    type: array
                type: object
              ceAttributes:
                description: CloudEventAttributes are the specific attributes that the Source uses as part of its CloudEvents.
                items:
                  type: object
                  properties:
                    source:
                      description: Source is the CloudEvents source attribute.
                      type: string
                    type:
                      description: Type refers to the CloudEvent type attribute.
                      type: string
                type: array
              conditions:
                description: Conditions the latest available observations of a resource's current state.
                items:
                  type: object
                  required:
                  - type
                  - status
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                type: array
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                format: int64
                type: integer
              sinkUri:
                description: SinkURI is the current active sink URI that has been configured for the Source.
                type: string
              sinkCACerts:
                description: CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.
                type: string
              sinkAudience:
                description: Audience is the OIDC audience of the sink.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}