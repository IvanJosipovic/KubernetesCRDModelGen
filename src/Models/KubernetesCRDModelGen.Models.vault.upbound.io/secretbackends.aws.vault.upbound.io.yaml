apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: secretbackends.aws.vault.upbound.io
spec:
  group: aws.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: SecretBackend
    listKind: SecretBackendList
    plural: secretbackends
    singular: secretbackend
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecretBackend is the Schema for the SecretBackends API. Creates an AWS secret backend for Vault.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SecretBackendSpec defines the desired state of SecretBackend
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessKeySecretRef:
                    description: |-
                      The AWS Access Key ID this backend should use to
                      issue new credentials. Vault uses the official AWS SDK to authenticate, and thus can also use standard AWS environment credentials, shared file credentials or IAM role/ECS task credentials.
                      The AWS Access Key ID to use when generating new credentials.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  allowedManagedKeys:
                    description: |-
                      Set of managed key registry entry names that the mount in question is allowed to access
                      List of managed key registry entry names that the mount in question is allowed to access
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedResponseHeaders:
                    description: |-
                      List of headers to allow, allowing a plugin to include
                      them in the response.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  auditNonHmacRequestKeys:
                    description: |-
                      Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
                      Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
                    items:
                      type: string
                    type: array
                  auditNonHmacResponseKeys:
                    description: |-
                      Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
                      Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
                    items:
                      type: string
                    type: array
                  defaultLeaseTtlSeconds:
                    description: |-
                      Default lease duration for tokens and secrets in seconds
                      Default lease duration for secrets in seconds
                    type: number
                  delegatedAuthAccessors:
                    description: |-
                      List of allowed authentication mount accessors the
                      backend can request delegated authentication for.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  description:
                    description: |-
                      Human-friendly description of the mount
                      Human-friendly description of the mount for the backend.
                    type: string
                  disableAutomatedRotation:
                    description: |-
                      Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.
                      Stops rotation of the root credential until set to false.
                    type: boolean
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  externalEntropyAccess:
                    description: |-
                      Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source
                      Enable the secrets engine to access Vault's external entropy source
                    type: boolean
                  forceNoCache:
                    description: If set to true, disables caching.
                    type: boolean
                  iamEndpoint:
                    description: |-
                      Specifies a custom HTTP IAM endpoint to use.
                      Specifies a custom HTTP IAM endpoint to use.
                    type: string
                  identityTokenAudience:
                    description: |-
                      The audience claim value. Requires Vault 1.16+.
                      The audience claim value.
                    type: string
                  identityTokenKey:
                    description: |-
                      The key to use for signing plugin workload identity tokens. If
                      not provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.
                      The key to use for signing identity tokens.
                    type: string
                  identityTokenTtl:
                    description: |-
                      The TTL of generated identity tokens in seconds. Requires Vault 1.16+.
                      The TTL of generated identity tokens in seconds.
                    type: number
                  listingVisibility:
                    description: |-
                      Specifies whether to show this mount in the UI-specific
                      listing endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.
                      Specifies whether to show this mount in the UI-specific listing endpoint
                    type: string
                  local:
                    description: |-
                      Boolean flag that can be explicitly set to true to enforce local mount in HA environment
                      Specifies if the secret backend is local only
                    type: boolean
                  maxLeaseTtlSeconds:
                    description: |-
                      Maximum possible lease duration for tokens and secrets in seconds
                      Maximum possible lease duration for secrets in seconds
                    type: number
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: |-
                      Specifies mount type specific options that are passed to the backend
                      Specifies mount type specific options that are passed to the backend
                    type: object
                    x-kubernetes-map-type: granular
                  passthroughRequestHeaders:
                    description: |-
                      List of headers to allow and pass from the request to
                      the plugin.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  path:
                    description: |-
                      The unique path this backend should be mounted at. Must
                      not begin or end with a /. Defaults to aws.
                      Path to mount the backend at.
                    type: string
                  pluginVersion:
                    description: |-
                      Specifies the semantic version of the plugin to use, e.g. "v1.0.0".
                      If unspecified, the server will select any matching unversioned plugin that may have been
                      registered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.
                      Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'
                    type: string
                  region:
                    description: |-
                      The AWS region for API calls. Defaults to us-east-1.
                      The AWS region to make API calls against. Defaults to us-east-1.
                    type: string
                  roleArn:
                    description: |-
                      Role ARN to assume for plugin identity token federation. Requires Vault 1.16+.
                      Role ARN to assume for plugin identity token federation.
                    type: string
                  rotationPeriod:
                    description: |-
                      The amount of time in seconds Vault should wait before rotating the root credential.
                      A zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.
                      The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.
                    type: number
                  rotationSchedule:
                    description: |-
                      The schedule, in cron-style time format,
                      defining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.
                      The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.
                    type: string
                  rotationWindow:
                    description: |-
                      The maximum amount of time in seconds allowed to complete
                      a rotation when a scheduled token rotation occurs. The default rotation window is
                      unbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.
                      The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.
                    type: number
                  sealWrap:
                    description: |-
                      Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
                      Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
                    type: boolean
                  secretKeySecretRef:
                    description: |-
                      The AWS Secret Key this backend should use to
                      issue new credentials. Vault uses the official AWS SDK to authenticate, and thus can also use standard AWS environment credentials, shared file credentials or IAM role/ECS task credentials.
                      The AWS Secret Access Key to use when generating new credentials.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  stsEndpoint:
                    description: |-
                      Specifies a custom HTTP STS endpoint to use.
                      Specifies a custom HTTP STS endpoint to use.
                    type: string
                  stsFallbackEndpoints:
                    description: |-
                      Ordered list of sts_endpoints to try if the defined one fails. Requires Vault 1.19+
                      Specifies a list of custom STS fallback endpoints to use (in order).
                    items:
                      type: string
                    type: array
                  stsFallbackRegions:
                    description: |-
                      Ordered list of sts_regions matching the fallback endpoints. Should correspond in order with those endpoints. Requires Vault 1.19+
                      Specifies a list of custom STS fallback regions to use (in order).
                    items:
                      type: string
                    type: array
                  stsRegion:
                    description: |-
                      Specifies the region of the STS endpoint. Should be included if sts_endpoint is supplied. Requires Vault 1.19+
                      Specifies a custom STS region to use.
                    type: string
                  usernameTemplate:
                    description: |-
                      Template describing how dynamic usernames are generated. The username template is used to generate both IAM usernames (capped at 64 characters) and STS usernames (capped at 32 characters). If no template is provided the field defaults to the template:
                      Template describing how dynamic usernames are generated.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessKeySecretRef:
                    description: |-
                      The AWS Access Key ID this backend should use to
                      issue new credentials. Vault uses the official AWS SDK to authenticate, and thus can also use standard AWS environment credentials, shared file credentials or IAM role/ECS task credentials.
                      The AWS Access Key ID to use when generating new credentials.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  allowedManagedKeys:
                    description: |-
                      Set of managed key registry entry names that the mount in question is allowed to access
                      List of managed key registry entry names that the mount in question is allowed to access
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedResponseHeaders:
                    description: |-
                      List of headers to allow, allowing a plugin to include
                      them in the response.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  auditNonHmacRequestKeys:
                    description: |-
                      Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
                      Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
                    items:
                      type: string
                    type: array
                  auditNonHmacResponseKeys:
                    description: |-
                      Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
                      Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
                    items:
                      type: string
                    type: array
                  defaultLeaseTtlSeconds:
                    description: |-
                      Default lease duration for tokens and secrets in seconds
                      Default lease duration for secrets in seconds
                    type: number
                  delegatedAuthAccessors:
                    description: |-
                      List of allowed authentication mount accessors the
                      backend can request delegated authentication for.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  description:
                    description: |-
                      Human-friendly description of the mount
                      Human-friendly description of the mount for the backend.
                    type: string
                  disableAutomatedRotation:
                    description: |-
                      Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.
                      Stops rotation of the root credential until set to false.
                    type: boolean
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  externalEntropyAccess:
                    description: |-
                      Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source
                      Enable the secrets engine to access Vault's external entropy source
                    type: boolean
                  forceNoCache:
                    description: If set to true, disables caching.
                    type: boolean
                  iamEndpoint:
                    description: |-
                      Specifies a custom HTTP IAM endpoint to use.
                      Specifies a custom HTTP IAM endpoint to use.
                    type: string
                  identityTokenAudience:
                    description: |-
                      The audience claim value. Requires Vault 1.16+.
                      The audience claim value.
                    type: string
                  identityTokenKey:
                    description: |-
                      The key to use for signing plugin workload identity tokens. If
                      not provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.
                      The key to use for signing identity tokens.
                    type: string
                  identityTokenTtl:
                    description: |-
                      The TTL of generated identity tokens in seconds. Requires Vault 1.16+.
                      The TTL of generated identity tokens in seconds.
                    type: number
                  listingVisibility:
                    description: |-
                      Specifies whether to show this mount in the UI-specific
                      listing endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.
                      Specifies whether to show this mount in the UI-specific listing endpoint
                    type: string
                  local:
                    description: |-
                      Boolean flag that can be explicitly set to true to enforce local mount in HA environment
                      Specifies if the secret backend is local only
                    type: boolean
                  maxLeaseTtlSeconds:
                    description: |-
                      Maximum possible lease duration for tokens and secrets in seconds
                      Maximum possible lease duration for secrets in seconds
                    type: number
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: |-
                      Specifies mount type specific options that are passed to the backend
                      Specifies mount type specific options that are passed to the backend
                    type: object
                    x-kubernetes-map-type: granular
                  passthroughRequestHeaders:
                    description: |-
                      List of headers to allow and pass from the request to
                      the plugin.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  path:
                    description: |-
                      The unique path this backend should be mounted at. Must
                      not begin or end with a /. Defaults to aws.
                      Path to mount the backend at.
                    type: string
                  pluginVersion:
                    description: |-
                      Specifies the semantic version of the plugin to use, e.g. "v1.0.0".
                      If unspecified, the server will select any matching unversioned plugin that may have been
                      registered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.
                      Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'
                    type: string
                  region:
                    description: |-
                      The AWS region for API calls. Defaults to us-east-1.
                      The AWS region to make API calls against. Defaults to us-east-1.
                    type: string
                  roleArn:
                    description: |-
                      Role ARN to assume for plugin identity token federation. Requires Vault 1.16+.
                      Role ARN to assume for plugin identity token federation.
                    type: string
                  rotationPeriod:
                    description: |-
                      The amount of time in seconds Vault should wait before rotating the root credential.
                      A zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.
                      The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.
                    type: number
                  rotationSchedule:
                    description: |-
                      The schedule, in cron-style time format,
                      defining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.
                      The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.
                    type: string
                  rotationWindow:
                    description: |-
                      The maximum amount of time in seconds allowed to complete
                      a rotation when a scheduled token rotation occurs. The default rotation window is
                      unbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.
                      The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.
                    type: number
                  sealWrap:
                    description: |-
                      Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
                      Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
                    type: boolean
                  secretKeySecretRef:
                    description: |-
                      The AWS Secret Key this backend should use to
                      issue new credentials. Vault uses the official AWS SDK to authenticate, and thus can also use standard AWS environment credentials, shared file credentials or IAM role/ECS task credentials.
                      The AWS Secret Access Key to use when generating new credentials.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  stsEndpoint:
                    description: |-
                      Specifies a custom HTTP STS endpoint to use.
                      Specifies a custom HTTP STS endpoint to use.
                    type: string
                  stsFallbackEndpoints:
                    description: |-
                      Ordered list of sts_endpoints to try if the defined one fails. Requires Vault 1.19+
                      Specifies a list of custom STS fallback endpoints to use (in order).
                    items:
                      type: string
                    type: array
                  stsFallbackRegions:
                    description: |-
                      Ordered list of sts_regions matching the fallback endpoints. Should correspond in order with those endpoints. Requires Vault 1.19+
                      Specifies a list of custom STS fallback regions to use (in order).
                    items:
                      type: string
                    type: array
                  stsRegion:
                    description: |-
                      Specifies the region of the STS endpoint. Should be included if sts_endpoint is supplied. Requires Vault 1.19+
                      Specifies a custom STS region to use.
                    type: string
                  usernameTemplate:
                    description: |-
                      Template describing how dynamic usernames are generated. The username template is used to generate both IAM usernames (capped at 64 characters) and STS usernames (capped at 32 characters). If no template is provided the field defaults to the template:
                      Template describing how dynamic usernames are generated.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SecretBackendStatus defines the observed state of SecretBackend.
            properties:
              atProvider:
                properties:
                  accessor:
                    description: Accessor of the mount
                    type: string
                  allowedManagedKeys:
                    description: |-
                      Set of managed key registry entry names that the mount in question is allowed to access
                      List of managed key registry entry names that the mount in question is allowed to access
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedResponseHeaders:
                    description: |-
                      List of headers to allow, allowing a plugin to include
                      them in the response.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  auditNonHmacRequestKeys:
                    description: |-
                      Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
                      Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.
                    items:
                      type: string
                    type: array
                  auditNonHmacResponseKeys:
                    description: |-
                      Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
                      Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.
                    items:
                      type: string
                    type: array
                  defaultLeaseTtlSeconds:
                    description: |-
                      Default lease duration for tokens and secrets in seconds
                      Default lease duration for secrets in seconds
                    type: number
                  delegatedAuthAccessors:
                    description: |-
                      List of allowed authentication mount accessors the
                      backend can request delegated authentication for.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  description:
                    description: |-
                      Human-friendly description of the mount
                      Human-friendly description of the mount for the backend.
                    type: string
                  disableAutomatedRotation:
                    description: |-
                      Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.
                      Stops rotation of the root credential until set to false.
                    type: boolean
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  externalEntropyAccess:
                    description: |-
                      Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source
                      Enable the secrets engine to access Vault's external entropy source
                    type: boolean
                  forceNoCache:
                    description: If set to true, disables caching.
                    type: boolean
                  iamEndpoint:
                    description: |-
                      Specifies a custom HTTP IAM endpoint to use.
                      Specifies a custom HTTP IAM endpoint to use.
                    type: string
                  id:
                    type: string
                  identityTokenAudience:
                    description: |-
                      The audience claim value. Requires Vault 1.16+.
                      The audience claim value.
                    type: string
                  identityTokenKey:
                    description: |-
                      The key to use for signing plugin workload identity tokens. If
                      not provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.
                      The key to use for signing identity tokens.
                    type: string
                  identityTokenTtl:
                    description: |-
                      The TTL of generated identity tokens in seconds. Requires Vault 1.16+.
                      The TTL of generated identity tokens in seconds.
                    type: number
                  listingVisibility:
                    description: |-
                      Specifies whether to show this mount in the UI-specific
                      listing endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.
                      Specifies whether to show this mount in the UI-specific listing endpoint
                    type: string
                  local:
                    description: |-
                      Boolean flag that can be explicitly set to true to enforce local mount in HA environment
                      Specifies if the secret backend is local only
                    type: boolean
                  maxLeaseTtlSeconds:
                    description: |-
                      Maximum possible lease duration for tokens and secrets in seconds
                      Maximum possible lease duration for secrets in seconds
                    type: number
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: |-
                      Specifies mount type specific options that are passed to the backend
                      Specifies mount type specific options that are passed to the backend
                    type: object
                    x-kubernetes-map-type: granular
                  passthroughRequestHeaders:
                    description: |-
                      List of headers to allow and pass from the request to
                      the plugin.
                      List of headers to allow and pass from the request to the plugin
                    items:
                      type: string
                    type: array
                  path:
                    description: |-
                      The unique path this backend should be mounted at. Must
                      not begin or end with a /. Defaults to aws.
                      Path to mount the backend at.
                    type: string
                  pluginVersion:
                    description: |-
                      Specifies the semantic version of the plugin to use, e.g. "v1.0.0".
                      If unspecified, the server will select any matching unversioned plugin that may have been
                      registered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.
                      Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'
                    type: string
                  region:
                    description: |-
                      The AWS region for API calls. Defaults to us-east-1.
                      The AWS region to make API calls against. Defaults to us-east-1.
                    type: string
                  roleArn:
                    description: |-
                      Role ARN to assume for plugin identity token federation. Requires Vault 1.16+.
                      Role ARN to assume for plugin identity token federation.
                    type: string
                  rotationPeriod:
                    description: |-
                      The amount of time in seconds Vault should wait before rotating the root credential.
                      A zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.
                      The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.
                    type: number
                  rotationSchedule:
                    description: |-
                      The schedule, in cron-style time format,
                      defining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.
                      The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.
                    type: string
                  rotationWindow:
                    description: |-
                      The maximum amount of time in seconds allowed to complete
                      a rotation when a scheduled token rotation occurs. The default rotation window is
                      unbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.
                      The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.
                    type: number
                  sealWrap:
                    description: |-
                      Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
                      Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability
                    type: boolean
                  stsEndpoint:
                    description: |-
                      Specifies a custom HTTP STS endpoint to use.
                      Specifies a custom HTTP STS endpoint to use.
                    type: string
                  stsFallbackEndpoints:
                    description: |-
                      Ordered list of sts_endpoints to try if the defined one fails. Requires Vault 1.19+
                      Specifies a list of custom STS fallback endpoints to use (in order).
                    items:
                      type: string
                    type: array
                  stsFallbackRegions:
                    description: |-
                      Ordered list of sts_regions matching the fallback endpoints. Should correspond in order with those endpoints. Requires Vault 1.19+
                      Specifies a list of custom STS fallback regions to use (in order).
                    items:
                      type: string
                    type: array
                  stsRegion:
                    description: |-
                      Specifies the region of the STS endpoint. Should be included if sts_endpoint is supplied. Requires Vault 1.19+
                      Specifies a custom STS region to use.
                    type: string
                  usernameTemplate:
                    description: |-
                      Template describing how dynamic usernames are generated. The username template is used to generate both IAM usernames (capped at 64 characters) and STS usernames (capped at 32 characters). If no template is provided the field defaults to the template:
                      Template describing how dynamic usernames are generated.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}