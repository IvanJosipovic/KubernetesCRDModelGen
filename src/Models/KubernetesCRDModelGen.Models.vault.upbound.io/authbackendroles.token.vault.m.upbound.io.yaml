apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: authbackendroles.token.vault.m.upbound.io
spec:
  group: token.vault.m.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: AuthBackendRole
    listKind: AuthBackendRoleList
    plural: authbackendroles
    singular: authbackendrole
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AuthBackendRole is the Schema for the AuthBackendRoles API. Manages Token auth backend roles in Vault.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AuthBackendRoleSpec defines the desired state of AuthBackendRole
            properties:
              forProvider:
                properties:
                  allowedEntityAliases:
                    description: |-
                      List of allowed entity aliases.
                      Set of allowed entity aliases for this role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedPolicies:
                    description: |-
                      List of allowed policies for given role.
                      List of allowed policies for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedPoliciesGlob:
                    description: |-
                      Set of allowed policies with glob match for given role.
                      Set of allowed policies with glob match for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  disallowedPolicies:
                    description: |-
                      List of disallowed policies for given role.
                      List of disallowed policies for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  disallowedPoliciesGlob:
                    description: |-
                      Set of disallowed policies with glob match for given role.
                      Set of disallowed policies with glob match for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  orphan:
                    description: |-
                      If true, tokens created against this policy will be orphan tokens.
                      If true, tokens created against this policy will be orphan tokens.
                    type: boolean
                  pathSuffix:
                    description: |-
                      Tokens created against this role will have the given suffix as part of their path in addition to the role name.
                      Tokens created against this role will have the given suffix as part of their path in addition to the role name.
                    type: string
                  renewable:
                    description: |-
                      Whether to disable the ability of the token to be renewed past its initial TTL.
                      Whether to disable the ability of the token to be renewed past its initial TTL.
                    type: boolean
                  roleName:
                    description: |-
                      The name of the role.
                      Name of the role.
                    type: string
                  tokenBoundCidrs:
                    description: |-
                      List of CIDR blocks; if set, specifies blocks of IP
                      addresses which can authenticate successfully, and ties the resulting token to these blocks
                      as well.
                      Specifies the blocks of IP addresses which are allowed to use the generated token
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tokenExplicitMaxTtl:
                    description: |-
                      If set, will encode an
                      explicit max TTL
                      onto the token in number of seconds. This is a hard cap even if token_ttl and
                      token_max_ttl would otherwise allow a renewal.
                      Generated Token's Explicit Maximum TTL in seconds
                    type: number
                  tokenMaxTtl:
                    description: |-
                      The maximum lifetime for generated tokens in number of seconds.
                      Its current value will be referenced at renewal time.
                      The maximum lifetime of the generated token
                    type: number
                  tokenNoDefaultPolicy:
                    description: |-
                      If set, the default policy will not be set on
                      generated tokens; otherwise it will be added to the policies set in token_policies.
                      If true, the 'default' policy will not automatically be added to generated tokens
                    type: boolean
                  tokenNumUses:
                    description: |-
                      The maximum number
                      of times a generated token may be used (within its lifetime); 0 means unlimited.
                      The maximum number of times a token may be used, a value of zero means unlimited
                    type: number
                  tokenPeriod:
                    description: |-
                      If set, indicates that the
                      token generated using this role should never expire. The token should be renewed within the
                      duration specified by this value. At each renewal, the token's TTL will be set to the
                      value of this field. Specified in seconds.
                      Generated Token's Period
                    type: number
                  tokenPolicies:
                    description: Generated Token's Policies
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tokenTtl:
                    description: |-
                      The incremental lifetime for generated tokens in number of seconds.
                      Its current value will be referenced at renewal time.
                      The initial ttl of the token to generate in seconds
                    type: number
                  tokenType:
                    description: |-
                      The type of token that should be generated. Can be service,
                      batch, or default to use the mount's tuned default (which unless changed will be
                      service tokens). For token store roles, there are two additional possibilities:
                      default-service and default-batch which specify the type to return unless the client
                      requests a different type at generation time.
                      The type of token to generate, service or batch
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowedEntityAliases:
                    description: |-
                      List of allowed entity aliases.
                      Set of allowed entity aliases for this role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedPolicies:
                    description: |-
                      List of allowed policies for given role.
                      List of allowed policies for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedPoliciesGlob:
                    description: |-
                      Set of allowed policies with glob match for given role.
                      Set of allowed policies with glob match for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  disallowedPolicies:
                    description: |-
                      List of disallowed policies for given role.
                      List of disallowed policies for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  disallowedPoliciesGlob:
                    description: |-
                      Set of disallowed policies with glob match for given role.
                      Set of disallowed policies with glob match for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  orphan:
                    description: |-
                      If true, tokens created against this policy will be orphan tokens.
                      If true, tokens created against this policy will be orphan tokens.
                    type: boolean
                  pathSuffix:
                    description: |-
                      Tokens created against this role will have the given suffix as part of their path in addition to the role name.
                      Tokens created against this role will have the given suffix as part of their path in addition to the role name.
                    type: string
                  renewable:
                    description: |-
                      Whether to disable the ability of the token to be renewed past its initial TTL.
                      Whether to disable the ability of the token to be renewed past its initial TTL.
                    type: boolean
                  roleName:
                    description: |-
                      The name of the role.
                      Name of the role.
                    type: string
                  tokenBoundCidrs:
                    description: |-
                      List of CIDR blocks; if set, specifies blocks of IP
                      addresses which can authenticate successfully, and ties the resulting token to these blocks
                      as well.
                      Specifies the blocks of IP addresses which are allowed to use the generated token
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tokenExplicitMaxTtl:
                    description: |-
                      If set, will encode an
                      explicit max TTL
                      onto the token in number of seconds. This is a hard cap even if token_ttl and
                      token_max_ttl would otherwise allow a renewal.
                      Generated Token's Explicit Maximum TTL in seconds
                    type: number
                  tokenMaxTtl:
                    description: |-
                      The maximum lifetime for generated tokens in number of seconds.
                      Its current value will be referenced at renewal time.
                      The maximum lifetime of the generated token
                    type: number
                  tokenNoDefaultPolicy:
                    description: |-
                      If set, the default policy will not be set on
                      generated tokens; otherwise it will be added to the policies set in token_policies.
                      If true, the 'default' policy will not automatically be added to generated tokens
                    type: boolean
                  tokenNumUses:
                    description: |-
                      The maximum number
                      of times a generated token may be used (within its lifetime); 0 means unlimited.
                      The maximum number of times a token may be used, a value of zero means unlimited
                    type: number
                  tokenPeriod:
                    description: |-
                      If set, indicates that the
                      token generated using this role should never expire. The token should be renewed within the
                      duration specified by this value. At each renewal, the token's TTL will be set to the
                      value of this field. Specified in seconds.
                      Generated Token's Period
                    type: number
                  tokenPolicies:
                    description: Generated Token's Policies
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tokenTtl:
                    description: |-
                      The incremental lifetime for generated tokens in number of seconds.
                      Its current value will be referenced at renewal time.
                      The initial ttl of the token to generate in seconds
                    type: number
                  tokenType:
                    description: |-
                      The type of token that should be generated. Can be service,
                      batch, or default to use the mount's tuned default (which unless changed will be
                      service tokens). For token store roles, there are two additional possibilities:
                      default-service and default-batch which specify the type to return unless the client
                      requests a different type at generation time.
                      The type of token to generate, service or batch
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.roleName is a required parameter
              rule: "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.roleName) || (has(self.initProvider) && has(self.initProvider.roleName))"
          status:
            description: AuthBackendRoleStatus defines the observed state of AuthBackendRole.
            properties:
              atProvider:
                properties:
                  allowedEntityAliases:
                    description: |-
                      List of allowed entity aliases.
                      Set of allowed entity aliases for this role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedPolicies:
                    description: |-
                      List of allowed policies for given role.
                      List of allowed policies for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  allowedPoliciesGlob:
                    description: |-
                      Set of allowed policies with glob match for given role.
                      Set of allowed policies with glob match for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  disallowedPolicies:
                    description: |-
                      List of disallowed policies for given role.
                      List of disallowed policies for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  disallowedPoliciesGlob:
                    description: |-
                      Set of disallowed policies with glob match for given role.
                      Set of disallowed policies with glob match for given role.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    type: string
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  orphan:
                    description: |-
                      If true, tokens created against this policy will be orphan tokens.
                      If true, tokens created against this policy will be orphan tokens.
                    type: boolean
                  pathSuffix:
                    description: |-
                      Tokens created against this role will have the given suffix as part of their path in addition to the role name.
                      Tokens created against this role will have the given suffix as part of their path in addition to the role name.
                    type: string
                  renewable:
                    description: |-
                      Whether to disable the ability of the token to be renewed past its initial TTL.
                      Whether to disable the ability of the token to be renewed past its initial TTL.
                    type: boolean
                  roleName:
                    description: |-
                      The name of the role.
                      Name of the role.
                    type: string
                  tokenBoundCidrs:
                    description: |-
                      List of CIDR blocks; if set, specifies blocks of IP
                      addresses which can authenticate successfully, and ties the resulting token to these blocks
                      as well.
                      Specifies the blocks of IP addresses which are allowed to use the generated token
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tokenExplicitMaxTtl:
                    description: |-
                      If set, will encode an
                      explicit max TTL
                      onto the token in number of seconds. This is a hard cap even if token_ttl and
                      token_max_ttl would otherwise allow a renewal.
                      Generated Token's Explicit Maximum TTL in seconds
                    type: number
                  tokenMaxTtl:
                    description: |-
                      The maximum lifetime for generated tokens in number of seconds.
                      Its current value will be referenced at renewal time.
                      The maximum lifetime of the generated token
                    type: number
                  tokenNoDefaultPolicy:
                    description: |-
                      If set, the default policy will not be set on
                      generated tokens; otherwise it will be added to the policies set in token_policies.
                      If true, the 'default' policy will not automatically be added to generated tokens
                    type: boolean
                  tokenNumUses:
                    description: |-
                      The maximum number
                      of times a generated token may be used (within its lifetime); 0 means unlimited.
                      The maximum number of times a token may be used, a value of zero means unlimited
                    type: number
                  tokenPeriod:
                    description: |-
                      If set, indicates that the
                      token generated using this role should never expire. The token should be renewed within the
                      duration specified by this value. At each renewal, the token's TTL will be set to the
                      value of this field. Specified in seconds.
                      Generated Token's Period
                    type: number
                  tokenPolicies:
                    description: Generated Token's Policies
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tokenTtl:
                    description: |-
                      The incremental lifetime for generated tokens in number of seconds.
                      Its current value will be referenced at renewal time.
                      The initial ttl of the token to generate in seconds
                    type: number
                  tokenType:
                    description: |-
                      The type of token that should be generated. Can be service,
                      batch, or default to use the mount's tuned default (which unless changed will be
                      service tokens). For token store roles, there are two additional possibilities:
                      default-service and default-batch which specify the type to return unless the client
                      requests a different type at generation time.
                      The type of token to generate, service or batch
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}