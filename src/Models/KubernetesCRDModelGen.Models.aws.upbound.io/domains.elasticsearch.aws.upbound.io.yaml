apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: 
  name: domains.elasticsearch.aws.upbound.io
spec:
  group: elasticsearch.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Domain
    listKind: DomainList
    plural: domains
    singular: domain
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Domain is the Schema for the Domains API. Provides an Elasticsearch Domain Policy.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DomainSpec defines the desired state of Domain
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessPolicies:
                    description: IAM policy document specifying the access policies for the domain
                    type: string
                  advancedOptions:
                    additionalProperties:
                      type: string
                    type: object
                  advancedSecurityOptions:
                    items:
                      properties:
                        enabled:
                          type: boolean
                        internalUserDatabaseEnabled:
                          type: boolean
                        masterUserOptions:
                          items:
                            properties:
                              masterUserArn:
                                type: string
                              masterUserName:
                                type: string
                              masterUserPasswordSecretRef:
                                description: A SecretKeySelector is a reference to a secret key in an arbitrary namespace.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                            type: object
                          type: array
                      required:
                      - enabled
                      type: object
                    type: array
                  autoTuneOptions:
                    items:
                      properties:
                        desiredState:
                          type: string
                        maintenanceSchedule:
                          items:
                            properties:
                              cronExpressionForRecurrence:
                                type: string
                              duration:
                                items:
                                  properties:
                                    unit:
                                      type: string
                                    value:
                                      type: number
                                  required:
                                  - unit
                                  - value
                                  type: object
                                type: array
                              startAt:
                                type: string
                            required:
                            - cronExpressionForRecurrence
                            - duration
                            - startAt
                            type: object
                          type: array
                        rollbackOnDisable:
                          type: string
                      required:
                      - desiredState
                      type: object
                    type: array
                  clusterConfig:
                    items:
                      properties:
                        coldStorageOptions:
                          items:
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          type: array
                        dedicatedMasterCount:
                          type: number
                        dedicatedMasterEnabled:
                          type: boolean
                        dedicatedMasterType:
                          type: string
                        instanceCount:
                          type: number
                        instanceType:
                          type: string
                        warmCount:
                          type: number
                        warmEnabled:
                          type: boolean
                        warmType:
                          type: string
                        zoneAwarenessConfig:
                          items:
                            properties:
                              availabilityZoneCount:
                                type: number
                            type: object
                          type: array
                        zoneAwarenessEnabled:
                          type: boolean
                      type: object
                    type: array
                  cognitoOptions:
                    items:
                      properties:
                        enabled:
                          type: boolean
                        identityPoolId:
                          type: string
                        roleArn:
                          type: string
                        userPoolId:
                          type: string
                      required:
                      - identityPoolId
                      - roleArn
                      - userPoolId
                      type: object
                    type: array
                  domainEndpointOptions:
                    items:
                      properties:
                        customEndpoint:
                          type: string
                        customEndpointCertificateArn:
                          type: string
                        customEndpointEnabled:
                          type: boolean
                        enforceHttps:
                          type: boolean
                        tlsSecurityPolicy:
                          type: string
                      type: object
                    type: array
                  ebsOptions:
                    items:
                      properties:
                        ebsEnabled:
                          type: boolean
                        iops:
                          type: number
                        volumeSize:
                          type: number
                        volumeType:
                          type: string
                      required:
                      - ebsEnabled
                      type: object
                    type: array
                  elasticsearchVersion:
                    type: string
                  encryptAtRest:
                    items:
                      properties:
                        enabled:
                          type: boolean
                        kmsKeyId:
                          type: string
                      required:
                      - enabled
                      type: object
                    type: array
                  logPublishingOptions:
                    items:
                      properties:
                        cloudwatchLogGroupArn:
                          type: string
                        enabled:
                          type: boolean
                        logType:
                          type: string
                      required:
                      - cloudwatchLogGroupArn
                      - logType
                      type: object
                    type: array
                  nodeToNodeEncryption:
                    items:
                      properties:
                        enabled:
                          type: boolean
                      required:
                      - enabled
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to be created in.
                    type: string
                  snapshotOptions:
                    items:
                      properties:
                        automatedSnapshotStartHour:
                          type: number
                      required:
                      - automatedSnapshotStartHour
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  vpcOptions:
                    items:
                      properties:
                        securityGroupIds:
                          items:
                            type: string
                          type: array
                        subnetIds:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DomainStatus defines the observed state of Domain.
            properties:
              atProvider:
                properties:
                  arn:
                    type: string
                  domainId:
                    type: string
                  endpoint:
                    type: string
                  id:
                    type: string
                  kibanaEndpoint:
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                  vpcOptions:
                    items:
                      properties:
                        availabilityZones:
                          items:
                            type: string
                          type: array
                        vpcId:
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
