apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: 
  name: virtualnodes.appmesh.aws.upbound.io
spec:
  group: appmesh.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: VirtualNode
    listKind: VirtualNodeList
    plural: virtualnodes
    singular: virtualnode
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VirtualNode is the Schema for the VirtualNodes API. Provides an AWS App Mesh virtual node resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualNodeSpec defines the desired state of VirtualNode
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  meshName:
                    description: The name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
                    type: string
                  meshNameRef:
                    description: Reference to a Mesh in appmesh to populate meshName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  meshNameSelector:
                    description: Selector for a Mesh in appmesh to populate meshName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  meshOwner:
                    description: The AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
                    type: string
                  name:
                    description: The name to use for the virtual node. Must be between 1 and 255 characters in length.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to be created in.
                    type: string
                  spec:
                    description: The virtual node specification to apply.
                    items:
                      properties:
                        backend:
                          description: The backends to which the virtual node is expected to send outbound traffic.
                          items:
                            properties:
                              virtualService:
                                description: Specifies a virtual service to use as a backend for a virtual node.
                                items:
                                  properties:
                                    clientPolicy:
                                      description: The client policy for the backend.
                                      items:
                                        properties:
                                          tls:
                                            description: The Transport Layer Security (TLS) client policy.
                                            items:
                                              properties:
                                                certificate:
                                                  description: The virtual node's client's Transport Layer Security (TLS) certificate.
                                                  items:
                                                    properties:
                                                      file:
                                                        description: A local file certificate.
                                                        items:
                                                          properties:
                                                            certificateChain:
                                                              description: The certificate chain for the certificate.
                                                              type: string
                                                            privateKey:
                                                              description: The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
                                                              type: string
                                                          required:
                                                          - certificateChain
                                                          - privateKey
                                                          type: object
                                                        type: array
                                                      sds:
                                                        description: A Secret Discovery Service certificate.
                                                        items:
                                                          properties:
                                                            secretName:
                                                              description: The name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
                                                              type: string
                                                          required:
                                                          - secretName
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                                enforce:
                                                  description: Whether the policy is enforced. Default is true.
                                                  type: boolean
                                                ports:
                                                  description: One or more ports that the policy is enforced for.
                                                  items:
                                                    type: number
                                                  type: array
                                                validation:
                                                  description: The TLS validation context.
                                                  items:
                                                    properties:
                                                      subjectAlternativeNames:
                                                        description: The SANs for a TLS validation context.
                                                        items:
                                                          properties:
                                                            match:
                                                              description: The criteria for determining a SAN's match.
                                                              items:
                                                                properties:
                                                                  exact:
                                                                    description: The values sent must match the specified values exactly.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - exact
                                                                type: object
                                                              type: array
                                                          required:
                                                          - match
                                                          type: object
                                                        type: array
                                                      trust:
                                                        description: The TLS validation context trust.
                                                        items:
                                                          properties:
                                                            acm:
                                                              description: The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
                                                              items:
                                                                properties:
                                                                  certificateAuthorityArns:
                                                                    description: One or more ACM Amazon Resource Name (ARN)s.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - certificateAuthorityArns
                                                                type: object
                                                              type: array
                                                            file:
                                                              description: A local file certificate.
                                                              items:
                                                                properties:
                                                                  certificateChain:
                                                                    description: The certificate chain for the certificate.
                                                                    type: string
                                                                required:
                                                                - certificateChain
                                                                type: object
                                                              type: array
                                                            sds:
                                                              description: A Secret Discovery Service certificate.
                                                              items:
                                                                properties:
                                                                  secretName:
                                                                    description: The name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
                                                                    type: string
                                                                required:
                                                                - secretName
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - trust
                                                    type: object
                                                  type: array
                                              required:
                                              - validation
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    virtualServiceName:
                                      description: The name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
                                      type: string
                                  required:
                                  - virtualServiceName
                                  type: object
                                type: array
                            required:
                            - virtualService
                            type: object
                          type: array
                        backendDefaults:
                          description: The defaults for backends.
                          items:
                            properties:
                              clientPolicy:
                                description: The client policy for the backend.
                                items:
                                  properties:
                                    tls:
                                      description: The Transport Layer Security (TLS) client policy.
                                      items:
                                        properties:
                                          certificate:
                                            description: The virtual node's client's Transport Layer Security (TLS) certificate.
                                            items:
                                              properties:
                                                file:
                                                  description: A local file certificate.
                                                  items:
                                                    properties:
                                                      certificateChain:
                                                        description: The certificate chain for the certificate.
                                                        type: string
                                                      privateKey:
                                                        description: The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
                                                        type: string
                                                    required:
                                                    - certificateChain
                                                    - privateKey
                                                    type: object
                                                  type: array
                                                sds:
                                                  description: A Secret Discovery Service certificate.
                                                  items:
                                                    properties:
                                                      secretName:
                                                        description: The name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
                                                        type: string
                                                    required:
                                                    - secretName
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          enforce:
                                            description: Whether the policy is enforced. Default is true.
                                            type: boolean
                                          ports:
                                            description: One or more ports that the policy is enforced for.
                                            items:
                                              type: number
                                            type: array
                                          validation:
                                            description: The TLS validation context.
                                            items:
                                              properties:
                                                subjectAlternativeNames:
                                                  description: The SANs for a TLS validation context.
                                                  items:
                                                    properties:
                                                      match:
                                                        description: The criteria for determining a SAN's match.
                                                        items:
                                                          properties:
                                                            exact:
                                                              description: The values sent must match the specified values exactly.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - exact
                                                          type: object
                                                        type: array
                                                    required:
                                                    - match
                                                    type: object
                                                  type: array
                                                trust:
                                                  description: The TLS validation context trust.
                                                  items:
                                                    properties:
                                                      acm:
                                                        description: The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
                                                        items:
                                                          properties:
                                                            certificateAuthorityArns:
                                                              description: One or more ACM Amazon Resource Name (ARN)s.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - certificateAuthorityArns
                                                          type: object
                                                        type: array
                                                      file:
                                                        description: A local file certificate.
                                                        items:
                                                          properties:
                                                            certificateChain:
                                                              description: The certificate chain for the certificate.
                                                              type: string
                                                          required:
                                                          - certificateChain
                                                          type: object
                                                        type: array
                                                      sds:
                                                        description: A Secret Discovery Service certificate.
                                                        items:
                                                          properties:
                                                            secretName:
                                                              description: The name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
                                                              type: string
                                                          required:
                                                          - secretName
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - trust
                                              type: object
                                            type: array
                                        required:
                                        - validation
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        listener:
                          description: The listeners from which the virtual node is expected to receive inbound traffic.
                          items:
                            properties:
                              connectionPool:
                                description: The connection pool information for the listener.
                                items:
                                  properties:
                                    grpc:
                                      description: Connection pool information for gRPC listeners.
                                      items:
                                        properties:
                                          maxRequests:
                                            description: Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
                                            type: number
                                        required:
                                        - maxRequests
                                        type: object
                                      type: array
                                    http:
                                      description: Connection pool information for HTTP listeners.
                                      items:
                                        properties:
                                          maxConnections:
                                            description: Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
                                            type: number
                                          maxPendingRequests:
                                            description: Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
                                            type: number
                                        required:
                                        - maxConnections
                                        type: object
                                      type: array
                                    http2:
                                      description: Connection pool information for HTTP2 listeners.
                                      items:
                                        properties:
                                          maxRequests:
                                            description: Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
                                            type: number
                                        required:
                                        - maxRequests
                                        type: object
                                      type: array
                                    tcp:
                                      description: Connection pool information for TCP listeners.
                                      items:
                                        properties:
                                          maxConnections:
                                            description: Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
                                            type: number
                                        required:
                                        - maxConnections
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              healthCheck:
                                description: The health check information for the listener.
                                items:
                                  properties:
                                    healthyThreshold:
                                      description: The number of consecutive successful health checks that must occur before declaring listener healthy.
                                      type: number
                                    intervalMillis:
                                      description: The time period in milliseconds between each health check execution.
                                      type: number
                                    path:
                                      description: The file path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
                                      type: string
                                    port:
                                      description: The port used for the port mapping.
                                      type: number
                                    protocol:
                                      description: The protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
                                      type: string
                                    timeoutMillis:
                                      description: The amount of time to wait when receiving a response from the health check, in milliseconds.
                                      type: number
                                    unhealthyThreshold:
                                      description: The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
                                      type: number
                                  required:
                                  - healthyThreshold
                                  - intervalMillis
                                  - protocol
                                  - timeoutMillis
                                  - unhealthyThreshold
                                  type: object
                                type: array
                              outlierDetection:
                                description: The outlier detection information for the listener.
                                items:
                                  properties:
                                    baseEjectionDuration:
                                      description: The base amount of time for which a host is ejected.
                                      items:
                                        properties:
                                          unit:
                                            description: 'The unit of time. Valid values: ms, s.'
                                            type: string
                                          value:
                                            description: The number of time units. Minimum value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                    interval:
                                      description: The time interval between ejection sweep analysis.
                                      items:
                                        properties:
                                          unit:
                                            description: 'The unit of time. Valid values: ms, s.'
                                            type: string
                                          value:
                                            description: The number of time units. Minimum value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                    maxEjectionPercent:
                                      description: Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value. Minimum value of 0. Maximum value of 100.
                                      type: number
                                    maxServerErrors:
                                      description: Number of consecutive 5xx errors required for ejection. Minimum value of 1.
                                      type: number
                                  required:
                                  - baseEjectionDuration
                                  - interval
                                  - maxEjectionPercent
                                  - maxServerErrors
                                  type: object
                                type: array
                              portMapping:
                                description: The port mapping information for the listener.
                                items:
                                  properties:
                                    port:
                                      description: The port used for the port mapping.
                                      type: number
                                    protocol:
                                      description: The protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
                                      type: string
                                  required:
                                  - port
                                  - protocol
                                  type: object
                                type: array
                              timeout:
                                description: Timeouts for different protocols.
                                items:
                                  properties:
                                    grpc:
                                      description: Connection pool information for gRPC listeners.
                                      items:
                                        properties:
                                          idle:
                                            description: The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
                                            items:
                                              properties:
                                                unit:
                                                  description: 'The unit of time. Valid values: ms, s.'
                                                  type: string
                                                value:
                                                  description: The number of time units. Minimum value of 0.
                                                  type: number
                                              required:
                                              - unit
                                              - value
                                              type: object
                                            type: array
                                          perRequest:
                                            description: The per request timeout.
                                            items:
                                              properties:
                                                unit:
                                                  description: 'The unit of time. Valid values: ms, s.'
                                                  type: string
                                                value:
                                                  description: The number of time units. Minimum value of 0.
                                                  type: number
                                              required:
                                              - unit
                                              - value
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    http:
                                      description: Connection pool information for HTTP listeners.
                                      items:
                                        properties:
                                          idle:
                                            description: The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
                                            items:
                                              properties:
                                                unit:
                                                  description: 'The unit of time. Valid values: ms, s.'
                                                  type: string
                                                value:
                                                  description: The number of time units. Minimum value of 0.
                                                  type: number
                                              required:
                                              - unit
                                              - value
                                              type: object
                                            type: array
                                          perRequest:
                                            description: The per request timeout.
                                            items:
                                              properties:
                                                unit:
                                                  description: 'The unit of time. Valid values: ms, s.'
                                                  type: string
                                                value:
                                                  description: The number of time units. Minimum value of 0.
                                                  type: number
                                              required:
                                              - unit
                                              - value
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    http2:
                                      description: Connection pool information for HTTP2 listeners.
                                      items:
                                        properties:
                                          idle:
                                            description: The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
                                            items:
                                              properties:
                                                unit:
                                                  description: 'The unit of time. Valid values: ms, s.'
                                                  type: string
                                                value:
                                                  description: The number of time units. Minimum value of 0.
                                                  type: number
                                              required:
                                              - unit
                                              - value
                                              type: object
                                            type: array
                                          perRequest:
                                            description: The per request timeout.
                                            items:
                                              properties:
                                                unit:
                                                  description: 'The unit of time. Valid values: ms, s.'
                                                  type: string
                                                value:
                                                  description: The number of time units. Minimum value of 0.
                                                  type: number
                                              required:
                                              - unit
                                              - value
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    tcp:
                                      description: Connection pool information for TCP listeners.
                                      items:
                                        properties:
                                          idle:
                                            description: The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
                                            items:
                                              properties:
                                                unit:
                                                  description: 'The unit of time. Valid values: ms, s.'
                                                  type: string
                                                value:
                                                  description: The number of time units. Minimum value of 0.
                                                  type: number
                                              required:
                                              - unit
                                              - value
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              tls:
                                description: The Transport Layer Security (TLS) client policy.
                                items:
                                  properties:
                                    certificate:
                                      description: The virtual node's client's Transport Layer Security (TLS) certificate.
                                      items:
                                        properties:
                                          acm:
                                            description: The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
                                            items:
                                              properties:
                                                certificateArn:
                                                  description: The Amazon Resource Name (ARN) for the certificate.
                                                  type: string
                                              required:
                                              - certificateArn
                                              type: object
                                            type: array
                                          file:
                                            description: A local file certificate.
                                            items:
                                              properties:
                                                certificateChain:
                                                  description: The certificate chain for the certificate.
                                                  type: string
                                                privateKey:
                                                  description: The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
                                                  type: string
                                              required:
                                              - certificateChain
                                              - privateKey
                                              type: object
                                            type: array
                                          sds:
                                            description: A Secret Discovery Service certificate.
                                            items:
                                              properties:
                                                secretName:
                                                  description: The name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
                                                  type: string
                                              required:
                                              - secretName
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    mode:
                                      description: "The listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT."
                                      type: string
                                    validation:
                                      description: The TLS validation context.
                                      items:
                                        properties:
                                          subjectAlternativeNames:
                                            description: The SANs for a TLS validation context.
                                            items:
                                              properties:
                                                match:
                                                  description: The criteria for determining a SAN's match.
                                                  items:
                                                    properties:
                                                      exact:
                                                        description: The values sent must match the specified values exactly.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - exact
                                                    type: object
                                                  type: array
                                              required:
                                              - match
                                              type: object
                                            type: array
                                          trust:
                                            description: The TLS validation context trust.
                                            items:
                                              properties:
                                                file:
                                                  description: A local file certificate.
                                                  items:
                                                    properties:
                                                      certificateChain:
                                                        description: The certificate chain for the certificate.
                                                        type: string
                                                    required:
                                                    - certificateChain
                                                    type: object
                                                  type: array
                                                sds:
                                                  description: A Secret Discovery Service certificate.
                                                  items:
                                                    properties:
                                                      secretName:
                                                        description: The name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
                                                        type: string
                                                    required:
                                                    - secretName
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                        required:
                                        - trust
                                        type: object
                                      type: array
                                  required:
                                  - certificate
                                  - mode
                                  type: object
                                type: array
                            required:
                            - portMapping
                            type: object
                          type: array
                        logging:
                          description: The inbound and outbound access logging information for the virtual node.
                          items:
                            properties:
                              accessLog:
                                description: The access log configuration for a virtual node.
                                items:
                                  properties:
                                    file:
                                      description: A local file certificate.
                                      items:
                                        properties:
                                          path:
                                            description: The file path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
                                            type: string
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        serviceDiscovery:
                          description: The service discovery information for the virtual node.
                          items:
                            properties:
                              awsCloudMap:
                                description: Specifies any AWS Cloud Map information for the virtual node.
                                items:
                                  properties:
                                    attributes:
                                      additionalProperties:
                                        type: string
                                      description: A string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
                                      type: object
                                    namespaceName:
                                      description: The name of the AWS Cloud Map namespace to use. Use the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
                                      type: string
                                    namespaceNameRef:
                                      description: Reference to a HTTPNamespace in servicediscovery to populate namespaceName.
                                      properties:
                                        name:
                                          description: Name of the referenced object.
                                          type: string
                                        policy:
                                          description: Policies for referencing.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    namespaceNameSelector:
                                      description: Selector for a HTTPNamespace in servicediscovery to populate namespaceName.
                                      properties:
                                        matchControllerRef:
                                          description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object with matching labels is selected.
                                          type: object
                                        policy:
                                          description: Policies for selection.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      type: object
                                    serviceName:
                                      description: attribute of the dns object to hostname.
                                      type: string
                                  required:
                                  - serviceName
                                  type: object
                                type: array
                              dns:
                                description: Specifies the DNS service name for the virtual node.
                                items:
                                  properties:
                                    hostname:
                                      description: The DNS host name for your virtual node.
                                      type: string
                                  required:
                                  - hostname
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - name
                - region
                - spec
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VirtualNodeStatus defines the observed state of VirtualNode.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the virtual node.
                    type: string
                  createdDate:
                    description: The creation date of the virtual node.
                    type: string
                  id:
                    description: The ID of the virtual node.
                    type: string
                  lastUpdatedDate:
                    description: The last update date of the virtual node.
                    type: string
                  resourceOwner:
                    description: The resource owner's AWS account ID.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
