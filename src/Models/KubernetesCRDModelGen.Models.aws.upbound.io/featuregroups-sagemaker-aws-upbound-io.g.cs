using k8s;
using k8s.Models;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;

namespace KubernetesCRDModelGen.Models.sagemaker.aws.upbound.io;
/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderFeatureDefinitionCollectionConfigVectorConfig
{
    /// <summary></summary>
    [JsonPropertyName("dimension")]
    public double? Dimension { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderFeatureDefinitionCollectionConfig
{
    /// <summary></summary>
    [JsonPropertyName("vectorConfig")]
    public IList<V1beta1FeatureGroupSpecForProviderFeatureDefinitionCollectionConfigVectorConfig>? VectorConfig { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderFeatureDefinition
{
    /// <summary></summary>
    [JsonPropertyName("collectionConfig")]
    public IList<V1beta1FeatureGroupSpecForProviderFeatureDefinitionCollectionConfig>? CollectionConfig { get; set; }

    /// <summary></summary>
    [JsonPropertyName("collectionType")]
    public string? CollectionType { get; set; }

    /// <summary>The name of a feature. feature_name cannot be any of the following: is_deleted, write_time, api_invocation_time.</summary>
    [JsonPropertyName("featureName")]
    public string? FeatureName { get; set; }

    /// <summary>The value type of a feature. Valid values are Integral, Fractional, or String.</summary>
    [JsonPropertyName("featureType")]
    public string? FeatureType { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderOfflineStoreConfigDataCatalogConfig
{
    /// <summary>The name of the Glue table catalog.</summary>
    [JsonPropertyName("catalog")]
    public string? Catalog { get; set; }

    /// <summary>The name of the Glue table database.</summary>
    [JsonPropertyName("database")]
    public string? Database { get; set; }

    /// <summary>The name of the Glue table.</summary>
    [JsonPropertyName("tableName")]
    public string? TableName { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderOfflineStoreConfigS3StorageConfig
{
    /// <summary>The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.</summary>
    [JsonPropertyName("kmsKeyId")]
    public string? KmsKeyId { get; set; }

    /// <summary>The S3 path where offline records are written.</summary>
    [JsonPropertyName("resolvedOutputS3Uri")]
    public string? ResolvedOutputS3Uri { get; set; }

    /// <summary>The S3 URI, or location in Amazon S3, of OfflineStore.</summary>
    [JsonPropertyName("s3Uri")]
    public string? S3Uri { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderOfflineStoreConfig
{
    /// <summary>The meta data of the Glue table that is autogenerated when an OfflineStore is created. See Data Catalog Config Below.</summary>
    [JsonPropertyName("dataCatalogConfig")]
    public IList<V1beta1FeatureGroupSpecForProviderOfflineStoreConfigDataCatalogConfig>? DataCatalogConfig { get; set; }

    /// <summary>Set to true to turn Online Store On.</summary>
    [JsonPropertyName("disableGlueTableCreation")]
    public bool? DisableGlueTableCreation { get; set; }

    /// <summary>The Amazon Simple Storage (Amazon S3) location of OfflineStore. See S3 Storage Config Below.</summary>
    [JsonPropertyName("s3StorageConfig")]
    public IList<V1beta1FeatureGroupSpecForProviderOfflineStoreConfigS3StorageConfig>? S3StorageConfig { get; set; }

    /// <summary>Format for the offline store table. Supported formats are Glue (Default) and Apache Iceberg (https://iceberg.apache.org/).</summary>
    [JsonPropertyName("tableFormat")]
    public string? TableFormat { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderOnlineStoreConfigSecurityConfig
{
    /// <summary>The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.</summary>
    [JsonPropertyName("kmsKeyId")]
    public string? KmsKeyId { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderOnlineStoreConfigTtlDuration
{
    /// <summary>TtlDuration time unit. Valid values are Seconds, Minutes, Hours, Days, or Weeks.</summary>
    [JsonPropertyName("unit")]
    public string? Unit { get; set; }

    /// <summary>TtlDuration time value.</summary>
    [JsonPropertyName("value")]
    public double? Value { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderOnlineStoreConfig
{
    /// <summary>Set to true to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.</summary>
    [JsonPropertyName("enableOnlineStore")]
    public bool? EnableOnlineStore { get; set; }

    /// <summary>Security config for at-rest encryption of your OnlineStore. See Security Config Below.</summary>
    [JsonPropertyName("securityConfig")]
    public IList<V1beta1FeatureGroupSpecForProviderOnlineStoreConfigSecurityConfig>? SecurityConfig { get; set; }

    /// <summary>Option for different tiers of low latency storage for real-time data retrieval. Valid values are Standard, or InMemory.</summary>
    [JsonPropertyName("storageType")]
    public string? StorageType { get; set; }

    /// <summary>Time to live duration, where the record is hard deleted after the expiration time is reached; ExpiresAt = EventTime + TtlDuration.. See TTl Duration Below.</summary>
    [JsonPropertyName("ttlDuration")]
    public IList<V1beta1FeatureGroupSpecForProviderOnlineStoreConfigTtlDuration>? TtlDuration { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderRoleArnRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Reference to a Role in iam to populate roleArn.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderRoleArnRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1FeatureGroupSpecForProviderRoleArnRefPolicy? Policy { get; set; }
}

/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderRoleArnSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Selector for a Role in iam to populate roleArn.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderRoleArnSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1FeatureGroupSpecForProviderRoleArnSelectorPolicy? Policy { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProviderThroughputConfig
{
    /// <summary></summary>
    [JsonPropertyName("provisionedReadCapacityUnits")]
    public double? ProvisionedReadCapacityUnits { get; set; }

    /// <summary></summary>
    [JsonPropertyName("provisionedWriteCapacityUnits")]
    public double? ProvisionedWriteCapacityUnits { get; set; }

    /// <summary></summary>
    [JsonPropertyName("throughputMode")]
    public string? ThroughputMode { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecForProvider
{
    /// <summary>A free-form description of a Feature Group.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; set; }

    /// <summary>The name of the feature that stores the EventTime of a Record in a Feature Group.</summary>
    [JsonPropertyName("eventTimeFeatureName")]
    public string? EventTimeFeatureName { get; set; }

    /// <summary>A list of Feature names and types. See Feature Definition Below.</summary>
    [JsonPropertyName("featureDefinition")]
    public IList<V1beta1FeatureGroupSpecForProviderFeatureDefinition>? FeatureDefinition { get; set; }

    /// <summary>The Offline Feature Store Configuration. See Offline Store Config Below.</summary>
    [JsonPropertyName("offlineStoreConfig")]
    public IList<V1beta1FeatureGroupSpecForProviderOfflineStoreConfig>? OfflineStoreConfig { get; set; }

    /// <summary>The Online Feature Store Configuration. See Online Store Config Below.</summary>
    [JsonPropertyName("onlineStoreConfig")]
    public IList<V1beta1FeatureGroupSpecForProviderOnlineStoreConfig>? OnlineStoreConfig { get; set; }

    /// <summary>The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.</summary>
    [JsonPropertyName("recordIdentifierFeatureName")]
    public string? RecordIdentifierFeatureName { get; set; }

    /// <summary>Region where this resource will be managed. Defaults to the Region set in the provider configuration. Region is the region you'd like your resource to be created in.</summary>
    [JsonPropertyName("region")]
    public string Region { get; set; }

    /// <summary>The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an offline_store_config is provided.</summary>
    [JsonPropertyName("roleArn")]
    public string? RoleArn { get; set; }

    /// <summary>Reference to a Role in iam to populate roleArn.</summary>
    [JsonPropertyName("roleArnRef")]
    public V1beta1FeatureGroupSpecForProviderRoleArnRef? RoleArnRef { get; set; }

    /// <summary>Selector for a Role in iam to populate roleArn.</summary>
    [JsonPropertyName("roleArnSelector")]
    public V1beta1FeatureGroupSpecForProviderRoleArnSelector? RoleArnSelector { get; set; }

    /// <summary>Key-value map of resource tags.</summary>
    [JsonPropertyName("tags")]
    public IDictionary<string, string>? Tags { get; set; }

    /// <summary></summary>
    [JsonPropertyName("throughputConfig")]
    public IList<V1beta1FeatureGroupSpecForProviderThroughputConfig>? ThroughputConfig { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderFeatureDefinitionCollectionConfigVectorConfig
{
    /// <summary></summary>
    [JsonPropertyName("dimension")]
    public double? Dimension { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderFeatureDefinitionCollectionConfig
{
    /// <summary></summary>
    [JsonPropertyName("vectorConfig")]
    public IList<V1beta1FeatureGroupSpecInitProviderFeatureDefinitionCollectionConfigVectorConfig>? VectorConfig { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderFeatureDefinition
{
    /// <summary></summary>
    [JsonPropertyName("collectionConfig")]
    public IList<V1beta1FeatureGroupSpecInitProviderFeatureDefinitionCollectionConfig>? CollectionConfig { get; set; }

    /// <summary></summary>
    [JsonPropertyName("collectionType")]
    public string? CollectionType { get; set; }

    /// <summary>The name of a feature. feature_name cannot be any of the following: is_deleted, write_time, api_invocation_time.</summary>
    [JsonPropertyName("featureName")]
    public string? FeatureName { get; set; }

    /// <summary>The value type of a feature. Valid values are Integral, Fractional, or String.</summary>
    [JsonPropertyName("featureType")]
    public string? FeatureType { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderOfflineStoreConfigDataCatalogConfig
{
    /// <summary>The name of the Glue table catalog.</summary>
    [JsonPropertyName("catalog")]
    public string? Catalog { get; set; }

    /// <summary>The name of the Glue table database.</summary>
    [JsonPropertyName("database")]
    public string? Database { get; set; }

    /// <summary>The name of the Glue table.</summary>
    [JsonPropertyName("tableName")]
    public string? TableName { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderOfflineStoreConfigS3StorageConfig
{
    /// <summary>The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.</summary>
    [JsonPropertyName("kmsKeyId")]
    public string? KmsKeyId { get; set; }

    /// <summary>The S3 path where offline records are written.</summary>
    [JsonPropertyName("resolvedOutputS3Uri")]
    public string? ResolvedOutputS3Uri { get; set; }

    /// <summary>The S3 URI, or location in Amazon S3, of OfflineStore.</summary>
    [JsonPropertyName("s3Uri")]
    public string? S3Uri { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderOfflineStoreConfig
{
    /// <summary>The meta data of the Glue table that is autogenerated when an OfflineStore is created. See Data Catalog Config Below.</summary>
    [JsonPropertyName("dataCatalogConfig")]
    public IList<V1beta1FeatureGroupSpecInitProviderOfflineStoreConfigDataCatalogConfig>? DataCatalogConfig { get; set; }

    /// <summary>Set to true to turn Online Store On.</summary>
    [JsonPropertyName("disableGlueTableCreation")]
    public bool? DisableGlueTableCreation { get; set; }

    /// <summary>The Amazon Simple Storage (Amazon S3) location of OfflineStore. See S3 Storage Config Below.</summary>
    [JsonPropertyName("s3StorageConfig")]
    public IList<V1beta1FeatureGroupSpecInitProviderOfflineStoreConfigS3StorageConfig>? S3StorageConfig { get; set; }

    /// <summary>Format for the offline store table. Supported formats are Glue (Default) and Apache Iceberg (https://iceberg.apache.org/).</summary>
    [JsonPropertyName("tableFormat")]
    public string? TableFormat { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderOnlineStoreConfigSecurityConfig
{
    /// <summary>The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.</summary>
    [JsonPropertyName("kmsKeyId")]
    public string? KmsKeyId { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderOnlineStoreConfigTtlDuration
{
    /// <summary>TtlDuration time unit. Valid values are Seconds, Minutes, Hours, Days, or Weeks.</summary>
    [JsonPropertyName("unit")]
    public string? Unit { get; set; }

    /// <summary>TtlDuration time value.</summary>
    [JsonPropertyName("value")]
    public double? Value { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderOnlineStoreConfig
{
    /// <summary>Set to true to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.</summary>
    [JsonPropertyName("enableOnlineStore")]
    public bool? EnableOnlineStore { get; set; }

    /// <summary>Security config for at-rest encryption of your OnlineStore. See Security Config Below.</summary>
    [JsonPropertyName("securityConfig")]
    public IList<V1beta1FeatureGroupSpecInitProviderOnlineStoreConfigSecurityConfig>? SecurityConfig { get; set; }

    /// <summary>Option for different tiers of low latency storage for real-time data retrieval. Valid values are Standard, or InMemory.</summary>
    [JsonPropertyName("storageType")]
    public string? StorageType { get; set; }

    /// <summary>Time to live duration, where the record is hard deleted after the expiration time is reached; ExpiresAt = EventTime + TtlDuration.. See TTl Duration Below.</summary>
    [JsonPropertyName("ttlDuration")]
    public IList<V1beta1FeatureGroupSpecInitProviderOnlineStoreConfigTtlDuration>? TtlDuration { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderRoleArnRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Reference to a Role in iam to populate roleArn.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderRoleArnRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1FeatureGroupSpecInitProviderRoleArnRefPolicy? Policy { get; set; }
}

/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderRoleArnSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Selector for a Role in iam to populate roleArn.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderRoleArnSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1FeatureGroupSpecInitProviderRoleArnSelectorPolicy? Policy { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProviderThroughputConfig
{
    /// <summary></summary>
    [JsonPropertyName("provisionedReadCapacityUnits")]
    public double? ProvisionedReadCapacityUnits { get; set; }

    /// <summary></summary>
    [JsonPropertyName("provisionedWriteCapacityUnits")]
    public double? ProvisionedWriteCapacityUnits { get; set; }

    /// <summary></summary>
    [JsonPropertyName("throughputMode")]
    public string? ThroughputMode { get; set; }
}

/// <summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecInitProvider
{
    /// <summary>A free-form description of a Feature Group.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; set; }

    /// <summary>The name of the feature that stores the EventTime of a Record in a Feature Group.</summary>
    [JsonPropertyName("eventTimeFeatureName")]
    public string? EventTimeFeatureName { get; set; }

    /// <summary>A list of Feature names and types. See Feature Definition Below.</summary>
    [JsonPropertyName("featureDefinition")]
    public IList<V1beta1FeatureGroupSpecInitProviderFeatureDefinition>? FeatureDefinition { get; set; }

    /// <summary>The Offline Feature Store Configuration. See Offline Store Config Below.</summary>
    [JsonPropertyName("offlineStoreConfig")]
    public IList<V1beta1FeatureGroupSpecInitProviderOfflineStoreConfig>? OfflineStoreConfig { get; set; }

    /// <summary>The Online Feature Store Configuration. See Online Store Config Below.</summary>
    [JsonPropertyName("onlineStoreConfig")]
    public IList<V1beta1FeatureGroupSpecInitProviderOnlineStoreConfig>? OnlineStoreConfig { get; set; }

    /// <summary>The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.</summary>
    [JsonPropertyName("recordIdentifierFeatureName")]
    public string? RecordIdentifierFeatureName { get; set; }

    /// <summary>The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an offline_store_config is provided.</summary>
    [JsonPropertyName("roleArn")]
    public string? RoleArn { get; set; }

    /// <summary>Reference to a Role in iam to populate roleArn.</summary>
    [JsonPropertyName("roleArnRef")]
    public V1beta1FeatureGroupSpecInitProviderRoleArnRef? RoleArnRef { get; set; }

    /// <summary>Selector for a Role in iam to populate roleArn.</summary>
    [JsonPropertyName("roleArnSelector")]
    public V1beta1FeatureGroupSpecInitProviderRoleArnSelector? RoleArnSelector { get; set; }

    /// <summary>Key-value map of resource tags.</summary>
    [JsonPropertyName("tags")]
    public IDictionary<string, string>? Tags { get; set; }

    /// <summary></summary>
    [JsonPropertyName("throughputConfig")]
    public IList<V1beta1FeatureGroupSpecInitProviderThroughputConfig>? ThroughputConfig { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecProviderConfigRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecProviderConfigRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1FeatureGroupSpecProviderConfigRefPolicy? Policy { get; set; }
}

/// <summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpecWriteConnectionSecretToRef
{
    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Namespace of the secret.</summary>
    [JsonPropertyName("namespace")]
    public string Namespace { get; set; }
}

/// <summary>FeatureGroupSpec defines the desired state of FeatureGroup</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupSpec
{
    /// <summary>DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223</summary>
    [JsonPropertyName("deletionPolicy")]
    public string? DeletionPolicy { get; set; }

    /// <summary></summary>
    [JsonPropertyName("forProvider")]
    public V1beta1FeatureGroupSpecForProvider ForProvider { get; set; }

    /// <summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>
    [JsonPropertyName("initProvider")]
    public V1beta1FeatureGroupSpecInitProvider? InitProvider { get; set; }

    /// <summary>THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md</summary>
    [JsonPropertyName("managementPolicies")]
    public IList<string>? ManagementPolicies { get; set; }

    /// <summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>
    [JsonPropertyName("providerConfigRef")]
    public V1beta1FeatureGroupSpecProviderConfigRef? ProviderConfigRef { get; set; }

    /// <summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>
    [JsonPropertyName("writeConnectionSecretToRef")]
    public V1beta1FeatureGroupSpecWriteConnectionSecretToRef? WriteConnectionSecretToRef { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderFeatureDefinitionCollectionConfigVectorConfig
{
    /// <summary></summary>
    [JsonPropertyName("dimension")]
    public double? Dimension { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderFeatureDefinitionCollectionConfig
{
    /// <summary></summary>
    [JsonPropertyName("vectorConfig")]
    public IList<V1beta1FeatureGroupStatusAtProviderFeatureDefinitionCollectionConfigVectorConfig>? VectorConfig { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderFeatureDefinition
{
    /// <summary></summary>
    [JsonPropertyName("collectionConfig")]
    public IList<V1beta1FeatureGroupStatusAtProviderFeatureDefinitionCollectionConfig>? CollectionConfig { get; set; }

    /// <summary></summary>
    [JsonPropertyName("collectionType")]
    public string? CollectionType { get; set; }

    /// <summary>The name of a feature. feature_name cannot be any of the following: is_deleted, write_time, api_invocation_time.</summary>
    [JsonPropertyName("featureName")]
    public string? FeatureName { get; set; }

    /// <summary>The value type of a feature. Valid values are Integral, Fractional, or String.</summary>
    [JsonPropertyName("featureType")]
    public string? FeatureType { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderOfflineStoreConfigDataCatalogConfig
{
    /// <summary>The name of the Glue table catalog.</summary>
    [JsonPropertyName("catalog")]
    public string? Catalog { get; set; }

    /// <summary>The name of the Glue table database.</summary>
    [JsonPropertyName("database")]
    public string? Database { get; set; }

    /// <summary>The name of the Glue table.</summary>
    [JsonPropertyName("tableName")]
    public string? TableName { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderOfflineStoreConfigS3StorageConfig
{
    /// <summary>The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.</summary>
    [JsonPropertyName("kmsKeyId")]
    public string? KmsKeyId { get; set; }

    /// <summary>The S3 path where offline records are written.</summary>
    [JsonPropertyName("resolvedOutputS3Uri")]
    public string? ResolvedOutputS3Uri { get; set; }

    /// <summary>The S3 URI, or location in Amazon S3, of OfflineStore.</summary>
    [JsonPropertyName("s3Uri")]
    public string? S3Uri { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderOfflineStoreConfig
{
    /// <summary>The meta data of the Glue table that is autogenerated when an OfflineStore is created. See Data Catalog Config Below.</summary>
    [JsonPropertyName("dataCatalogConfig")]
    public IList<V1beta1FeatureGroupStatusAtProviderOfflineStoreConfigDataCatalogConfig>? DataCatalogConfig { get; set; }

    /// <summary>Set to true to turn Online Store On.</summary>
    [JsonPropertyName("disableGlueTableCreation")]
    public bool? DisableGlueTableCreation { get; set; }

    /// <summary>The Amazon Simple Storage (Amazon S3) location of OfflineStore. See S3 Storage Config Below.</summary>
    [JsonPropertyName("s3StorageConfig")]
    public IList<V1beta1FeatureGroupStatusAtProviderOfflineStoreConfigS3StorageConfig>? S3StorageConfig { get; set; }

    /// <summary>Format for the offline store table. Supported formats are Glue (Default) and Apache Iceberg (https://iceberg.apache.org/).</summary>
    [JsonPropertyName("tableFormat")]
    public string? TableFormat { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderOnlineStoreConfigSecurityConfig
{
    /// <summary>The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.</summary>
    [JsonPropertyName("kmsKeyId")]
    public string? KmsKeyId { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderOnlineStoreConfigTtlDuration
{
    /// <summary>TtlDuration time unit. Valid values are Seconds, Minutes, Hours, Days, or Weeks.</summary>
    [JsonPropertyName("unit")]
    public string? Unit { get; set; }

    /// <summary>TtlDuration time value.</summary>
    [JsonPropertyName("value")]
    public double? Value { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderOnlineStoreConfig
{
    /// <summary>Set to true to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.</summary>
    [JsonPropertyName("enableOnlineStore")]
    public bool? EnableOnlineStore { get; set; }

    /// <summary>Security config for at-rest encryption of your OnlineStore. See Security Config Below.</summary>
    [JsonPropertyName("securityConfig")]
    public IList<V1beta1FeatureGroupStatusAtProviderOnlineStoreConfigSecurityConfig>? SecurityConfig { get; set; }

    /// <summary>Option for different tiers of low latency storage for real-time data retrieval. Valid values are Standard, or InMemory.</summary>
    [JsonPropertyName("storageType")]
    public string? StorageType { get; set; }

    /// <summary>Time to live duration, where the record is hard deleted after the expiration time is reached; ExpiresAt = EventTime + TtlDuration.. See TTl Duration Below.</summary>
    [JsonPropertyName("ttlDuration")]
    public IList<V1beta1FeatureGroupStatusAtProviderOnlineStoreConfigTtlDuration>? TtlDuration { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProviderThroughputConfig
{
    /// <summary></summary>
    [JsonPropertyName("provisionedReadCapacityUnits")]
    public double? ProvisionedReadCapacityUnits { get; set; }

    /// <summary></summary>
    [JsonPropertyName("provisionedWriteCapacityUnits")]
    public double? ProvisionedWriteCapacityUnits { get; set; }

    /// <summary></summary>
    [JsonPropertyName("throughputMode")]
    public string? ThroughputMode { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusAtProvider
{
    /// <summary>The Amazon Resource Name (ARN) assigned by AWS to this feature_group.</summary>
    [JsonPropertyName("arn")]
    public string? Arn { get; set; }

    /// <summary>A free-form description of a Feature Group.</summary>
    [JsonPropertyName("description")]
    public string? Description { get; set; }

    /// <summary>The name of the feature that stores the EventTime of a Record in a Feature Group.</summary>
    [JsonPropertyName("eventTimeFeatureName")]
    public string? EventTimeFeatureName { get; set; }

    /// <summary>A list of Feature names and types. See Feature Definition Below.</summary>
    [JsonPropertyName("featureDefinition")]
    public IList<V1beta1FeatureGroupStatusAtProviderFeatureDefinition>? FeatureDefinition { get; set; }

    /// <summary></summary>
    [JsonPropertyName("id")]
    public string? Id { get; set; }

    /// <summary>The Offline Feature Store Configuration. See Offline Store Config Below.</summary>
    [JsonPropertyName("offlineStoreConfig")]
    public IList<V1beta1FeatureGroupStatusAtProviderOfflineStoreConfig>? OfflineStoreConfig { get; set; }

    /// <summary>The Online Feature Store Configuration. See Online Store Config Below.</summary>
    [JsonPropertyName("onlineStoreConfig")]
    public IList<V1beta1FeatureGroupStatusAtProviderOnlineStoreConfig>? OnlineStoreConfig { get; set; }

    /// <summary>The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.</summary>
    [JsonPropertyName("recordIdentifierFeatureName")]
    public string? RecordIdentifierFeatureName { get; set; }

    /// <summary>Region where this resource will be managed. Defaults to the Region set in the provider configuration. Region is the region you'd like your resource to be created in.</summary>
    [JsonPropertyName("region")]
    public string? Region { get; set; }

    /// <summary>The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an offline_store_config is provided.</summary>
    [JsonPropertyName("roleArn")]
    public string? RoleArn { get; set; }

    /// <summary>Key-value map of resource tags.</summary>
    [JsonPropertyName("tags")]
    public IDictionary<string, string>? Tags { get; set; }

    /// <summary>A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.</summary>
    [JsonPropertyName("tagsAll")]
    public IDictionary<string, string>? TagsAll { get; set; }

    /// <summary></summary>
    [JsonPropertyName("throughputConfig")]
    public IList<V1beta1FeatureGroupStatusAtProviderThroughputConfig>? ThroughputConfig { get; set; }
}

/// <summary>A Condition that may apply to a resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatusConditions
{
    /// <summary>LastTransitionTime is the last time this condition transitioned from one status to another.</summary>
    [JsonPropertyName("lastTransitionTime")]
    public string LastTransitionTime { get; set; }

    /// <summary>A Message containing details about this condition's last transition from one status to another, if any.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; set; }

    /// <summary>ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</summary>
    [JsonPropertyName("observedGeneration")]
    public long? ObservedGeneration { get; set; }

    /// <summary>A Reason for this condition's last transition from one status to another.</summary>
    [JsonPropertyName("reason")]
    public string Reason { get; set; }

    /// <summary>Status of this condition; is it currently True, False, or Unknown?</summary>
    [JsonPropertyName("status")]
    public string Status { get; set; }

    /// <summary>Type of this condition. At most one of each condition type may apply to a resource at any point in time.</summary>
    [JsonPropertyName("type")]
    public string Type { get; set; }
}

/// <summary>FeatureGroupStatus defines the observed state of FeatureGroup.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1FeatureGroupStatus
{
    /// <summary></summary>
    [JsonPropertyName("atProvider")]
    public V1beta1FeatureGroupStatusAtProvider? AtProvider { get; set; }

    /// <summary>Conditions of the resource.</summary>
    [JsonPropertyName("conditions")]
    public IList<V1beta1FeatureGroupStatusConditions>? Conditions { get; set; }

    /// <summary>ObservedGeneration is the latest metadata.generation which resulted in either a ready state, or stalled due to error it can not recover from without human intervention.</summary>
    [JsonPropertyName("observedGeneration")]
    public long? ObservedGeneration { get; set; }
}

/// <summary>FeatureGroup is the Schema for the FeatureGroups API. Provides a SageMaker AI Feature Group resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta1FeatureGroup : IKubernetesObject<V1ObjectMeta>, ISpec<V1beta1FeatureGroupSpec>, IStatus<V1beta1FeatureGroupStatus>
{
    public const string KubeApiVersion = "v1beta1";
    public const string KubeKind = "FeatureGroup";
    public const string KubeGroup = "sagemaker.aws.upbound.io";
    public const string KubePluralName = "featuregroups";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ObjectMeta Metadata { get; set; }

    /// <summary>FeatureGroupSpec defines the desired state of FeatureGroup</summary>
    [JsonPropertyName("spec")]
    public V1beta1FeatureGroupSpec Spec { get; set; }

    /// <summary>FeatureGroupStatus defines the observed state of FeatureGroup.</summary>
    [JsonPropertyName("status")]
    public V1beta1FeatureGroupStatus? Status { get; set; }
}

/// <summary>FeatureGroup is the Schema for the FeatureGroups API. Provides a SageMaker AI Feature Group resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta1FeatureGroupList : IKubernetesObject<V1ListMeta>, IItems<V1beta1FeatureGroup>
{
    public const string KubeApiVersion = "v1beta1";
    public const string KubeKind = "FeatureGroupList";
    public const string KubeGroup = "sagemaker.aws.upbound.io";
    public const string KubePluralName = "featuregroups";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ListMeta Metadata { get; set; }

    /// <summary></summary>
    [JsonPropertyName("items")]
    public IList<V1beta1FeatureGroup> Items { get; set; }
}