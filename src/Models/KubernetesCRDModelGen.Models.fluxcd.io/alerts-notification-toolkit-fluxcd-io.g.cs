using k8s;
using k8s.Models;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;

namespace KubernetesCRDModelGen.Models.notification.toolkit.fluxcd.io;
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0")]
public enum V1beta3AlertSpecEventSeverityEnum
{
    [EnumMember(Value = "info"), JsonStringEnumMemberName("info")]
    /// <summary>info</summary>
    Info,
    [EnumMember(Value = "error"), JsonStringEnumMemberName("error")]
    /// <summary>error</summary>
    Error
}

[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0")]
public enum V1beta3AlertSpecEventSourcesKindEnum
{
    [EnumMember(Value = "Bucket"), JsonStringEnumMemberName("Bucket")]
    /// <summary>Bucket</summary>
    Bucket,
    [EnumMember(Value = "GitRepository"), JsonStringEnumMemberName("GitRepository")]
    /// <summary>GitRepository</summary>
    GitRepository,
    [EnumMember(Value = "Kustomization"), JsonStringEnumMemberName("Kustomization")]
    /// <summary>Kustomization</summary>
    Kustomization,
    [EnumMember(Value = "HelmRelease"), JsonStringEnumMemberName("HelmRelease")]
    /// <summary>HelmRelease</summary>
    HelmRelease,
    [EnumMember(Value = "HelmChart"), JsonStringEnumMemberName("HelmChart")]
    /// <summary>HelmChart</summary>
    HelmChart,
    [EnumMember(Value = "HelmRepository"), JsonStringEnumMemberName("HelmRepository")]
    /// <summary>HelmRepository</summary>
    HelmRepository,
    [EnumMember(Value = "ImageRepository"), JsonStringEnumMemberName("ImageRepository")]
    /// <summary>ImageRepository</summary>
    ImageRepository,
    [EnumMember(Value = "ImagePolicy"), JsonStringEnumMemberName("ImagePolicy")]
    /// <summary>ImagePolicy</summary>
    ImagePolicy,
    [EnumMember(Value = "ImageUpdateAutomation"), JsonStringEnumMemberName("ImageUpdateAutomation")]
    /// <summary>ImageUpdateAutomation</summary>
    ImageUpdateAutomation,
    [EnumMember(Value = "OCIRepository"), JsonStringEnumMemberName("OCIRepository")]
    /// <summary>OCIRepository</summary>
    OCIRepository
}

/// <summary>CrossNamespaceObjectReference contains enough information to let you locate the typed referenced object at cluster level</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta3AlertSpecEventSources
{
    /// <summary>API version of the referent</summary>
    [JsonPropertyName("apiVersion")]
    public string? ApiVersion { get; set; }

    /// <summary>Kind of the referent</summary>
    [JsonPropertyName("kind")]
    [JsonConverter(typeof(JsonStringEnumConverter<V1beta3AlertSpecEventSourcesKindEnum>))]
    public V1beta3AlertSpecEventSourcesKindEnum Kind { get; set; }

    /// <summary>MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed. MatchLabels requires the name to be set to `*`.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Name of the referent If multiple resources are targeted `*` may be set.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Namespace of the referent</summary>
    [JsonPropertyName("namespace")]
    public string? Namespace { get; set; }
}

/// <summary>ProviderRef specifies which Provider this Alert should use.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta3AlertSpecProviderRef
{
    /// <summary>Name of the referent.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }
}

/// <summary>AlertSpec defines an alerting rule for events involving a list of objects.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta3AlertSpec
{
    /// <summary>EventMetadata is an optional field for adding metadata to events dispatched by the controller. This can be used for enhancing the context of the event. If a field would override one already present on the original event as generated by the emitter, then the override doesn't happen, i.e. the original value is preserved, and an info log is printed.</summary>
    [JsonPropertyName("eventMetadata")]
    public IDictionary<string, string>? EventMetadata { get; set; }

    /// <summary>EventSeverity specifies how to filter events based on severity. If set to 'info' no events will be filtered.</summary>
    [JsonPropertyName("eventSeverity")]
    [JsonConverter(typeof(JsonStringEnumConverter<V1beta3AlertSpecEventSeverityEnum>))]
    public V1beta3AlertSpecEventSeverityEnum? EventSeverity { get; set; }

    /// <summary>EventSources specifies how to filter events based on the involved object kind, name and namespace.</summary>
    [JsonPropertyName("eventSources")]
    public IList<V1beta3AlertSpecEventSources> EventSources { get; set; }

    /// <summary>ExclusionList specifies a list of Golang regular expressions to be used for excluding messages.</summary>
    [JsonPropertyName("exclusionList")]
    public IList<string>? ExclusionList { get; set; }

    /// <summary>InclusionList specifies a list of Golang regular expressions to be used for including messages.</summary>
    [JsonPropertyName("inclusionList")]
    public IList<string>? InclusionList { get; set; }

    /// <summary>ProviderRef specifies which Provider this Alert should use.</summary>
    [JsonPropertyName("providerRef")]
    public V1beta3AlertSpecProviderRef ProviderRef { get; set; }

    /// <summary>Summary holds a short description of the impact and affected cluster.</summary>
    [JsonPropertyName("summary")]
    public string? Summary { get; set; }

    /// <summary>Suspend tells the controller to suspend subsequent events handling for this Alert.</summary>
    [JsonPropertyName("suspend")]
    public bool? Suspend { get; set; }
}

/// <summary>Alert is the Schema for the alerts API</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta3Alert : IKubernetesObject<V1ObjectMeta>, ISpec<V1beta3AlertSpec>
{
    public const string KubeApiVersion = "v1beta3";
    public const string KubeKind = "Alert";
    public const string KubeGroup = "notification.toolkit.fluxcd.io";
    public const string KubePluralName = "alerts";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ObjectMeta Metadata { get; set; }

    /// <summary>AlertSpec defines an alerting rule for events involving a list of objects.</summary>
    [JsonPropertyName("spec")]
    public V1beta3AlertSpec? Spec { get; set; }
}