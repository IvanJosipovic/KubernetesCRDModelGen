apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: modelservings.serving.databricks.crossplane.io
spec:
  group: serving.databricks.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - databricks
    kind: ModelServing
    listKind: ModelServingList
    plural: modelservings
    singular: modelserving
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelServing is the Schema for the ModelServings API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ModelServingSpec defines the desired state of ModelServing
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  aiGateway:
                    description: 'A block with AI Gateway configuration for the serving endpoint. Note: only external model endpoints are supported as of now.'
                    items:
                      properties:
                        fallbackConfig:
                          description: block with configuration for traffic fallback which auto fallbacks to other served entities if the request to a served entity fails with certain error codes, to increase availability.
                          items:
                            properties:
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                            type: object
                          type: array
                        guardrails:
                          description: 'Block with configuration for AI Guardrails to prevent unwanted data and unsafe data in requests and responses. Consists of the following attributes:'
                          items:
                            properties:
                              input:
                                description: 'A block with configuration for input guardrail filters:'
                                items:
                                  properties:
                                    invalidKeywords:
                                      description: (Deprecated) List of invalid keywords. AI guardrail uses keyword or string matching to decide if the keyword exists in the request or response content.
                                      items:
                                        type: string
                                      type: array
                                    pii:
                                      description: 'Block with configuration for guardrail PII filter:'
                                      items:
                                        properties:
                                          behavior:
                                            description: a string that describes the behavior for PII filter. Currently only BLOCK value is supported.
                                            type: string
                                        type: object
                                      type: array
                                    safety:
                                      description: the boolean flag that indicates whether the safety filter is enabled.
                                      type: boolean
                                    validTopics:
                                      description: (Deprecated) The list of allowed topics. Given a chat request, this guardrail flags the request if its topic is not in the allowed topics.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              output:
                                description: A block with configuration for output guardrail filters.  Has the same structure as input block.
                                items:
                                  properties:
                                    invalidKeywords:
                                      description: (Deprecated) List of invalid keywords. AI guardrail uses keyword or string matching to decide if the keyword exists in the request or response content.
                                      items:
                                        type: string
                                      type: array
                                    pii:
                                      description: 'Block with configuration for guardrail PII filter:'
                                      items:
                                        properties:
                                          behavior:
                                            description: a string that describes the behavior for PII filter. Currently only BLOCK value is supported.
                                            type: string
                                        type: object
                                      type: array
                                    safety:
                                      description: the boolean flag that indicates whether the safety filter is enabled.
                                      type: boolean
                                    validTopics:
                                      description: (Deprecated) The list of allowed topics. Given a chat request, this guardrail flags the request if its topic is not in the allowed topics.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        inferenceTableConfig:
                          description: 'Block describing the configuration of usage tracking. Consists of the following attributes:'
                          items:
                            properties:
                              catalogName:
                                description: 'The name of the catalog in Unity Catalog. NOTE: On update, you cannot change the catalog name if it was already set.'
                                type: string
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                              schemaName:
                                description: 'The name of the schema in Unity Catalog. NOTE: On update, you cannot change the schema name if it was already set.'
                                type: string
                              tableNamePrefix:
                                description: 'The prefix of the table in Unity Catalog. NOTE: On update, you cannot change the prefix name if it was already set.'
                                type: string
                            type: object
                          type: array
                        rateLimits:
                          description: Block describing rate limits for AI gateway. For details see the description of rate_limits block above.
                          items:
                            properties:
                              calls:
                                description: Used to specify how many calls are allowed for a key within the renewal_period.
                                type: number
                              key:
                                description: The key field for a tag.
                                type: string
                              principal:
                                description: Principal field for a user, user group, or service principal to apply rate limiting to. Accepts a user email, group name, or service principal application ID.
                                type: string
                              renewalPeriod:
                                description: Renewal period field for a serving endpoint rate limit. Currently, only minute is supported.
                                type: string
                              tokens:
                                description: Specifies how many tokens are allowed for a key within the renewal_period.
                                type: number
                            type: object
                          type: array
                        usageTrackingConfig:
                          description: Block with configuration for payload logging using inference tables. For details see the description of auto_capture_config block above.
                          items:
                            properties:
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  budgetPolicyId:
                    description: (Optiona) The Budget Policy ID set for this serving endpoint.
                    type: string
                  config:
                    description: The model serving endpoint configuration. This is optional and can be added and modified after creation. If config was provided in a previous apply but is not provided in the current apply, no change to the model serving endpoint will occur. To recreate the model serving endpoint without the config block, the model serving endpoint must be destroyed and recreated.
                    items:
                      properties:
                        autoCaptureConfig:
                          description: Configuration for Inference Tables which automatically logs requests and responses to Unity Catalog.
                          items:
                            properties:
                              catalogName:
                                description: 'The name of the catalog in Unity Catalog. NOTE: On update, you cannot change the catalog name if it was already set.'
                                type: string
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                              schemaName:
                                description: 'The name of the schema in Unity Catalog. NOTE: On update, you cannot change the schema name if it was already set.'
                                type: string
                              tableNamePrefix:
                                description: 'The prefix of the table in Unity Catalog. NOTE: On update, you cannot change the prefix name if it was already set.'
                                type: string
                            type: object
                          type: array
                        servedEntities:
                          description: A list of served entities for the endpoint to serve. A serving endpoint can have up to 10 served entities.
                          items:
                            properties:
                              entityName:
                                description: The name of the entity to be served. The entity may be a model in the Databricks Model Registry, a model in the Unity Catalog (UC), or a function of type FEATURE_SPEC in the UC. If it is a UC object, the full name of the object should be given in the form of catalog_name.schema_name.model_name.
                                type: string
                              entityVersion:
                                description: The version of the model in Databricks Model Registry to be served or empty if the entity is a FEATURE_SPEC.
                                type: string
                              environmentVars:
                                additionalProperties:
                                  type: string
                                description: 'a map of environment variable names/values that will be used for serving this model.  Environment variables may refer to Databricks secrets using the standard syntax: {{secrets/secret_scope/secret_key}}.'
                                type: object
                                x-kubernetes-map-type: granular
                              externalModel:
                                description: 'The external model to be served. NOTE: Only one of external_model and (entity_name, entity_version, workload_size, workload_type, and scale_to_zero_enabled) can be specified with the latter set being used for custom model serving for a Databricks registered model. When an external_model is present, the served entities list can only have one served_entity object. An existing endpoint with external_model can not be updated to an endpoint without external_model. If the endpoint is created without external_model, users cannot update it to add external_model later.'
                                items:
                                  properties:
                                    ai21labsConfig:
                                      description: AI21Labs Config
                                      items:
                                        properties:
                                          ai21labsApiKey:
                                            description: The Databricks secret key reference for an AI21Labs API key.
                                            type: string
                                          ai21labsApiKeyPlaintext:
                                            description: An AI21 Labs API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    amazonBedrockConfig:
                                      description: Amazon Bedrock Config
                                      items:
                                        properties:
                                          awsAccessKeyId:
                                            description: The Databricks secret key reference for an AWS Access Key ID with permissions to interact with Bedrock services.
                                            type: string
                                          awsAccessKeyIdPlaintext:
                                            description: An AWS access key ID with permissions to interact with Bedrock services provided as a plaintext string.
                                            type: string
                                          awsRegion:
                                            description: The AWS region to use. Bedrock has to be enabled there.
                                            type: string
                                          awsSecretAccessKey:
                                            description: The Databricks secret key reference for an AWS Secret Access Key paired with the access key ID, with permissions to interact with Bedrock services.
                                            type: string
                                          awsSecretAccessKeyPlaintext:
                                            description: An AWS secret access key paired with the access key ID, with permissions to interact with Bedrock services provided as a plaintext string.
                                            type: string
                                          bedrockProvider:
                                            description: 'The underlying provider in Amazon Bedrock. Supported values (case insensitive) include: Anthropic, Cohere, AI21Labs, Amazon.'
                                            type: string
                                          instanceProfileArn:
                                            description: ARN of the instance profile that the served model will use to access AWS resources.
                                            type: string
                                        type: object
                                      type: array
                                    anthropicConfig:
                                      description: Anthropic Config
                                      items:
                                        properties:
                                          anthropicApiKey:
                                            description: The Databricks secret key reference for an Anthropic API key.
                                            type: string
                                          anthropicApiKeyPlaintext:
                                            description: The Anthropic API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    cohereConfig:
                                      description: Cohere Config
                                      items:
                                        properties:
                                          cohereApiBase:
                                            type: string
                                          cohereApiKey:
                                            description: The Databricks secret key reference for a Cohere API key.
                                            type: string
                                          cohereApiKeyPlaintext:
                                            description: The Cohere API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    customProviderConfig:
                                      description: Custom Provider Config. Only required if the provider is 'custom'.
                                      items:
                                        properties:
                                          apiKeyAuth:
                                            description: API key authentication for the custom provider API. Conflicts with bearer_token_auth.
                                            items:
                                              properties:
                                                key:
                                                  description: The key field for a tag.
                                                  type: string
                                                value:
                                                  description: The Databricks secret key reference for an API Key.
                                                  type: string
                                                valuePlaintext:
                                                  description: The API Key provided as a plaintext string.
                                                  type: string
                                              type: object
                                            type: array
                                          bearerTokenAuth:
                                            description: bearer token authentication for the custom provider API.  Conflicts with api_key_auth.
                                            items:
                                              properties:
                                                token:
                                                  description: The Databricks secret key reference for a token.
                                                  type: string
                                                tokenPlaintext:
                                                  description: The token provided as a plaintext string.
                                                  type: string
                                              type: object
                                            type: array
                                          customProviderUrl:
                                            description: URL of the custom provider API.
                                            type: string
                                        type: object
                                      type: array
                                    databricksModelServingConfig:
                                      description: Databricks Model Serving Config
                                      items:
                                        properties:
                                          databricksApiToken:
                                            description: The Databricks secret key reference for a Databricks API token that corresponds to a user or service principal with Can Query access to the model serving endpoint pointed to by this external model.
                                            type: string
                                          databricksApiTokenPlaintext:
                                            description: The Databricks API token that corresponds to a user or service principal with Can Query access to the model serving endpoint pointed to by this external model provided as a plaintext string.
                                            type: string
                                          databricksWorkspaceUrl:
                                            description: The URL of the Databricks workspace containing the model serving endpoint pointed to by this external model.
                                            type: string
                                        type: object
                                      type: array
                                    googleCloudVertexAiConfig:
                                      description: Google Cloud Vertex AI Config.
                                      items:
                                        properties:
                                          privateKey:
                                            description: The Databricks secret key reference for a private key for the service account that has access to the Google Cloud Vertex AI Service.
                                            type: string
                                          privateKeyPlaintext:
                                            description: The private key for the service account that has access to the Google Cloud Vertex AI Service is provided as a plaintext secret.
                                            type: string
                                          projectId:
                                            description: This is the Google Cloud project id that the service account is associated with.
                                            type: string
                                          region:
                                            description: This is the region for the Google Cloud Vertex AI Service.
                                            type: string
                                        type: object
                                      type: array
                                    name:
                                      description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                      type: string
                                    openaiConfig:
                                      description: OpenAI Config
                                      items:
                                        properties:
                                          microsoftEntraClientId:
                                            description: This field is only required for Azure AD OpenAI and is the Microsoft Entra Client ID.
                                            type: string
                                          microsoftEntraClientSecret:
                                            description: The Databricks secret key reference for a client secret used for Microsoft Entra ID authentication.
                                            type: string
                                          microsoftEntraClientSecretPlaintext:
                                            description: The client secret used for Microsoft Entra ID authentication provided as a plaintext string.
                                            type: string
                                          microsoftEntraTenantId:
                                            description: This field is only required for Azure AD OpenAI and is the Microsoft Entra Tenant ID.
                                            type: string
                                          openaiApiBase:
                                            description: 'This is the base URL for the OpenAI API (default: "https://api.openai.com/v1"). For Azure OpenAI, this field is required and is the base URL for the Azure OpenAI API service provided by Azure.'
                                            type: string
                                          openaiApiKey:
                                            description: The Databricks secret key reference for an OpenAI or Azure OpenAI API key.
                                            type: string
                                          openaiApiKeyPlaintext:
                                            description: The OpenAI API key using the OpenAI or Azure service provided as a plaintext string.
                                            type: string
                                          openaiApiType:
                                            description: This is an optional field to specify the type of OpenAI API to use. For Azure OpenAI, this field is required, and this parameter represents the preferred security access validation protocol. For access token validation, use azure. For authentication using Azure Active Directory (Azure AD) use, azuread.
                                            type: string
                                          openaiApiVersion:
                                            description: This is an optional field to specify the OpenAI API version. For Azure OpenAI, this field is required and is the version of the Azure OpenAI service to utilize, specified by a date.
                                            type: string
                                          openaiDeploymentName:
                                            description: This field is only required for Azure OpenAI and is the name of the deployment resource for the Azure OpenAI service.
                                            type: string
                                          openaiOrganization:
                                            description: This is an optional field to specify the organization in OpenAI or Azure OpenAI.
                                            type: string
                                        type: object
                                      type: array
                                    palmConfig:
                                      description: PaLM Config
                                      items:
                                        properties:
                                          palmApiKey:
                                            description: The Databricks secret key reference for a PaLM API key.
                                            type: string
                                          palmApiKeyPlaintext:
                                            description: The PaLM API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    provider:
                                      description: The name of the provider for the external model. Currently, the supported providers are ai21labs, anthropic, amazon-bedrock, cohere, databricks-model-serving, google-cloud-vertex-ai, openai, and palm.
                                      type: string
                                    task:
                                      description: The task type of the external model.
                                      type: string
                                  type: object
                                type: array
                              instanceProfileArn:
                                description: ARN of the instance profile that the served model will use to access AWS resources.
                                type: string
                              maxProvisionedConcurrency:
                                description: The maximum provisioned concurrency that the endpoint can scale up to. Conflicts with workload_size.
                                type: number
                              maxProvisionedThroughput:
                                description: The maximum tokens per second that the endpoint can scale up to.
                                type: number
                              minProvisionedConcurrency:
                                description: The minimum provisioned concurrency that the endpoint can scale down to. Conflicts with workload_size.
                                type: number
                              minProvisionedThroughput:
                                description: The minimum tokens per second that the endpoint can scale down to.
                                type: number
                              name:
                                description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                type: string
                              provisionedModelUnits:
                                type: number
                              scaleToZeroEnabled:
                                description: Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is true.
                                type: boolean
                              workloadSize:
                                description: The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are Small (4 - 4 provisioned concurrency), Medium (8 - 16 provisioned concurrency), and Large (16 - 64 provisioned concurrency).
                                type: string
                              workloadType:
                                description: The workload type of the served model. The workload type selects which type of compute to use in the endpoint. For deep learning workloads, GPU acceleration is available by selecting workload types like GPU_SMALL and others. See the documentation for all options. The default value is CPU.
                                type: string
                            type: object
                          type: array
                        servedModels:
                          description: (Deprecated, use served_entities instead) Each block represents a served model for the endpoint to serve. A model serving endpoint can have up to 10 served models.
                          items:
                            properties:
                              environmentVars:
                                additionalProperties:
                                  type: string
                                description: 'a map of environment variable names/values that will be used for serving this model.  Environment variables may refer to Databricks secrets using the standard syntax: {{secrets/secret_scope/secret_key}}.'
                                type: object
                                x-kubernetes-map-type: granular
                              instanceProfileArn:
                                description: ARN of the instance profile that the served model will use to access AWS resources.
                                type: string
                              maxProvisionedConcurrency:
                                description: The maximum provisioned concurrency that the endpoint can scale up to. Conflicts with workload_size.
                                type: number
                              maxProvisionedThroughput:
                                description: The maximum tokens per second that the endpoint can scale up to.
                                type: number
                              minProvisionedConcurrency:
                                description: The minimum provisioned concurrency that the endpoint can scale down to. Conflicts with workload_size.
                                type: number
                              minProvisionedThroughput:
                                description: The minimum tokens per second that the endpoint can scale down to.
                                type: number
                              modelName:
                                description: The name of the model in Databricks Model Registry to be served.
                                type: string
                              modelVersion:
                                description: The version of the model in Databricks Model Registry to be served.
                                type: string
                              name:
                                description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                type: string
                              provisionedModelUnits:
                                type: number
                              scaleToZeroEnabled:
                                description: Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is true.
                                type: boolean
                              workloadSize:
                                description: The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are Small (4 - 4 provisioned concurrency), Medium (8 - 16 provisioned concurrency), and Large (16 - 64 provisioned concurrency).
                                type: string
                              workloadType:
                                description: The workload type of the served model. The workload type selects which type of compute to use in the endpoint. For deep learning workloads, GPU acceleration is available by selecting workload types like GPU_SMALL and others. See the documentation for all options. The default value is CPU.
                                type: string
                            type: object
                          type: array
                        trafficConfig:
                          description: A single block represents the traffic split configuration amongst the served models.
                          items:
                            properties:
                              routes:
                                description: Each block represents a route that defines traffic to each served entity. Each served_entity block needs to have a corresponding routes block.
                                items:
                                  properties:
                                    servedEntityName:
                                      description: The name of the served entity this route configures traffic for. This needs to match the name of a served_entity block.
                                      type: string
                                    servedModelName:
                                      description: 'The name of the model serving endpoint. This field is required and must be unique across a workspace. An endpoint name can consist of alphanumeric characters, dashes, and underscores. NOTE: Changing this name will delete the existing endpoint and create a new endpoint with the updated name.'
                                      type: string
                                    trafficPercentage:
                                      description: The percentage of endpoint traffic to send to this route. It must be an integer between 0 and 100 inclusive.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: The description of the model serving endpoint.
                    type: string
                  emailNotifications:
                    description: A block with Email notification setting.
                    items:
                      properties:
                        onUpdateFailure:
                          description: a list of email addresses to be notified when an endpoint fails to update its configuration or state.
                          items:
                            type: string
                          type: array
                        onUpdateSuccess:
                          description: a list of email addresses to be notified when an endpoint successfully updates its configuration or state.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  name:
                    description: 'The name of the model serving endpoint. This field is required and must be unique across a workspace. An endpoint name can consist of alphanumeric characters, dashes, and underscores. NOTE: Changing this name will delete the existing endpoint and create a new endpoint with the updated name.'
                    type: string
                  rateLimits:
                    description: '(Deprecated, use ai_gateway to manage rate limits) A list of rate limit blocks to be applied to the serving endpoint. Note: only external and foundation model endpoints are supported as of now.'
                    items:
                      properties:
                        calls:
                          description: Used to specify how many calls are allowed for a key within the renewal_period.
                          type: number
                        key:
                          description: Key field for a serving endpoint rate limit. Currently, user, user_group, service_principal, and endpoint are supported, with endpoint being the default if not specified.
                          type: string
                        renewalPeriod:
                          description: Renewal period field for a serving endpoint rate limit. Currently, only minute is supported.
                          type: string
                      type: object
                    type: array
                  routeOptimized:
                    description: 'A boolean enabling route optimization for the endpoint. Note: only available for custom models.'
                    type: boolean
                  tags:
                    description: Tags to be attached to the serving endpoint and automatically propagated to billing logs.
                    items:
                      properties:
                        key:
                          description: The key field for a tag.
                          type: string
                        value:
                          description: The value field for a tag.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  aiGateway:
                    description: 'A block with AI Gateway configuration for the serving endpoint. Note: only external model endpoints are supported as of now.'
                    items:
                      properties:
                        fallbackConfig:
                          description: block with configuration for traffic fallback which auto fallbacks to other served entities if the request to a served entity fails with certain error codes, to increase availability.
                          items:
                            properties:
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                            type: object
                          type: array
                        guardrails:
                          description: 'Block with configuration for AI Guardrails to prevent unwanted data and unsafe data in requests and responses. Consists of the following attributes:'
                          items:
                            properties:
                              input:
                                description: 'A block with configuration for input guardrail filters:'
                                items:
                                  properties:
                                    invalidKeywords:
                                      description: (Deprecated) List of invalid keywords. AI guardrail uses keyword or string matching to decide if the keyword exists in the request or response content.
                                      items:
                                        type: string
                                      type: array
                                    pii:
                                      description: 'Block with configuration for guardrail PII filter:'
                                      items:
                                        properties:
                                          behavior:
                                            description: a string that describes the behavior for PII filter. Currently only BLOCK value is supported.
                                            type: string
                                        type: object
                                      type: array
                                    safety:
                                      description: the boolean flag that indicates whether the safety filter is enabled.
                                      type: boolean
                                    validTopics:
                                      description: (Deprecated) The list of allowed topics. Given a chat request, this guardrail flags the request if its topic is not in the allowed topics.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              output:
                                description: A block with configuration for output guardrail filters.  Has the same structure as input block.
                                items:
                                  properties:
                                    invalidKeywords:
                                      description: (Deprecated) List of invalid keywords. AI guardrail uses keyword or string matching to decide if the keyword exists in the request or response content.
                                      items:
                                        type: string
                                      type: array
                                    pii:
                                      description: 'Block with configuration for guardrail PII filter:'
                                      items:
                                        properties:
                                          behavior:
                                            description: a string that describes the behavior for PII filter. Currently only BLOCK value is supported.
                                            type: string
                                        type: object
                                      type: array
                                    safety:
                                      description: the boolean flag that indicates whether the safety filter is enabled.
                                      type: boolean
                                    validTopics:
                                      description: (Deprecated) The list of allowed topics. Given a chat request, this guardrail flags the request if its topic is not in the allowed topics.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        inferenceTableConfig:
                          description: 'Block describing the configuration of usage tracking. Consists of the following attributes:'
                          items:
                            properties:
                              catalogName:
                                description: 'The name of the catalog in Unity Catalog. NOTE: On update, you cannot change the catalog name if it was already set.'
                                type: string
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                              schemaName:
                                description: 'The name of the schema in Unity Catalog. NOTE: On update, you cannot change the schema name if it was already set.'
                                type: string
                              tableNamePrefix:
                                description: 'The prefix of the table in Unity Catalog. NOTE: On update, you cannot change the prefix name if it was already set.'
                                type: string
                            type: object
                          type: array
                        rateLimits:
                          description: Block describing rate limits for AI gateway. For details see the description of rate_limits block above.
                          items:
                            properties:
                              calls:
                                description: Used to specify how many calls are allowed for a key within the renewal_period.
                                type: number
                              key:
                                description: The key field for a tag.
                                type: string
                              principal:
                                description: Principal field for a user, user group, or service principal to apply rate limiting to. Accepts a user email, group name, or service principal application ID.
                                type: string
                              renewalPeriod:
                                description: Renewal period field for a serving endpoint rate limit. Currently, only minute is supported.
                                type: string
                              tokens:
                                description: Specifies how many tokens are allowed for a key within the renewal_period.
                                type: number
                            type: object
                          type: array
                        usageTrackingConfig:
                          description: Block with configuration for payload logging using inference tables. For details see the description of auto_capture_config block above.
                          items:
                            properties:
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  budgetPolicyId:
                    description: (Optiona) The Budget Policy ID set for this serving endpoint.
                    type: string
                  config:
                    description: The model serving endpoint configuration. This is optional and can be added and modified after creation. If config was provided in a previous apply but is not provided in the current apply, no change to the model serving endpoint will occur. To recreate the model serving endpoint without the config block, the model serving endpoint must be destroyed and recreated.
                    items:
                      properties:
                        autoCaptureConfig:
                          description: Configuration for Inference Tables which automatically logs requests and responses to Unity Catalog.
                          items:
                            properties:
                              catalogName:
                                description: 'The name of the catalog in Unity Catalog. NOTE: On update, you cannot change the catalog name if it was already set.'
                                type: string
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                              schemaName:
                                description: 'The name of the schema in Unity Catalog. NOTE: On update, you cannot change the schema name if it was already set.'
                                type: string
                              tableNamePrefix:
                                description: 'The prefix of the table in Unity Catalog. NOTE: On update, you cannot change the prefix name if it was already set.'
                                type: string
                            type: object
                          type: array
                        servedEntities:
                          description: A list of served entities for the endpoint to serve. A serving endpoint can have up to 10 served entities.
                          items:
                            properties:
                              entityName:
                                description: The name of the entity to be served. The entity may be a model in the Databricks Model Registry, a model in the Unity Catalog (UC), or a function of type FEATURE_SPEC in the UC. If it is a UC object, the full name of the object should be given in the form of catalog_name.schema_name.model_name.
                                type: string
                              entityVersion:
                                description: The version of the model in Databricks Model Registry to be served or empty if the entity is a FEATURE_SPEC.
                                type: string
                              environmentVars:
                                additionalProperties:
                                  type: string
                                description: 'a map of environment variable names/values that will be used for serving this model.  Environment variables may refer to Databricks secrets using the standard syntax: {{secrets/secret_scope/secret_key}}.'
                                type: object
                                x-kubernetes-map-type: granular
                              externalModel:
                                description: 'The external model to be served. NOTE: Only one of external_model and (entity_name, entity_version, workload_size, workload_type, and scale_to_zero_enabled) can be specified with the latter set being used for custom model serving for a Databricks registered model. When an external_model is present, the served entities list can only have one served_entity object. An existing endpoint with external_model can not be updated to an endpoint without external_model. If the endpoint is created without external_model, users cannot update it to add external_model later.'
                                items:
                                  properties:
                                    ai21labsConfig:
                                      description: AI21Labs Config
                                      items:
                                        properties:
                                          ai21labsApiKey:
                                            description: The Databricks secret key reference for an AI21Labs API key.
                                            type: string
                                          ai21labsApiKeyPlaintext:
                                            description: An AI21 Labs API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    amazonBedrockConfig:
                                      description: Amazon Bedrock Config
                                      items:
                                        properties:
                                          awsAccessKeyId:
                                            description: The Databricks secret key reference for an AWS Access Key ID with permissions to interact with Bedrock services.
                                            type: string
                                          awsAccessKeyIdPlaintext:
                                            description: An AWS access key ID with permissions to interact with Bedrock services provided as a plaintext string.
                                            type: string
                                          awsRegion:
                                            description: The AWS region to use. Bedrock has to be enabled there.
                                            type: string
                                          awsSecretAccessKey:
                                            description: The Databricks secret key reference for an AWS Secret Access Key paired with the access key ID, with permissions to interact with Bedrock services.
                                            type: string
                                          awsSecretAccessKeyPlaintext:
                                            description: An AWS secret access key paired with the access key ID, with permissions to interact with Bedrock services provided as a plaintext string.
                                            type: string
                                          bedrockProvider:
                                            description: 'The underlying provider in Amazon Bedrock. Supported values (case insensitive) include: Anthropic, Cohere, AI21Labs, Amazon.'
                                            type: string
                                          instanceProfileArn:
                                            description: ARN of the instance profile that the served model will use to access AWS resources.
                                            type: string
                                        type: object
                                      type: array
                                    anthropicConfig:
                                      description: Anthropic Config
                                      items:
                                        properties:
                                          anthropicApiKey:
                                            description: The Databricks secret key reference for an Anthropic API key.
                                            type: string
                                          anthropicApiKeyPlaintext:
                                            description: The Anthropic API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    cohereConfig:
                                      description: Cohere Config
                                      items:
                                        properties:
                                          cohereApiBase:
                                            type: string
                                          cohereApiKey:
                                            description: The Databricks secret key reference for a Cohere API key.
                                            type: string
                                          cohereApiKeyPlaintext:
                                            description: The Cohere API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    customProviderConfig:
                                      description: Custom Provider Config. Only required if the provider is 'custom'.
                                      items:
                                        properties:
                                          apiKeyAuth:
                                            description: API key authentication for the custom provider API. Conflicts with bearer_token_auth.
                                            items:
                                              properties:
                                                key:
                                                  description: The key field for a tag.
                                                  type: string
                                                value:
                                                  description: The Databricks secret key reference for an API Key.
                                                  type: string
                                                valuePlaintext:
                                                  description: The API Key provided as a plaintext string.
                                                  type: string
                                              type: object
                                            type: array
                                          bearerTokenAuth:
                                            description: bearer token authentication for the custom provider API.  Conflicts with api_key_auth.
                                            items:
                                              properties:
                                                token:
                                                  description: The Databricks secret key reference for a token.
                                                  type: string
                                                tokenPlaintext:
                                                  description: The token provided as a plaintext string.
                                                  type: string
                                              type: object
                                            type: array
                                          customProviderUrl:
                                            description: URL of the custom provider API.
                                            type: string
                                        type: object
                                      type: array
                                    databricksModelServingConfig:
                                      description: Databricks Model Serving Config
                                      items:
                                        properties:
                                          databricksApiToken:
                                            description: The Databricks secret key reference for a Databricks API token that corresponds to a user or service principal with Can Query access to the model serving endpoint pointed to by this external model.
                                            type: string
                                          databricksApiTokenPlaintext:
                                            description: The Databricks API token that corresponds to a user or service principal with Can Query access to the model serving endpoint pointed to by this external model provided as a plaintext string.
                                            type: string
                                          databricksWorkspaceUrl:
                                            description: The URL of the Databricks workspace containing the model serving endpoint pointed to by this external model.
                                            type: string
                                        type: object
                                      type: array
                                    googleCloudVertexAiConfig:
                                      description: Google Cloud Vertex AI Config.
                                      items:
                                        properties:
                                          privateKey:
                                            description: The Databricks secret key reference for a private key for the service account that has access to the Google Cloud Vertex AI Service.
                                            type: string
                                          privateKeyPlaintext:
                                            description: The private key for the service account that has access to the Google Cloud Vertex AI Service is provided as a plaintext secret.
                                            type: string
                                          projectId:
                                            description: This is the Google Cloud project id that the service account is associated with.
                                            type: string
                                          region:
                                            description: This is the region for the Google Cloud Vertex AI Service.
                                            type: string
                                        type: object
                                      type: array
                                    name:
                                      description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                      type: string
                                    openaiConfig:
                                      description: OpenAI Config
                                      items:
                                        properties:
                                          microsoftEntraClientId:
                                            description: This field is only required for Azure AD OpenAI and is the Microsoft Entra Client ID.
                                            type: string
                                          microsoftEntraClientSecret:
                                            description: The Databricks secret key reference for a client secret used for Microsoft Entra ID authentication.
                                            type: string
                                          microsoftEntraClientSecretPlaintext:
                                            description: The client secret used for Microsoft Entra ID authentication provided as a plaintext string.
                                            type: string
                                          microsoftEntraTenantId:
                                            description: This field is only required for Azure AD OpenAI and is the Microsoft Entra Tenant ID.
                                            type: string
                                          openaiApiBase:
                                            description: 'This is the base URL for the OpenAI API (default: "https://api.openai.com/v1"). For Azure OpenAI, this field is required and is the base URL for the Azure OpenAI API service provided by Azure.'
                                            type: string
                                          openaiApiKey:
                                            description: The Databricks secret key reference for an OpenAI or Azure OpenAI API key.
                                            type: string
                                          openaiApiKeyPlaintext:
                                            description: The OpenAI API key using the OpenAI or Azure service provided as a plaintext string.
                                            type: string
                                          openaiApiType:
                                            description: This is an optional field to specify the type of OpenAI API to use. For Azure OpenAI, this field is required, and this parameter represents the preferred security access validation protocol. For access token validation, use azure. For authentication using Azure Active Directory (Azure AD) use, azuread.
                                            type: string
                                          openaiApiVersion:
                                            description: This is an optional field to specify the OpenAI API version. For Azure OpenAI, this field is required and is the version of the Azure OpenAI service to utilize, specified by a date.
                                            type: string
                                          openaiDeploymentName:
                                            description: This field is only required for Azure OpenAI and is the name of the deployment resource for the Azure OpenAI service.
                                            type: string
                                          openaiOrganization:
                                            description: This is an optional field to specify the organization in OpenAI or Azure OpenAI.
                                            type: string
                                        type: object
                                      type: array
                                    palmConfig:
                                      description: PaLM Config
                                      items:
                                        properties:
                                          palmApiKey:
                                            description: The Databricks secret key reference for a PaLM API key.
                                            type: string
                                          palmApiKeyPlaintext:
                                            description: The PaLM API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    provider:
                                      description: The name of the provider for the external model. Currently, the supported providers are ai21labs, anthropic, amazon-bedrock, cohere, databricks-model-serving, google-cloud-vertex-ai, openai, and palm.
                                      type: string
                                    task:
                                      description: The task type of the external model.
                                      type: string
                                  type: object
                                type: array
                              instanceProfileArn:
                                description: ARN of the instance profile that the served model will use to access AWS resources.
                                type: string
                              maxProvisionedConcurrency:
                                description: The maximum provisioned concurrency that the endpoint can scale up to. Conflicts with workload_size.
                                type: number
                              maxProvisionedThroughput:
                                description: The maximum tokens per second that the endpoint can scale up to.
                                type: number
                              minProvisionedConcurrency:
                                description: The minimum provisioned concurrency that the endpoint can scale down to. Conflicts with workload_size.
                                type: number
                              minProvisionedThroughput:
                                description: The minimum tokens per second that the endpoint can scale down to.
                                type: number
                              name:
                                description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                type: string
                              provisionedModelUnits:
                                type: number
                              scaleToZeroEnabled:
                                description: Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is true.
                                type: boolean
                              workloadSize:
                                description: The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are Small (4 - 4 provisioned concurrency), Medium (8 - 16 provisioned concurrency), and Large (16 - 64 provisioned concurrency).
                                type: string
                              workloadType:
                                description: The workload type of the served model. The workload type selects which type of compute to use in the endpoint. For deep learning workloads, GPU acceleration is available by selecting workload types like GPU_SMALL and others. See the documentation for all options. The default value is CPU.
                                type: string
                            type: object
                          type: array
                        servedModels:
                          description: (Deprecated, use served_entities instead) Each block represents a served model for the endpoint to serve. A model serving endpoint can have up to 10 served models.
                          items:
                            properties:
                              environmentVars:
                                additionalProperties:
                                  type: string
                                description: 'a map of environment variable names/values that will be used for serving this model.  Environment variables may refer to Databricks secrets using the standard syntax: {{secrets/secret_scope/secret_key}}.'
                                type: object
                                x-kubernetes-map-type: granular
                              instanceProfileArn:
                                description: ARN of the instance profile that the served model will use to access AWS resources.
                                type: string
                              maxProvisionedConcurrency:
                                description: The maximum provisioned concurrency that the endpoint can scale up to. Conflicts with workload_size.
                                type: number
                              maxProvisionedThroughput:
                                description: The maximum tokens per second that the endpoint can scale up to.
                                type: number
                              minProvisionedConcurrency:
                                description: The minimum provisioned concurrency that the endpoint can scale down to. Conflicts with workload_size.
                                type: number
                              minProvisionedThroughput:
                                description: The minimum tokens per second that the endpoint can scale down to.
                                type: number
                              modelName:
                                description: The name of the model in Databricks Model Registry to be served.
                                type: string
                              modelVersion:
                                description: The version of the model in Databricks Model Registry to be served.
                                type: string
                              name:
                                description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                type: string
                              provisionedModelUnits:
                                type: number
                              scaleToZeroEnabled:
                                description: Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is true.
                                type: boolean
                              workloadSize:
                                description: The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are Small (4 - 4 provisioned concurrency), Medium (8 - 16 provisioned concurrency), and Large (16 - 64 provisioned concurrency).
                                type: string
                              workloadType:
                                description: The workload type of the served model. The workload type selects which type of compute to use in the endpoint. For deep learning workloads, GPU acceleration is available by selecting workload types like GPU_SMALL and others. See the documentation for all options. The default value is CPU.
                                type: string
                            type: object
                          type: array
                        trafficConfig:
                          description: A single block represents the traffic split configuration amongst the served models.
                          items:
                            properties:
                              routes:
                                description: Each block represents a route that defines traffic to each served entity. Each served_entity block needs to have a corresponding routes block.
                                items:
                                  properties:
                                    servedEntityName:
                                      description: The name of the served entity this route configures traffic for. This needs to match the name of a served_entity block.
                                      type: string
                                    servedModelName:
                                      description: 'The name of the model serving endpoint. This field is required and must be unique across a workspace. An endpoint name can consist of alphanumeric characters, dashes, and underscores. NOTE: Changing this name will delete the existing endpoint and create a new endpoint with the updated name.'
                                      type: string
                                    trafficPercentage:
                                      description: The percentage of endpoint traffic to send to this route. It must be an integer between 0 and 100 inclusive.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: The description of the model serving endpoint.
                    type: string
                  emailNotifications:
                    description: A block with Email notification setting.
                    items:
                      properties:
                        onUpdateFailure:
                          description: a list of email addresses to be notified when an endpoint fails to update its configuration or state.
                          items:
                            type: string
                          type: array
                        onUpdateSuccess:
                          description: a list of email addresses to be notified when an endpoint successfully updates its configuration or state.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  name:
                    description: 'The name of the model serving endpoint. This field is required and must be unique across a workspace. An endpoint name can consist of alphanumeric characters, dashes, and underscores. NOTE: Changing this name will delete the existing endpoint and create a new endpoint with the updated name.'
                    type: string
                  rateLimits:
                    description: '(Deprecated, use ai_gateway to manage rate limits) A list of rate limit blocks to be applied to the serving endpoint. Note: only external and foundation model endpoints are supported as of now.'
                    items:
                      properties:
                        calls:
                          description: Used to specify how many calls are allowed for a key within the renewal_period.
                          type: number
                        key:
                          description: Key field for a serving endpoint rate limit. Currently, user, user_group, service_principal, and endpoint are supported, with endpoint being the default if not specified.
                          type: string
                        renewalPeriod:
                          description: Renewal period field for a serving endpoint rate limit. Currently, only minute is supported.
                          type: string
                      type: object
                    type: array
                  routeOptimized:
                    description: 'A boolean enabling route optimization for the endpoint. Note: only available for custom models.'
                    type: boolean
                  tags:
                    description: Tags to be attached to the serving endpoint and automatically propagated to billing logs.
                    items:
                      properties:
                        key:
                          description: The key field for a tag.
                          type: string
                        value:
                          description: The value field for a tag.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
          status:
            description: ModelServingStatus defines the observed state of ModelServing.
            properties:
              atProvider:
                properties:
                  aiGateway:
                    description: 'A block with AI Gateway configuration for the serving endpoint. Note: only external model endpoints are supported as of now.'
                    items:
                      properties:
                        fallbackConfig:
                          description: block with configuration for traffic fallback which auto fallbacks to other served entities if the request to a served entity fails with certain error codes, to increase availability.
                          items:
                            properties:
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                            type: object
                          type: array
                        guardrails:
                          description: 'Block with configuration for AI Guardrails to prevent unwanted data and unsafe data in requests and responses. Consists of the following attributes:'
                          items:
                            properties:
                              input:
                                description: 'A block with configuration for input guardrail filters:'
                                items:
                                  properties:
                                    invalidKeywords:
                                      description: (Deprecated) List of invalid keywords. AI guardrail uses keyword or string matching to decide if the keyword exists in the request or response content.
                                      items:
                                        type: string
                                      type: array
                                    pii:
                                      description: 'Block with configuration for guardrail PII filter:'
                                      items:
                                        properties:
                                          behavior:
                                            description: a string that describes the behavior for PII filter. Currently only BLOCK value is supported.
                                            type: string
                                        type: object
                                      type: array
                                    safety:
                                      description: the boolean flag that indicates whether the safety filter is enabled.
                                      type: boolean
                                    validTopics:
                                      description: (Deprecated) The list of allowed topics. Given a chat request, this guardrail flags the request if its topic is not in the allowed topics.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              output:
                                description: A block with configuration for output guardrail filters.  Has the same structure as input block.
                                items:
                                  properties:
                                    invalidKeywords:
                                      description: (Deprecated) List of invalid keywords. AI guardrail uses keyword or string matching to decide if the keyword exists in the request or response content.
                                      items:
                                        type: string
                                      type: array
                                    pii:
                                      description: 'Block with configuration for guardrail PII filter:'
                                      items:
                                        properties:
                                          behavior:
                                            description: a string that describes the behavior for PII filter. Currently only BLOCK value is supported.
                                            type: string
                                        type: object
                                      type: array
                                    safety:
                                      description: the boolean flag that indicates whether the safety filter is enabled.
                                      type: boolean
                                    validTopics:
                                      description: (Deprecated) The list of allowed topics. Given a chat request, this guardrail flags the request if its topic is not in the allowed topics.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        inferenceTableConfig:
                          description: 'Block describing the configuration of usage tracking. Consists of the following attributes:'
                          items:
                            properties:
                              catalogName:
                                description: 'The name of the catalog in Unity Catalog. NOTE: On update, you cannot change the catalog name if it was already set.'
                                type: string
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                              schemaName:
                                description: 'The name of the schema in Unity Catalog. NOTE: On update, you cannot change the schema name if it was already set.'
                                type: string
                              tableNamePrefix:
                                description: 'The prefix of the table in Unity Catalog. NOTE: On update, you cannot change the prefix name if it was already set.'
                                type: string
                            type: object
                          type: array
                        rateLimits:
                          description: Block describing rate limits for AI gateway. For details see the description of rate_limits block above.
                          items:
                            properties:
                              calls:
                                description: Used to specify how many calls are allowed for a key within the renewal_period.
                                type: number
                              key:
                                description: The key field for a tag.
                                type: string
                              principal:
                                description: Principal field for a user, user group, or service principal to apply rate limiting to. Accepts a user email, group name, or service principal application ID.
                                type: string
                              renewalPeriod:
                                description: Renewal period field for a serving endpoint rate limit. Currently, only minute is supported.
                                type: string
                              tokens:
                                description: Specifies how many tokens are allowed for a key within the renewal_period.
                                type: number
                            type: object
                          type: array
                        usageTrackingConfig:
                          description: Block with configuration for payload logging using inference tables. For details see the description of auto_capture_config block above.
                          items:
                            properties:
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  budgetPolicyId:
                    description: (Optiona) The Budget Policy ID set for this serving endpoint.
                    type: string
                  config:
                    description: The model serving endpoint configuration. This is optional and can be added and modified after creation. If config was provided in a previous apply but is not provided in the current apply, no change to the model serving endpoint will occur. To recreate the model serving endpoint without the config block, the model serving endpoint must be destroyed and recreated.
                    items:
                      properties:
                        autoCaptureConfig:
                          description: Configuration for Inference Tables which automatically logs requests and responses to Unity Catalog.
                          items:
                            properties:
                              catalogName:
                                description: 'The name of the catalog in Unity Catalog. NOTE: On update, you cannot change the catalog name if it was already set.'
                                type: string
                              enabled:
                                description: Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error codes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same endpoint, following the order of served entity list, until a successful response is returned.
                                type: boolean
                              schemaName:
                                description: 'The name of the schema in Unity Catalog. NOTE: On update, you cannot change the schema name if it was already set.'
                                type: string
                              tableNamePrefix:
                                description: 'The prefix of the table in Unity Catalog. NOTE: On update, you cannot change the prefix name if it was already set.'
                                type: string
                            type: object
                          type: array
                        servedEntities:
                          description: A list of served entities for the endpoint to serve. A serving endpoint can have up to 10 served entities.
                          items:
                            properties:
                              entityName:
                                description: The name of the entity to be served. The entity may be a model in the Databricks Model Registry, a model in the Unity Catalog (UC), or a function of type FEATURE_SPEC in the UC. If it is a UC object, the full name of the object should be given in the form of catalog_name.schema_name.model_name.
                                type: string
                              entityVersion:
                                description: The version of the model in Databricks Model Registry to be served or empty if the entity is a FEATURE_SPEC.
                                type: string
                              environmentVars:
                                additionalProperties:
                                  type: string
                                description: 'a map of environment variable names/values that will be used for serving this model.  Environment variables may refer to Databricks secrets using the standard syntax: {{secrets/secret_scope/secret_key}}.'
                                type: object
                                x-kubernetes-map-type: granular
                              externalModel:
                                description: 'The external model to be served. NOTE: Only one of external_model and (entity_name, entity_version, workload_size, workload_type, and scale_to_zero_enabled) can be specified with the latter set being used for custom model serving for a Databricks registered model. When an external_model is present, the served entities list can only have one served_entity object. An existing endpoint with external_model can not be updated to an endpoint without external_model. If the endpoint is created without external_model, users cannot update it to add external_model later.'
                                items:
                                  properties:
                                    ai21labsConfig:
                                      description: AI21Labs Config
                                      items:
                                        properties:
                                          ai21labsApiKey:
                                            description: The Databricks secret key reference for an AI21Labs API key.
                                            type: string
                                          ai21labsApiKeyPlaintext:
                                            description: An AI21 Labs API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    amazonBedrockConfig:
                                      description: Amazon Bedrock Config
                                      items:
                                        properties:
                                          awsAccessKeyId:
                                            description: The Databricks secret key reference for an AWS Access Key ID with permissions to interact with Bedrock services.
                                            type: string
                                          awsAccessKeyIdPlaintext:
                                            description: An AWS access key ID with permissions to interact with Bedrock services provided as a plaintext string.
                                            type: string
                                          awsRegion:
                                            description: The AWS region to use. Bedrock has to be enabled there.
                                            type: string
                                          awsSecretAccessKey:
                                            description: The Databricks secret key reference for an AWS Secret Access Key paired with the access key ID, with permissions to interact with Bedrock services.
                                            type: string
                                          awsSecretAccessKeyPlaintext:
                                            description: An AWS secret access key paired with the access key ID, with permissions to interact with Bedrock services provided as a plaintext string.
                                            type: string
                                          bedrockProvider:
                                            description: 'The underlying provider in Amazon Bedrock. Supported values (case insensitive) include: Anthropic, Cohere, AI21Labs, Amazon.'
                                            type: string
                                          instanceProfileArn:
                                            description: ARN of the instance profile that the served model will use to access AWS resources.
                                            type: string
                                        type: object
                                      type: array
                                    anthropicConfig:
                                      description: Anthropic Config
                                      items:
                                        properties:
                                          anthropicApiKey:
                                            description: The Databricks secret key reference for an Anthropic API key.
                                            type: string
                                          anthropicApiKeyPlaintext:
                                            description: The Anthropic API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    cohereConfig:
                                      description: Cohere Config
                                      items:
                                        properties:
                                          cohereApiBase:
                                            type: string
                                          cohereApiKey:
                                            description: The Databricks secret key reference for a Cohere API key.
                                            type: string
                                          cohereApiKeyPlaintext:
                                            description: The Cohere API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    customProviderConfig:
                                      description: Custom Provider Config. Only required if the provider is 'custom'.
                                      items:
                                        properties:
                                          apiKeyAuth:
                                            description: API key authentication for the custom provider API. Conflicts with bearer_token_auth.
                                            items:
                                              properties:
                                                key:
                                                  description: The key field for a tag.
                                                  type: string
                                                value:
                                                  description: The Databricks secret key reference for an API Key.
                                                  type: string
                                                valuePlaintext:
                                                  description: The API Key provided as a plaintext string.
                                                  type: string
                                              type: object
                                            type: array
                                          bearerTokenAuth:
                                            description: bearer token authentication for the custom provider API.  Conflicts with api_key_auth.
                                            items:
                                              properties:
                                                token:
                                                  description: The Databricks secret key reference for a token.
                                                  type: string
                                                tokenPlaintext:
                                                  description: The token provided as a plaintext string.
                                                  type: string
                                              type: object
                                            type: array
                                          customProviderUrl:
                                            description: URL of the custom provider API.
                                            type: string
                                        type: object
                                      type: array
                                    databricksModelServingConfig:
                                      description: Databricks Model Serving Config
                                      items:
                                        properties:
                                          databricksApiToken:
                                            description: The Databricks secret key reference for a Databricks API token that corresponds to a user or service principal with Can Query access to the model serving endpoint pointed to by this external model.
                                            type: string
                                          databricksApiTokenPlaintext:
                                            description: The Databricks API token that corresponds to a user or service principal with Can Query access to the model serving endpoint pointed to by this external model provided as a plaintext string.
                                            type: string
                                          databricksWorkspaceUrl:
                                            description: The URL of the Databricks workspace containing the model serving endpoint pointed to by this external model.
                                            type: string
                                        type: object
                                      type: array
                                    googleCloudVertexAiConfig:
                                      description: Google Cloud Vertex AI Config.
                                      items:
                                        properties:
                                          privateKey:
                                            description: The Databricks secret key reference for a private key for the service account that has access to the Google Cloud Vertex AI Service.
                                            type: string
                                          privateKeyPlaintext:
                                            description: The private key for the service account that has access to the Google Cloud Vertex AI Service is provided as a plaintext secret.
                                            type: string
                                          projectId:
                                            description: This is the Google Cloud project id that the service account is associated with.
                                            type: string
                                          region:
                                            description: This is the region for the Google Cloud Vertex AI Service.
                                            type: string
                                        type: object
                                      type: array
                                    name:
                                      description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                      type: string
                                    openaiConfig:
                                      description: OpenAI Config
                                      items:
                                        properties:
                                          microsoftEntraClientId:
                                            description: This field is only required for Azure AD OpenAI and is the Microsoft Entra Client ID.
                                            type: string
                                          microsoftEntraClientSecret:
                                            description: The Databricks secret key reference for a client secret used for Microsoft Entra ID authentication.
                                            type: string
                                          microsoftEntraClientSecretPlaintext:
                                            description: The client secret used for Microsoft Entra ID authentication provided as a plaintext string.
                                            type: string
                                          microsoftEntraTenantId:
                                            description: This field is only required for Azure AD OpenAI and is the Microsoft Entra Tenant ID.
                                            type: string
                                          openaiApiBase:
                                            description: 'This is the base URL for the OpenAI API (default: "https://api.openai.com/v1"). For Azure OpenAI, this field is required and is the base URL for the Azure OpenAI API service provided by Azure.'
                                            type: string
                                          openaiApiKey:
                                            description: The Databricks secret key reference for an OpenAI or Azure OpenAI API key.
                                            type: string
                                          openaiApiKeyPlaintext:
                                            description: The OpenAI API key using the OpenAI or Azure service provided as a plaintext string.
                                            type: string
                                          openaiApiType:
                                            description: This is an optional field to specify the type of OpenAI API to use. For Azure OpenAI, this field is required, and this parameter represents the preferred security access validation protocol. For access token validation, use azure. For authentication using Azure Active Directory (Azure AD) use, azuread.
                                            type: string
                                          openaiApiVersion:
                                            description: This is an optional field to specify the OpenAI API version. For Azure OpenAI, this field is required and is the version of the Azure OpenAI service to utilize, specified by a date.
                                            type: string
                                          openaiDeploymentName:
                                            description: This field is only required for Azure OpenAI and is the name of the deployment resource for the Azure OpenAI service.
                                            type: string
                                          openaiOrganization:
                                            description: This is an optional field to specify the organization in OpenAI or Azure OpenAI.
                                            type: string
                                        type: object
                                      type: array
                                    palmConfig:
                                      description: PaLM Config
                                      items:
                                        properties:
                                          palmApiKey:
                                            description: The Databricks secret key reference for a PaLM API key.
                                            type: string
                                          palmApiKeyPlaintext:
                                            description: The PaLM API key provided as a plaintext string.
                                            type: string
                                        type: object
                                      type: array
                                    provider:
                                      description: The name of the provider for the external model. Currently, the supported providers are ai21labs, anthropic, amazon-bedrock, cohere, databricks-model-serving, google-cloud-vertex-ai, openai, and palm.
                                      type: string
                                    task:
                                      description: The task type of the external model.
                                      type: string
                                  type: object
                                type: array
                              instanceProfileArn:
                                description: ARN of the instance profile that the served model will use to access AWS resources.
                                type: string
                              maxProvisionedConcurrency:
                                description: The maximum provisioned concurrency that the endpoint can scale up to. Conflicts with workload_size.
                                type: number
                              maxProvisionedThroughput:
                                description: The maximum tokens per second that the endpoint can scale up to.
                                type: number
                              minProvisionedConcurrency:
                                description: The minimum provisioned concurrency that the endpoint can scale down to. Conflicts with workload_size.
                                type: number
                              minProvisionedThroughput:
                                description: The minimum tokens per second that the endpoint can scale down to.
                                type: number
                              name:
                                description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                type: string
                              provisionedModelUnits:
                                type: number
                              scaleToZeroEnabled:
                                description: Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is true.
                                type: boolean
                              workloadSize:
                                description: The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are Small (4 - 4 provisioned concurrency), Medium (8 - 16 provisioned concurrency), and Large (16 - 64 provisioned concurrency).
                                type: string
                              workloadType:
                                description: The workload type of the served model. The workload type selects which type of compute to use in the endpoint. For deep learning workloads, GPU acceleration is available by selecting workload types like GPU_SMALL and others. See the documentation for all options. The default value is CPU.
                                type: string
                            type: object
                          type: array
                        servedModels:
                          description: (Deprecated, use served_entities instead) Each block represents a served model for the endpoint to serve. A model serving endpoint can have up to 10 served models.
                          items:
                            properties:
                              environmentVars:
                                additionalProperties:
                                  type: string
                                description: 'a map of environment variable names/values that will be used for serving this model.  Environment variables may refer to Databricks secrets using the standard syntax: {{secrets/secret_scope/secret_key}}.'
                                type: object
                                x-kubernetes-map-type: granular
                              instanceProfileArn:
                                description: ARN of the instance profile that the served model will use to access AWS resources.
                                type: string
                              maxProvisionedConcurrency:
                                description: The maximum provisioned concurrency that the endpoint can scale up to. Conflicts with workload_size.
                                type: number
                              maxProvisionedThroughput:
                                description: The maximum tokens per second that the endpoint can scale up to.
                                type: number
                              minProvisionedConcurrency:
                                description: The minimum provisioned concurrency that the endpoint can scale down to. Conflicts with workload_size.
                                type: number
                              minProvisionedThroughput:
                                description: The minimum tokens per second that the endpoint can scale down to.
                                type: number
                              modelName:
                                description: The name of the model in Databricks Model Registry to be served.
                                type: string
                              modelVersion:
                                description: The version of the model in Databricks Model Registry to be served.
                                type: string
                              name:
                                description: The name of a served model. It must be unique across an endpoint. If not specified, this field will default to modelname-modelversion. A served model name can consist of alphanumeric characters, dashes, and underscores.
                                type: string
                              provisionedModelUnits:
                                type: number
                              scaleToZeroEnabled:
                                description: Whether the compute resources for the served model should scale down to zero. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size will be 0. The default value is true.
                                type: boolean
                              workloadSize:
                                description: The workload size of the served model. The workload size corresponds to a range of provisioned concurrency that the compute will autoscale between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are Small (4 - 4 provisioned concurrency), Medium (8 - 16 provisioned concurrency), and Large (16 - 64 provisioned concurrency).
                                type: string
                              workloadType:
                                description: The workload type of the served model. The workload type selects which type of compute to use in the endpoint. For deep learning workloads, GPU acceleration is available by selecting workload types like GPU_SMALL and others. See the documentation for all options. The default value is CPU.
                                type: string
                            type: object
                          type: array
                        trafficConfig:
                          description: A single block represents the traffic split configuration amongst the served models.
                          items:
                            properties:
                              routes:
                                description: Each block represents a route that defines traffic to each served entity. Each served_entity block needs to have a corresponding routes block.
                                items:
                                  properties:
                                    servedEntityName:
                                      description: The name of the served entity this route configures traffic for. This needs to match the name of a served_entity block.
                                      type: string
                                    servedModelName:
                                      description: 'The name of the model serving endpoint. This field is required and must be unique across a workspace. An endpoint name can consist of alphanumeric characters, dashes, and underscores. NOTE: Changing this name will delete the existing endpoint and create a new endpoint with the updated name.'
                                      type: string
                                    trafficPercentage:
                                      description: The percentage of endpoint traffic to send to this route. It must be an integer between 0 and 100 inclusive.
                                      type: number
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: The description of the model serving endpoint.
                    type: string
                  emailNotifications:
                    description: A block with Email notification setting.
                    items:
                      properties:
                        onUpdateFailure:
                          description: a list of email addresses to be notified when an endpoint fails to update its configuration or state.
                          items:
                            type: string
                          type: array
                        onUpdateSuccess:
                          description: a list of email addresses to be notified when an endpoint successfully updates its configuration or state.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  endpointUrl:
                    description: Invocation url of the endpoint.
                    type: string
                  id:
                    description: Equal to the name argument and used to identify the serving endpoint.
                    type: string
                  name:
                    description: 'The name of the model serving endpoint. This field is required and must be unique across a workspace. An endpoint name can consist of alphanumeric characters, dashes, and underscores. NOTE: Changing this name will delete the existing endpoint and create a new endpoint with the updated name.'
                    type: string
                  rateLimits:
                    description: '(Deprecated, use ai_gateway to manage rate limits) A list of rate limit blocks to be applied to the serving endpoint. Note: only external and foundation model endpoints are supported as of now.'
                    items:
                      properties:
                        calls:
                          description: Used to specify how many calls are allowed for a key within the renewal_period.
                          type: number
                        key:
                          description: Key field for a serving endpoint rate limit. Currently, user, user_group, service_principal, and endpoint are supported, with endpoint being the default if not specified.
                          type: string
                        renewalPeriod:
                          description: Renewal period field for a serving endpoint rate limit. Currently, only minute is supported.
                          type: string
                      type: object
                    type: array
                  routeOptimized:
                    description: 'A boolean enabling route optimization for the endpoint. Note: only available for custom models.'
                    type: boolean
                  servingEndpointId:
                    description: Unique identifier of the serving endpoint primarily used to set permissions and refer to this instance for other operations.
                    type: string
                  tags:
                    description: Tags to be attached to the serving endpoint and automatically propagated to billing logs.
                    items:
                      properties:
                        key:
                          description: The key field for a tag.
                          type: string
                        value:
                          description: The value field for a tag.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}