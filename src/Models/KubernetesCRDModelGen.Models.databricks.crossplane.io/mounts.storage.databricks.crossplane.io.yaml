apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: mounts.storage.databricks.crossplane.io
spec:
  group: storage.databricks.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - databricks
    kind: Mount
    listKind: MountList
    plural: mounts
    singular: mount
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Mount is the Schema for the Mounts API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MountSpec defines the desired state of Mount
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  abfs:
                    description: to mount ADLS Gen2 using Azure Blob Filesystem (ABFS) driver
                    items:
                      properties:
                        clientId:
                          description: (String) This is the client_id (Application Object ID) for the enterprise application for the service principal.
                          type: string
                        clientSecretKey:
                          description: (String) This is the secret key in which your service principal/enterprise app client secret will be stored.
                          type: string
                        clientSecretScope:
                          description: (String) This is the secret scope in which your service principal/enterprise app client secret will be stored.
                          type: string
                        containerName:
                          description: (String) ADLS gen2 container name. (Could be omitted if resource_id is provided)
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        initializeFileSystem:
                          description: (Bool) either or not initialize FS for the first use
                          type: boolean
                        storageAccountName:
                          description: (String) The name of the storage resource in which the data is. (Could be omitted if resource_id is provided)
                          type: string
                        tenantId:
                          description: (String) This is your azure directory tenant id. It is required for creating the mount. (Could be omitted if Azure authentication is used, and we can extract tenant_id from it).
                          type: string
                      type: object
                    type: array
                  adl:
                    description: to mount ADLS Gen1 using Azure Data Lake (ADL) driver
                    items:
                      properties:
                        clientId:
                          description: (String) This is the client_id for the enterprise application for the service principal.
                          type: string
                        clientSecretKey:
                          description: (String) This is the secret key in which your service principal/enterprise app client secret will be stored.
                          type: string
                        clientSecretScope:
                          description: (String) This is the secret scope in which your service principal/enterprise app client secret will be stored.
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        sparkConfPrefix:
                          description: '(String) This is the spark configuration prefix for adls gen 1 mount. The options are fs.adl, dfs.adls. Use fs.adl for runtime 6.0 and above for the clusters. Otherwise use dfs.adls. The default value is: fs.adl.'
                          type: string
                        storageResourceName:
                          description: (String) The name of the storage resource in which the data is for ADLS gen 1. This is what you are trying to mount. (Could be omitted if resource_id is provided)
                          type: string
                        tenantId:
                          description: (String) This is your azure directory tenant id. It is required for creating the mount. (Could be omitted if Azure authentication is used, and we can extract tenant_id from it)
                          type: string
                      type: object
                    type: array
                  clusterId:
                    description: Cluster to use for mounting. If no cluster is specified, a new cluster will be created and will mount the bucket for all of the clusters in this workspace. If the cluster is not running - it's going to be started, so be aware to set auto-termination rules on it.
                    type: string
                  encryptionType:
                    description: encryption type. Currently used only for AWS S3 mounts
                    type: string
                  extraConfigs:
                    additionalProperties:
                      type: string
                    description: configuration parameters that are necessary for mounting of specific storage
                    type: object
                    x-kubernetes-map-type: granular
                  gs:
                    description: to mount Google Cloud Storage
                    items:
                      properties:
                        bucketName:
                          description: (String) GCS bucket name to be mounted.
                          type: string
                        serviceAccount:
                          description: (String) email of registered Google Service Account for data access.  If it's not specified, then the cluster_id should be provided, and the cluster should have a Google service account attached to it.
                          type: string
                      type: object
                    type: array
                  name:
                    description: 'Name, under which mount will be accessible in dbfs:/mnt/<MOUNT_NAME>. If not specified, provider will try to infer it from depending on the resource type:'
                    type: string
                  resourceId:
                    description: resource ID for a given storage account. Could be used to fill defaults, such as storage account & container names on Azure.
                    type: string
                  s3:
                    description: to mount AWS S3
                    items:
                      properties:
                        bucketName:
                          description: (String) S3 bucket name to be mounted.
                          type: string
                        instanceProfile:
                          description: (String) ARN of registered instance profile for data access.  If it's not specified, then the cluster_id should be provided, and the cluster should have an instance profile attached to it. If both cluster_id & instance_profile are specified, then cluster_id takes precedence.
                          type: string
                      type: object
                    type: array
                  uri:
                    description: the URI for accessing specific storage (s3a://...., abfss://...., gs://...., etc.)
                    type: string
                  wasb:
                    description: to mount Azure Blob Storage using Windows Azure Storage Blob (WASB) driver
                    items:
                      properties:
                        authType:
                          description: (String) This is the auth type for blob storage. This can either be SAS tokens (SAS) or account access keys (ACCESS_KEY).
                          type: string
                        containerName:
                          description: (String) The container in which the data is. This is what you are trying to mount. (Could be omitted if resource_id is provided)
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        storageAccountName:
                          description: (String) The name of the storage resource in which the data is. (Could be omitted if resource_id is provided)
                          type: string
                        tokenSecretKey:
                          description: (String) This is the secret key in which your auth type token is stored.
                          type: string
                        tokenSecretScope:
                          description: (String) This is the secret scope in which your auth type token is stored.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  abfs:
                    description: to mount ADLS Gen2 using Azure Blob Filesystem (ABFS) driver
                    items:
                      properties:
                        clientId:
                          description: (String) This is the client_id (Application Object ID) for the enterprise application for the service principal.
                          type: string
                        clientSecretKey:
                          description: (String) This is the secret key in which your service principal/enterprise app client secret will be stored.
                          type: string
                        clientSecretScope:
                          description: (String) This is the secret scope in which your service principal/enterprise app client secret will be stored.
                          type: string
                        containerName:
                          description: (String) ADLS gen2 container name. (Could be omitted if resource_id is provided)
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        initializeFileSystem:
                          description: (Bool) either or not initialize FS for the first use
                          type: boolean
                        storageAccountName:
                          description: (String) The name of the storage resource in which the data is. (Could be omitted if resource_id is provided)
                          type: string
                        tenantId:
                          description: (String) This is your azure directory tenant id. It is required for creating the mount. (Could be omitted if Azure authentication is used, and we can extract tenant_id from it).
                          type: string
                      type: object
                    type: array
                  adl:
                    description: to mount ADLS Gen1 using Azure Data Lake (ADL) driver
                    items:
                      properties:
                        clientId:
                          description: (String) This is the client_id for the enterprise application for the service principal.
                          type: string
                        clientSecretKey:
                          description: (String) This is the secret key in which your service principal/enterprise app client secret will be stored.
                          type: string
                        clientSecretScope:
                          description: (String) This is the secret scope in which your service principal/enterprise app client secret will be stored.
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        sparkConfPrefix:
                          description: '(String) This is the spark configuration prefix for adls gen 1 mount. The options are fs.adl, dfs.adls. Use fs.adl for runtime 6.0 and above for the clusters. Otherwise use dfs.adls. The default value is: fs.adl.'
                          type: string
                        storageResourceName:
                          description: (String) The name of the storage resource in which the data is for ADLS gen 1. This is what you are trying to mount. (Could be omitted if resource_id is provided)
                          type: string
                        tenantId:
                          description: (String) This is your azure directory tenant id. It is required for creating the mount. (Could be omitted if Azure authentication is used, and we can extract tenant_id from it)
                          type: string
                      type: object
                    type: array
                  clusterId:
                    description: Cluster to use for mounting. If no cluster is specified, a new cluster will be created and will mount the bucket for all of the clusters in this workspace. If the cluster is not running - it's going to be started, so be aware to set auto-termination rules on it.
                    type: string
                  encryptionType:
                    description: encryption type. Currently used only for AWS S3 mounts
                    type: string
                  extraConfigs:
                    additionalProperties:
                      type: string
                    description: configuration parameters that are necessary for mounting of specific storage
                    type: object
                    x-kubernetes-map-type: granular
                  gs:
                    description: to mount Google Cloud Storage
                    items:
                      properties:
                        bucketName:
                          description: (String) GCS bucket name to be mounted.
                          type: string
                        serviceAccount:
                          description: (String) email of registered Google Service Account for data access.  If it's not specified, then the cluster_id should be provided, and the cluster should have a Google service account attached to it.
                          type: string
                      type: object
                    type: array
                  name:
                    description: 'Name, under which mount will be accessible in dbfs:/mnt/<MOUNT_NAME>. If not specified, provider will try to infer it from depending on the resource type:'
                    type: string
                  resourceId:
                    description: resource ID for a given storage account. Could be used to fill defaults, such as storage account & container names on Azure.
                    type: string
                  s3:
                    description: to mount AWS S3
                    items:
                      properties:
                        bucketName:
                          description: (String) S3 bucket name to be mounted.
                          type: string
                        instanceProfile:
                          description: (String) ARN of registered instance profile for data access.  If it's not specified, then the cluster_id should be provided, and the cluster should have an instance profile attached to it. If both cluster_id & instance_profile are specified, then cluster_id takes precedence.
                          type: string
                      type: object
                    type: array
                  uri:
                    description: the URI for accessing specific storage (s3a://...., abfss://...., gs://...., etc.)
                    type: string
                  wasb:
                    description: to mount Azure Blob Storage using Windows Azure Storage Blob (WASB) driver
                    items:
                      properties:
                        authType:
                          description: (String) This is the auth type for blob storage. This can either be SAS tokens (SAS) or account access keys (ACCESS_KEY).
                          type: string
                        containerName:
                          description: (String) The container in which the data is. This is what you are trying to mount. (Could be omitted if resource_id is provided)
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        storageAccountName:
                          description: (String) The name of the storage resource in which the data is. (Could be omitted if resource_id is provided)
                          type: string
                        tokenSecretKey:
                          description: (String) This is the secret key in which your auth type token is stored.
                          type: string
                        tokenSecretScope:
                          description: (String) This is the secret scope in which your auth type token is stored.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MountStatus defines the observed state of Mount.
            properties:
              atProvider:
                properties:
                  abfs:
                    description: to mount ADLS Gen2 using Azure Blob Filesystem (ABFS) driver
                    items:
                      properties:
                        clientId:
                          description: (String) This is the client_id (Application Object ID) for the enterprise application for the service principal.
                          type: string
                        clientSecretKey:
                          description: (String) This is the secret key in which your service principal/enterprise app client secret will be stored.
                          type: string
                        clientSecretScope:
                          description: (String) This is the secret scope in which your service principal/enterprise app client secret will be stored.
                          type: string
                        containerName:
                          description: (String) ADLS gen2 container name. (Could be omitted if resource_id is provided)
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        initializeFileSystem:
                          description: (Bool) either or not initialize FS for the first use
                          type: boolean
                        storageAccountName:
                          description: (String) The name of the storage resource in which the data is. (Could be omitted if resource_id is provided)
                          type: string
                        tenantId:
                          description: (String) This is your azure directory tenant id. It is required for creating the mount. (Could be omitted if Azure authentication is used, and we can extract tenant_id from it).
                          type: string
                      type: object
                    type: array
                  adl:
                    description: to mount ADLS Gen1 using Azure Data Lake (ADL) driver
                    items:
                      properties:
                        clientId:
                          description: (String) This is the client_id for the enterprise application for the service principal.
                          type: string
                        clientSecretKey:
                          description: (String) This is the secret key in which your service principal/enterprise app client secret will be stored.
                          type: string
                        clientSecretScope:
                          description: (String) This is the secret scope in which your service principal/enterprise app client secret will be stored.
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        sparkConfPrefix:
                          description: '(String) This is the spark configuration prefix for adls gen 1 mount. The options are fs.adl, dfs.adls. Use fs.adl for runtime 6.0 and above for the clusters. Otherwise use dfs.adls. The default value is: fs.adl.'
                          type: string
                        storageResourceName:
                          description: (String) The name of the storage resource in which the data is for ADLS gen 1. This is what you are trying to mount. (Could be omitted if resource_id is provided)
                          type: string
                        tenantId:
                          description: (String) This is your azure directory tenant id. It is required for creating the mount. (Could be omitted if Azure authentication is used, and we can extract tenant_id from it)
                          type: string
                      type: object
                    type: array
                  clusterId:
                    description: Cluster to use for mounting. If no cluster is specified, a new cluster will be created and will mount the bucket for all of the clusters in this workspace. If the cluster is not running - it's going to be started, so be aware to set auto-termination rules on it.
                    type: string
                  encryptionType:
                    description: encryption type. Currently used only for AWS S3 mounts
                    type: string
                  extraConfigs:
                    additionalProperties:
                      type: string
                    description: configuration parameters that are necessary for mounting of specific storage
                    type: object
                    x-kubernetes-map-type: granular
                  gs:
                    description: to mount Google Cloud Storage
                    items:
                      properties:
                        bucketName:
                          description: (String) GCS bucket name to be mounted.
                          type: string
                        serviceAccount:
                          description: (String) email of registered Google Service Account for data access.  If it's not specified, then the cluster_id should be provided, and the cluster should have a Google service account attached to it.
                          type: string
                      type: object
                    type: array
                  id:
                    description: mount name
                    type: string
                  name:
                    description: 'Name, under which mount will be accessible in dbfs:/mnt/<MOUNT_NAME>. If not specified, provider will try to infer it from depending on the resource type:'
                    type: string
                  resourceId:
                    description: resource ID for a given storage account. Could be used to fill defaults, such as storage account & container names on Azure.
                    type: string
                  s3:
                    description: to mount AWS S3
                    items:
                      properties:
                        bucketName:
                          description: (String) S3 bucket name to be mounted.
                          type: string
                        instanceProfile:
                          description: (String) ARN of registered instance profile for data access.  If it's not specified, then the cluster_id should be provided, and the cluster should have an instance profile attached to it. If both cluster_id & instance_profile are specified, then cluster_id takes precedence.
                          type: string
                      type: object
                    type: array
                  source:
                    description: (String) HDFS-compatible url
                    type: string
                  uri:
                    description: the URI for accessing specific storage (s3a://...., abfss://...., gs://...., etc.)
                    type: string
                  wasb:
                    description: to mount Azure Blob Storage using Windows Azure Storage Blob (WASB) driver
                    items:
                      properties:
                        authType:
                          description: (String) This is the auth type for blob storage. This can either be SAS tokens (SAS) or account access keys (ACCESS_KEY).
                          type: string
                        containerName:
                          description: (String) The container in which the data is. This is what you are trying to mount. (Could be omitted if resource_id is provided)
                          type: string
                        directory:
                          description: (Computed) (String) This is optional if you don't want to add an additional directory that you wish to mount. This must start with a "/".
                          type: string
                        storageAccountName:
                          description: (String) The name of the storage resource in which the data is. (Could be omitted if resource_id is provided)
                          type: string
                        tokenSecretKey:
                          description: (String) This is the secret key in which your auth type token is stored.
                          type: string
                        tokenSecretScope:
                          description: (String) This is the secret scope in which your auth type token is stored.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}