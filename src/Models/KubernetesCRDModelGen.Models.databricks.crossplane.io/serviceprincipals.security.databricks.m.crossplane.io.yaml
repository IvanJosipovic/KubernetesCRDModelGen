apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: serviceprincipals.security.databricks.m.crossplane.io
spec:
  group: security.databricks.m.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - databricks
    kind: ServicePrincipal
    listKind: ServicePrincipalList
    plural: serviceprincipals
    singular: serviceprincipal
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServicePrincipal is the Schema for the ServicePrincipals API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServicePrincipalSpec defines the desired state of ServicePrincipal
            properties:
              forProvider:
                properties:
                  aclPrincipalId:
                    description: identifier for use in databricks_access_control_rule_set, e.g. servicePrincipals/00000000-0000-0000-0000-000000000000.
                    type: string
                  active:
                    description: Either service principal is active or not. True by default, but can be set to false in case of service principal deactivation with preserving service principal assets.
                    type: boolean
                  allowClusterCreate:
                    description: Allow the service principal to have cluster create privileges. Defaults to false. More fine grained permissions could be assigned with databricks_permissions and cluster_id argument. Everyone without allow_cluster_create argument set, but with permission to use Cluster Policy would be able to create clusters, but within the boundaries of that specific policy.
                    type: boolean
                  allowInstancePoolCreate:
                    description: Allow the service principal to have instance pool create privileges. Defaults to false. More fine grained permissions could be assigned with databricks_permissions and instance_pool_id argument.
                    type: boolean
                  applicationId:
                    description: managed service principals this value is auto-generated.
                    type: string
                  databricksSqlAccess:
                    description: This is a field to allow the service principal to have access to Databricks SQL feature through databricks_sql_endpoint.
                    type: boolean
                  disableAsUserDeletion:
                    description: Deactivate the service principal when deleting the resource, rather than deleting the service principal entirely. Defaults to true when the provider is configured at the account-level and false when configured at the workspace-level. This flag is exclusive to force_delete_repos and force_delete_home_dir flags.
                    type: boolean
                  displayName:
                    description: This is an alias for the service principal and can be the full name of the service principal.
                    type: string
                  externalId:
                    description: ID of the service principal in an external identity provider.
                    type: string
                  force:
                    description: This functionality is experimental and is designed to simplify corner cases, like Azure Active Directory synchronisation.
                    type: boolean
                  forceDeleteHomeDir:
                    description: This flag determines whether the service principal's home directory is deleted when the user is deleted. It will have no impact when in the accounts SCIM API. False by default.
                    type: boolean
                  forceDeleteRepos:
                    description: This flag determines whether the service principal's repo directory is deleted when the user is deleted. It will have no impact when in the accounts SCIM API. False by default.
                    type: boolean
                  home:
                    description: Home folder of the service principal, e.g. /Users/00000000-0000-0000-0000-000000000000.
                    type: string
                  repos:
                    description: Personal Repos location of the service principal, e.g. /Repos/00000000-0000-0000-0000-000000000000.
                    type: string
                  workspaceAccess:
                    description: This is a field to allow the service principal to have access to a Databricks Workspace.
                    type: boolean
                  workspaceConsume:
                    description: This is a field to allow the service principal to have access to a Databricks Workspace as consumer, with limited access to workspace UI.  Couldn't be used with workspace_access or databricks_sql_access.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  aclPrincipalId:
                    description: identifier for use in databricks_access_control_rule_set, e.g. servicePrincipals/00000000-0000-0000-0000-000000000000.
                    type: string
                  active:
                    description: Either service principal is active or not. True by default, but can be set to false in case of service principal deactivation with preserving service principal assets.
                    type: boolean
                  allowClusterCreate:
                    description: Allow the service principal to have cluster create privileges. Defaults to false. More fine grained permissions could be assigned with databricks_permissions and cluster_id argument. Everyone without allow_cluster_create argument set, but with permission to use Cluster Policy would be able to create clusters, but within the boundaries of that specific policy.
                    type: boolean
                  allowInstancePoolCreate:
                    description: Allow the service principal to have instance pool create privileges. Defaults to false. More fine grained permissions could be assigned with databricks_permissions and instance_pool_id argument.
                    type: boolean
                  applicationId:
                    description: managed service principals this value is auto-generated.
                    type: string
                  databricksSqlAccess:
                    description: This is a field to allow the service principal to have access to Databricks SQL feature through databricks_sql_endpoint.
                    type: boolean
                  disableAsUserDeletion:
                    description: Deactivate the service principal when deleting the resource, rather than deleting the service principal entirely. Defaults to true when the provider is configured at the account-level and false when configured at the workspace-level. This flag is exclusive to force_delete_repos and force_delete_home_dir flags.
                    type: boolean
                  displayName:
                    description: This is an alias for the service principal and can be the full name of the service principal.
                    type: string
                  externalId:
                    description: ID of the service principal in an external identity provider.
                    type: string
                  force:
                    description: This functionality is experimental and is designed to simplify corner cases, like Azure Active Directory synchronisation.
                    type: boolean
                  forceDeleteHomeDir:
                    description: This flag determines whether the service principal's home directory is deleted when the user is deleted. It will have no impact when in the accounts SCIM API. False by default.
                    type: boolean
                  forceDeleteRepos:
                    description: This flag determines whether the service principal's repo directory is deleted when the user is deleted. It will have no impact when in the accounts SCIM API. False by default.
                    type: boolean
                  home:
                    description: Home folder of the service principal, e.g. /Users/00000000-0000-0000-0000-000000000000.
                    type: string
                  repos:
                    description: Personal Repos location of the service principal, e.g. /Repos/00000000-0000-0000-0000-000000000000.
                    type: string
                  workspaceAccess:
                    description: This is a field to allow the service principal to have access to a Databricks Workspace.
                    type: boolean
                  workspaceConsume:
                    description: This is a field to allow the service principal to have access to a Databricks Workspace as consumer, with limited access to workspace UI.  Couldn't be used with workspace_access or databricks_sql_access.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ServicePrincipalStatus defines the observed state of ServicePrincipal.
            properties:
              atProvider:
                properties:
                  aclPrincipalId:
                    description: identifier for use in databricks_access_control_rule_set, e.g. servicePrincipals/00000000-0000-0000-0000-000000000000.
                    type: string
                  active:
                    description: Either service principal is active or not. True by default, but can be set to false in case of service principal deactivation with preserving service principal assets.
                    type: boolean
                  allowClusterCreate:
                    description: Allow the service principal to have cluster create privileges. Defaults to false. More fine grained permissions could be assigned with databricks_permissions and cluster_id argument. Everyone without allow_cluster_create argument set, but with permission to use Cluster Policy would be able to create clusters, but within the boundaries of that specific policy.
                    type: boolean
                  allowInstancePoolCreate:
                    description: Allow the service principal to have instance pool create privileges. Defaults to false. More fine grained permissions could be assigned with databricks_permissions and instance_pool_id argument.
                    type: boolean
                  applicationId:
                    description: managed service principals this value is auto-generated.
                    type: string
                  databricksSqlAccess:
                    description: This is a field to allow the service principal to have access to Databricks SQL feature through databricks_sql_endpoint.
                    type: boolean
                  disableAsUserDeletion:
                    description: Deactivate the service principal when deleting the resource, rather than deleting the service principal entirely. Defaults to true when the provider is configured at the account-level and false when configured at the workspace-level. This flag is exclusive to force_delete_repos and force_delete_home_dir flags.
                    type: boolean
                  displayName:
                    description: This is an alias for the service principal and can be the full name of the service principal.
                    type: string
                  externalId:
                    description: ID of the service principal in an external identity provider.
                    type: string
                  force:
                    description: This functionality is experimental and is designed to simplify corner cases, like Azure Active Directory synchronisation.
                    type: boolean
                  forceDeleteHomeDir:
                    description: This flag determines whether the service principal's home directory is deleted when the user is deleted. It will have no impact when in the accounts SCIM API. False by default.
                    type: boolean
                  forceDeleteRepos:
                    description: This flag determines whether the service principal's repo directory is deleted when the user is deleted. It will have no impact when in the accounts SCIM API. False by default.
                    type: boolean
                  home:
                    description: Home folder of the service principal, e.g. /Users/00000000-0000-0000-0000-000000000000.
                    type: string
                  id:
                    description: Canonical unique identifier for the service principal (SCIM ID).
                    type: string
                  repos:
                    description: Personal Repos location of the service principal, e.g. /Repos/00000000-0000-0000-0000-000000000000.
                    type: string
                  workspaceAccess:
                    description: This is a field to allow the service principal to have access to a Databricks Workspace.
                    type: boolean
                  workspaceConsume:
                    description: This is a field to allow the service principal to have access to a Databricks Workspace as consumer, with limited access to workspace UI.  Couldn't be used with workspace_access or databricks_sql_access.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}