apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: storagecredentials.unity.databricks.crossplane.io
spec:
  group: unity.databricks.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - databricks
    kind: StorageCredential
    listKind: StorageCredentialList
    plural: storagecredentials
    singular: storagecredential
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StorageCredential is the Schema for the StorageCredentials API.
        properties:
          apiVersion:
            description: >-
              APIVersion defines the versioned schema of this representation of an object.

              Servers should convert recognized schemas to the latest internal value, and

              may reject unrecognized values.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: >-
              Kind is a string value representing the REST resource this object represents.

              Servers may infer this from the endpoint the client submits requests to.

              Cannot be updated.

              In CamelCase.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StorageCredentialSpec defines the desired state of StorageCredential
            properties:
              deletionPolicy:
                default: Delete
                description: >-
                  DeletionPolicy specifies what will happen to the underlying external

                  when this managed resource is deleted - either "Delete" or "Orphan" the

                  external resource.

                  This field is planned to be deprecated in favor of the ManagementPolicies

                  field in a future release. Currently, both could be set independently and

                  non-default values would be honored if the feature flag is enabled.

                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  awsIamRole:
                    items:
                      properties:
                        externalId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        roleArn:
                          description: The Amazon Resource Name (ARN) of the AWS IAM role for S3 data access, of the form arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF
                          type: string
                        unityCatalogIamArn:
                          type: string
                      type: object
                    type: array
                  azureManagedIdentity:
                    items:
                      properties:
                        accessConnectorId:
                          description: The Resource ID of the Azure Databricks Access Connector resource, of the form /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-name/providers/Microsoft.Databricks/accessConnectors/connector-name.
                          type: string
                        credentialId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        managedIdentityId:
                          description: The Resource ID of the Azure User Assigned Managed Identity associated with Azure Databricks Access Connector, of the form /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-name/providers/Microsoft.ManagedIdentity/userAssignedIdentities/user-managed-identity-name.
                          type: string
                      type: object
                    type: array
                  azureServicePrincipal:
                    items:
                      properties:
                        applicationId:
                          description: The application ID of the application registration within the referenced AAD tenant
                          type: string
                        clientSecretSecretRef:
                          description: The client secret generated for the above app ID in AAD. This field is redacted on output
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        directoryId:
                          description: The directory ID corresponding to the Azure Active Directory (AAD) tenant of the application
                          type: string
                      type: object
                    type: array
                  cloudflareApiToken:
                    items:
                      properties:
                        accessKeyId:
                          description: R2 API token access key ID
                          type: string
                        accountId:
                          description: R2 account ID
                          type: string
                        secretAccessKeySecretRef:
                          description: R2 API token secret access key
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  comment:
                    type: string
                  databricksGcpServiceAccount:
                    items:
                      properties:
                        credentialId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        email:
                          description: The email of the GCP service account created, to be granted access to relevant buckets.
                          type: string
                      type: object
                    type: array
                  forceDestroy:
                    description: Delete storage credential regardless of its dependencies.
                    type: boolean
                  forceUpdate:
                    description: Update storage credential regardless of its dependents.
                    type: boolean
                  gcpServiceAccountKey:
                    items:
                      properties:
                        email:
                          description: The email of the GCP service account created, to be granted access to relevant buckets.
                          type: string
                        privateKeyId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        privateKeySecretRef:
                          description: A SecretKeySelector is a reference to a secret key in an arbitrary namespace.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  isolationMode:
                    description: Whether the storage credential is accessible from all workspaces or a specific set of workspaces. Can be ISOLATION_MODE_ISOLATED or ISOLATION_MODE_OPEN. Setting the credential to ISOLATION_MODE_ISOLATED will automatically allow access from the current workspace.
                    type: string
                  metastoreId:
                    description: Unique identifier of the parent Metastore. If set for workspace-level, it must match the ID of the metastore assigned to the worspace. When changing the metastore assigned to a workspace, this field becomes required.
                    type: string
                  name:
                    description: Name of Storage Credentials, which must be unique within the databricks_metastore. Change forces creation of a new resource.
                    type: string
                  owner:
                    description: Username/groupname/sp application_id of the storage credential owner.
                    type: string
                  readOnly:
                    description: Indicates whether the storage credential is only usable for read operations.
                    type: boolean
                  skipValidation:
                    description: Suppress validation errors if any & force save the storage credential.
                    type: boolean
                type: object
              initProvider:
                description: >-
                  THIS IS A BETA FIELD. It will be honored

                  unless the Management Policies feature flag is disabled.

                  InitProvider holds the same fields as ForProvider, with the exception

                  of Identifier and other resource reference fields. The fields that are

                  in InitProvider are merged into ForProvider when the resource is created.

                  The same fields are also added to the terraform ignore_changes hook, to

                  avoid updating them after creation. This is useful for fields that are

                  required on creation, but we do not desire to update them after creation,

                  for example because of an external controller is managing them, like an

                  autoscaler.
                properties:
                  awsIamRole:
                    items:
                      properties:
                        externalId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        roleArn:
                          description: The Amazon Resource Name (ARN) of the AWS IAM role for S3 data access, of the form arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF
                          type: string
                        unityCatalogIamArn:
                          type: string
                      type: object
                    type: array
                  azureManagedIdentity:
                    items:
                      properties:
                        accessConnectorId:
                          description: The Resource ID of the Azure Databricks Access Connector resource, of the form /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-name/providers/Microsoft.Databricks/accessConnectors/connector-name.
                          type: string
                        credentialId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        managedIdentityId:
                          description: The Resource ID of the Azure User Assigned Managed Identity associated with Azure Databricks Access Connector, of the form /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-name/providers/Microsoft.ManagedIdentity/userAssignedIdentities/user-managed-identity-name.
                          type: string
                      type: object
                    type: array
                  azureServicePrincipal:
                    items:
                      properties:
                        applicationId:
                          description: The application ID of the application registration within the referenced AAD tenant
                          type: string
                        clientSecretSecretRef:
                          description: The client secret generated for the above app ID in AAD. This field is redacted on output
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        directoryId:
                          description: The directory ID corresponding to the Azure Active Directory (AAD) tenant of the application
                          type: string
                      required:
                      - clientSecretSecretRef
                      type: object
                    type: array
                  cloudflareApiToken:
                    items:
                      properties:
                        accessKeyId:
                          description: R2 API token access key ID
                          type: string
                        accountId:
                          description: R2 account ID
                          type: string
                        secretAccessKeySecretRef:
                          description: R2 API token secret access key
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - secretAccessKeySecretRef
                      type: object
                    type: array
                  comment:
                    type: string
                  databricksGcpServiceAccount:
                    items:
                      properties:
                        credentialId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        email:
                          description: The email of the GCP service account created, to be granted access to relevant buckets.
                          type: string
                      type: object
                    type: array
                  forceDestroy:
                    description: Delete storage credential regardless of its dependencies.
                    type: boolean
                  forceUpdate:
                    description: Update storage credential regardless of its dependents.
                    type: boolean
                  gcpServiceAccountKey:
                    items:
                      properties:
                        email:
                          description: The email of the GCP service account created, to be granted access to relevant buckets.
                          type: string
                        privateKeyId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        privateKeySecretRef:
                          description: A SecretKeySelector is a reference to a secret key in an arbitrary namespace.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - privateKeySecretRef
                      type: object
                    type: array
                  isolationMode:
                    description: Whether the storage credential is accessible from all workspaces or a specific set of workspaces. Can be ISOLATION_MODE_ISOLATED or ISOLATION_MODE_OPEN. Setting the credential to ISOLATION_MODE_ISOLATED will automatically allow access from the current workspace.
                    type: string
                  metastoreId:
                    description: Unique identifier of the parent Metastore. If set for workspace-level, it must match the ID of the metastore assigned to the worspace. When changing the metastore assigned to a workspace, this field becomes required.
                    type: string
                  name:
                    description: Name of Storage Credentials, which must be unique within the databricks_metastore. Change forces creation of a new resource.
                    type: string
                  owner:
                    description: Username/groupname/sp application_id of the storage credential owner.
                    type: string
                  readOnly:
                    description: Indicates whether the storage credential is only usable for read operations.
                    type: boolean
                  skipValidation:
                    description: Suppress validation errors if any & force save the storage credential.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: >-
                  THIS IS A BETA FIELD. It is on by default but can be opted out

                  through a Crossplane feature flag.

                  ManagementPolicies specify the array of actions Crossplane is allowed to

                  take on the managed and external resources.

                  This field is planned to replace the DeletionPolicy field in a future

                  release. Currently, both could be set independently and non-default

                  values would be honored if the feature flag is enabled. If both are

                  custom, the DeletionPolicy field will be ignored.

                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223

                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: >-
                    A ManagementAction represents an action that the Crossplane controllers

                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: >-
                  ProviderConfigReference specifies how the provider that will be used to

                  create, observe, update, and delete this managed resource should be

                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: >-
                          Resolution specifies whether resolution of this reference is required.

                          The default is 'Required', which means the reconcile will fail if the

                          reference cannot be resolved. 'Optional' means this reference will be

                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: >-
                          Resolve specifies when this reference should be resolved. The default

                          is 'IfNotPresent', which will attempt to resolve the reference only when

                          the corresponding field is not present. Use 'Always' to resolve the

                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: >-
                  PublishConnectionDetailsTo specifies the connection secret config which

                  contains a name, metadata and a reference to secret store config to

                  which any connection details for this managed resource should be written.

                  Connection details frequently include the endpoint, username,

                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: >-
                      SecretStoreConfigRef specifies which secret store config should be used

                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: >-
                              Resolution specifies whether resolution of this reference is required.

                              The default is 'Required', which means the reconcile will fail if the

                              reference cannot be resolved. 'Optional' means this reference will be

                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: >-
                              Resolve specifies when this reference should be resolved. The default

                              is 'IfNotPresent', which will attempt to resolve the reference only when

                              the corresponding field is not present. Use 'Always' to resolve the

                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: >-
                          Annotations are the annotations to be added to connection secret.

                          - For Kubernetes secrets, this will be used as "metadata.annotations".

                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: >-
                          Labels are the labels/tags to be added to connection secret.

                          - For Kubernetes secrets, this will be used as "metadata.labels".

                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: >-
                          Type is the SecretType for the connection secret.

                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: >-
                  WriteConnectionSecretToReference specifies the namespace and name of a

                  Secret to which any connection details for this managed resource should

                  be written. Connection details frequently include the endpoint, username,

                  and password required to connect to the managed resource.

                  This field is planned to be replaced in a future release in favor of

                  PublishConnectionDetailsTo. Currently, both could be set independently

                  and connection details would be published to both without affecting

                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
          status:
            description: StorageCredentialStatus defines the observed state of StorageCredential.
            properties:
              atProvider:
                properties:
                  awsIamRole:
                    items:
                      properties:
                        externalId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        roleArn:
                          description: The Amazon Resource Name (ARN) of the AWS IAM role for S3 data access, of the form arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF
                          type: string
                        unityCatalogIamArn:
                          type: string
                      type: object
                    type: array
                  azureManagedIdentity:
                    items:
                      properties:
                        accessConnectorId:
                          description: The Resource ID of the Azure Databricks Access Connector resource, of the form /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-name/providers/Microsoft.Databricks/accessConnectors/connector-name.
                          type: string
                        credentialId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        managedIdentityId:
                          description: The Resource ID of the Azure User Assigned Managed Identity associated with Azure Databricks Access Connector, of the form /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg-name/providers/Microsoft.ManagedIdentity/userAssignedIdentities/user-managed-identity-name.
                          type: string
                      type: object
                    type: array
                  azureServicePrincipal:
                    items:
                      properties:
                        applicationId:
                          description: The application ID of the application registration within the referenced AAD tenant
                          type: string
                        directoryId:
                          description: The directory ID corresponding to the Azure Active Directory (AAD) tenant of the application
                          type: string
                      type: object
                    type: array
                  cloudflareApiToken:
                    items:
                      properties:
                        accessKeyId:
                          description: R2 API token access key ID
                          type: string
                        accountId:
                          description: R2 account ID
                          type: string
                      type: object
                    type: array
                  comment:
                    type: string
                  databricksGcpServiceAccount:
                    items:
                      properties:
                        credentialId:
                          description: ID of this storage credential - same as the name.
                          type: string
                        email:
                          description: The email of the GCP service account created, to be granted access to relevant buckets.
                          type: string
                      type: object
                    type: array
                  forceDestroy:
                    description: Delete storage credential regardless of its dependencies.
                    type: boolean
                  forceUpdate:
                    description: Update storage credential regardless of its dependents.
                    type: boolean
                  gcpServiceAccountKey:
                    items:
                      properties:
                        email:
                          description: The email of the GCP service account created, to be granted access to relevant buckets.
                          type: string
                        privateKeyId:
                          description: ID of this storage credential - same as the name.
                          type: string
                      type: object
                    type: array
                  id:
                    description: ID of this storage credential - same as the name.
                    type: string
                  isolationMode:
                    description: Whether the storage credential is accessible from all workspaces or a specific set of workspaces. Can be ISOLATION_MODE_ISOLATED or ISOLATION_MODE_OPEN. Setting the credential to ISOLATION_MODE_ISOLATED will automatically allow access from the current workspace.
                    type: string
                  metastoreId:
                    description: Unique identifier of the parent Metastore. If set for workspace-level, it must match the ID of the metastore assigned to the worspace. When changing the metastore assigned to a workspace, this field becomes required.
                    type: string
                  name:
                    description: Name of Storage Credentials, which must be unique within the databricks_metastore. Change forces creation of a new resource.
                    type: string
                  owner:
                    description: Username/groupname/sp application_id of the storage credential owner.
                    type: string
                  readOnly:
                    description: Indicates whether the storage credential is only usable for read operations.
                    type: boolean
                  skipValidation:
                    description: Suppress validation errors if any & force save the storage credential.
                    type: boolean
                  storageCredentialId:
                    description: Unique ID of storage credential.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: >-
                        LastTransitionTime is the last time this condition transitioned from one

                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: >-
                        A Message containing details about this condition's last transition from

                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: >-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.

                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date

                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: >-
                        Type of this condition. At most one of each condition type may apply to

                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: >-
                  ObservedGeneration is the latest metadata.generation

                  which resulted in either a ready state, or stalled due to error

                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
