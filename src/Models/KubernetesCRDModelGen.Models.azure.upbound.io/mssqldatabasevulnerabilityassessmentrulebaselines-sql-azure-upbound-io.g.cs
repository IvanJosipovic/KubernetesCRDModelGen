using k8s;
using k8s.Models;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;

namespace KubernetesCRDModelGen.Models.sql.azure.upbound.io;
/// <summary>MSSQLDatabaseVulnerabilityAssessmentRuleBaseline is the Schema for the MSSQLDatabaseVulnerabilityAssessmentRuleBaselines API. Manages a Database Vulnerability Assessment Rule Baseline.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList : IKubernetesObject<V1ListMeta>, IItems<V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaseline>
{
    public const string KubeApiVersion = "v1beta1";
    public const string KubeKind = "MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList";
    public const string KubeGroup = "sql.azure.upbound.io";
    public const string KubePluralName = "mssqldatabasevulnerabilityassessmentrulebaselines";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ListMeta Metadata { get; set; }

    /// <summary></summary>
    [JsonPropertyName("items")]
    public IList<V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaseline> Items { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderBaselineResult
{
    /// <summary>A list representing a result of the baseline.</summary>
    [JsonPropertyName("result")]
    public IList<string>? Result { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderDatabaseNameRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Reference to a MSSQLDatabase in sql to populate databaseName.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderDatabaseNameRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderDatabaseNameRefPolicy? Policy { get; set; }
}

/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderDatabaseNameSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Selector for a MSSQLDatabase in sql to populate databaseName.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderDatabaseNameSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderDatabaseNameSelectorPolicy? Policy { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderServerVulnerabilityAssessmentIdRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Reference to a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderServerVulnerabilityAssessmentIdRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderServerVulnerabilityAssessmentIdRefPolicy? Policy { get; set; }
}

/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderServerVulnerabilityAssessmentIdSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Selector for a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderServerVulnerabilityAssessmentIdSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderServerVulnerabilityAssessmentIdSelectorPolicy? Policy { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProvider
{
    /// <summary>The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("baselineName")]
    public string? BaselineName { get; set; }

    /// <summary>A baseline_result block as documented below. Multiple blocks can be defined.</summary>
    [JsonPropertyName("baselineResult")]
    public IList<V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderBaselineResult>? BaselineResult { get; set; }

    /// <summary>Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("databaseName")]
    public string? DatabaseName { get; set; }

    /// <summary>Reference to a MSSQLDatabase in sql to populate databaseName.</summary>
    [JsonPropertyName("databaseNameRef")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderDatabaseNameRef? DatabaseNameRef { get; set; }

    /// <summary>Selector for a MSSQLDatabase in sql to populate databaseName.</summary>
    [JsonPropertyName("databaseNameSelector")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderDatabaseNameSelector? DatabaseNameSelector { get; set; }

    /// <summary>The vulnerability assessment rule ID. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("ruleId")]
    public string? RuleId { get; set; }

    /// <summary>The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("serverVulnerabilityAssessmentId")]
    public string? ServerVulnerabilityAssessmentId { get; set; }

    /// <summary>Reference to a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.</summary>
    [JsonPropertyName("serverVulnerabilityAssessmentIdRef")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderServerVulnerabilityAssessmentIdRef? ServerVulnerabilityAssessmentIdRef { get; set; }

    /// <summary>Selector for a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.</summary>
    [JsonPropertyName("serverVulnerabilityAssessmentIdSelector")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProviderServerVulnerabilityAssessmentIdSelector? ServerVulnerabilityAssessmentIdSelector { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderBaselineResult
{
    /// <summary>A list representing a result of the baseline.</summary>
    [JsonPropertyName("result")]
    public IList<string>? Result { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderDatabaseNameRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Reference to a MSSQLDatabase in sql to populate databaseName.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderDatabaseNameRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderDatabaseNameRefPolicy? Policy { get; set; }
}

/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderDatabaseNameSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Selector for a MSSQLDatabase in sql to populate databaseName.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderDatabaseNameSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderDatabaseNameSelectorPolicy? Policy { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderServerVulnerabilityAssessmentIdRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Reference to a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderServerVulnerabilityAssessmentIdRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderServerVulnerabilityAssessmentIdRefPolicy? Policy { get; set; }
}

/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderServerVulnerabilityAssessmentIdSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Selector for a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderServerVulnerabilityAssessmentIdSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderServerVulnerabilityAssessmentIdSelectorPolicy? Policy { get; set; }
}

/// <summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProvider
{
    /// <summary>The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("baselineName")]
    public string? BaselineName { get; set; }

    /// <summary>A baseline_result block as documented below. Multiple blocks can be defined.</summary>
    [JsonPropertyName("baselineResult")]
    public IList<V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderBaselineResult>? BaselineResult { get; set; }

    /// <summary>Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("databaseName")]
    public string? DatabaseName { get; set; }

    /// <summary>Reference to a MSSQLDatabase in sql to populate databaseName.</summary>
    [JsonPropertyName("databaseNameRef")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderDatabaseNameRef? DatabaseNameRef { get; set; }

    /// <summary>Selector for a MSSQLDatabase in sql to populate databaseName.</summary>
    [JsonPropertyName("databaseNameSelector")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderDatabaseNameSelector? DatabaseNameSelector { get; set; }

    /// <summary>The vulnerability assessment rule ID. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("ruleId")]
    public string? RuleId { get; set; }

    /// <summary>The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("serverVulnerabilityAssessmentId")]
    public string? ServerVulnerabilityAssessmentId { get; set; }

    /// <summary>Reference to a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.</summary>
    [JsonPropertyName("serverVulnerabilityAssessmentIdRef")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderServerVulnerabilityAssessmentIdRef? ServerVulnerabilityAssessmentIdRef { get; set; }

    /// <summary>Selector for a MSSQLServerVulnerabilityAssessment in sql to populate serverVulnerabilityAssessmentId.</summary>
    [JsonPropertyName("serverVulnerabilityAssessmentIdSelector")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProviderServerVulnerabilityAssessmentIdSelector? ServerVulnerabilityAssessmentIdSelector { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecProviderConfigRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecProviderConfigRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecProviderConfigRefPolicy? Policy { get; set; }
}

/// <summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecWriteConnectionSecretToRef
{
    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Namespace of the secret.</summary>
    [JsonPropertyName("namespace")]
    public string Namespace { get; set; }
}

/// <summary>MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec defines the desired state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec
{
    /// <summary>DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223</summary>
    [JsonPropertyName("deletionPolicy")]
    public string? DeletionPolicy { get; set; }

    /// <summary></summary>
    [JsonPropertyName("forProvider")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecForProvider ForProvider { get; set; }

    /// <summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>
    [JsonPropertyName("initProvider")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecInitProvider? InitProvider { get; set; }

    /// <summary>THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md</summary>
    [JsonPropertyName("managementPolicies")]
    public IList<string>? ManagementPolicies { get; set; }

    /// <summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>
    [JsonPropertyName("providerConfigRef")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecProviderConfigRef? ProviderConfigRef { get; set; }

    /// <summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>
    [JsonPropertyName("writeConnectionSecretToRef")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpecWriteConnectionSecretToRef? WriteConnectionSecretToRef { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatusAtProviderBaselineResult
{
    /// <summary>A list representing a result of the baseline.</summary>
    [JsonPropertyName("result")]
    public IList<string>? Result { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatusAtProvider
{
    /// <summary>The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("baselineName")]
    public string? BaselineName { get; set; }

    /// <summary>A baseline_result block as documented below. Multiple blocks can be defined.</summary>
    [JsonPropertyName("baselineResult")]
    public IList<V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatusAtProviderBaselineResult>? BaselineResult { get; set; }

    /// <summary>Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("databaseName")]
    public string? DatabaseName { get; set; }

    /// <summary>The ID of the Database Vulnerability Assessment Rule Baseline.</summary>
    [JsonPropertyName("id")]
    public string? Id { get; set; }

    /// <summary>The vulnerability assessment rule ID. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("ruleId")]
    public string? RuleId { get; set; }

    /// <summary>The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("serverVulnerabilityAssessmentId")]
    public string? ServerVulnerabilityAssessmentId { get; set; }
}

/// <summary>A Condition that may apply to a resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatusConditions
{
    /// <summary>LastTransitionTime is the last time this condition transitioned from one status to another.</summary>
    [JsonPropertyName("lastTransitionTime")]
    public string LastTransitionTime { get; set; }

    /// <summary>A Message containing details about this condition's last transition from one status to another, if any.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; set; }

    /// <summary>ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</summary>
    [JsonPropertyName("observedGeneration")]
    public long? ObservedGeneration { get; set; }

    /// <summary>A Reason for this condition's last transition from one status to another.</summary>
    [JsonPropertyName("reason")]
    public string Reason { get; set; }

    /// <summary>Status of this condition; is it currently True, False, or Unknown?</summary>
    [JsonPropertyName("status")]
    public string Status { get; set; }

    /// <summary>Type of this condition. At most one of each condition type may apply to a resource at any point in time.</summary>
    [JsonPropertyName("type")]
    public string Type { get; set; }
}

/// <summary>MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus defines the observed state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus
{
    /// <summary></summary>
    [JsonPropertyName("atProvider")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatusAtProvider? AtProvider { get; set; }

    /// <summary>Conditions of the resource.</summary>
    [JsonPropertyName("conditions")]
    public IList<V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatusConditions>? Conditions { get; set; }

    /// <summary>ObservedGeneration is the latest metadata.generation which resulted in either a ready state, or stalled due to error it can not recover from without human intervention.</summary>
    [JsonPropertyName("observedGeneration")]
    public long? ObservedGeneration { get; set; }
}

/// <summary>MSSQLDatabaseVulnerabilityAssessmentRuleBaseline is the Schema for the MSSQLDatabaseVulnerabilityAssessmentRuleBaselines API. Manages a Database Vulnerability Assessment Rule Baseline.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaseline : IKubernetesObject<V1ObjectMeta>, ISpec<V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec>, IStatus<V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus>
{
    public const string KubeApiVersion = "v1beta1";
    public const string KubeKind = "MSSQLDatabaseVulnerabilityAssessmentRuleBaseline";
    public const string KubeGroup = "sql.azure.upbound.io";
    public const string KubePluralName = "mssqldatabasevulnerabilityassessmentrulebaselines";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ObjectMeta Metadata { get; set; }

    /// <summary>MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec defines the desired state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline</summary>
    [JsonPropertyName("spec")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec Spec { get; set; }

    /// <summary>MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus defines the observed state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline.</summary>
    [JsonPropertyName("status")]
    public V1beta1MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus? Status { get; set; }
}