using k8s;
using k8s.Models;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;

namespace KubernetesCRDModelGen.Models.synapse.azure.upbound.io;
/// <summary>WorkspaceVulnerabilityAssessment is the Schema for the WorkspaceVulnerabilityAssessments API. Manages the Vulnerability Assessment for a Synapse Workspace.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta1WorkspaceVulnerabilityAssessmentList : IKubernetesObject<V1ListMeta>, IItems<V1beta1WorkspaceVulnerabilityAssessment>
{
    public const string KubeApiVersion = "v1beta1";
    public const string KubeKind = "WorkspaceVulnerabilityAssessmentList";
    public const string KubeGroup = "synapse.azure.upbound.io";
    public const string KubePluralName = "workspacevulnerabilityassessments";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ListMeta Metadata { get; set; }

    /// <summary></summary>
    [JsonPropertyName("items")]
    public IList<V1beta1WorkspaceVulnerabilityAssessment> Items { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderRecurringScans
{
    /// <summary>Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to false.</summary>
    [JsonPropertyName("emailSubscriptionAdminsEnabled")]
    public bool? EmailSubscriptionAdminsEnabled { get; set; }

    /// <summary>Specifies an array of email addresses to which the scan notification is sent.</summary>
    [JsonPropertyName("emails")]
    public IList<string>? Emails { get; set; }

    /// <summary>Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to false.</summary>
    [JsonPropertyName("enabled")]
    public bool? Enabled { get; set; }
}

/// <summary>Specifies the identifier key of the storage account for vulnerability assessment scan results. If storage_container_sas_key isn't specified, storage_account_access_key is required.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderStorageAccountAccessKeySecretRef
{
    /// <summary>The key to select.</summary>
    [JsonPropertyName("key")]
    public string Key { get; set; }

    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Namespace of the secret.</summary>
    [JsonPropertyName("namespace")]
    public string Namespace { get; set; }
}

/// <summary>A shared access signature (SAS Key) that has write access to the blob container specified in storage_container_path parameter. If storage_account_access_key isn't specified, storage_container_sas_key is required.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderStorageContainerSasKeySecretRef
{
    /// <summary>The key to select.</summary>
    [JsonPropertyName("key")]
    public string Key { get; set; }

    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Namespace of the secret.</summary>
    [JsonPropertyName("namespace")]
    public string Namespace { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderWorkspaceSecurityAlertPolicyIdRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Reference to a WorkspaceSecurityAlertPolicy in synapse to populate workspaceSecurityAlertPolicyId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderWorkspaceSecurityAlertPolicyIdRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderWorkspaceSecurityAlertPolicyIdRefPolicy? Policy { get; set; }
}

/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderWorkspaceSecurityAlertPolicyIdSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Selector for a WorkspaceSecurityAlertPolicy in synapse to populate workspaceSecurityAlertPolicyId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderWorkspaceSecurityAlertPolicyIdSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderWorkspaceSecurityAlertPolicyIdSelectorPolicy? Policy { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecForProvider
{
    /// <summary>The recurring scans settings. The recurring_scans block supports fields documented below.</summary>
    [JsonPropertyName("recurringScans")]
    public IList<V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderRecurringScans>? RecurringScans { get; set; }

    /// <summary>Specifies the identifier key of the storage account for vulnerability assessment scan results. If storage_container_sas_key isn't specified, storage_account_access_key is required.</summary>
    [JsonPropertyName("storageAccountAccessKeySecretRef")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderStorageAccountAccessKeySecretRef? StorageAccountAccessKeySecretRef { get; set; }

    /// <summary>A blob storage container path to hold the scan results (e.g. https://example.blob.core.windows.net/VaScans/).</summary>
    [JsonPropertyName("storageContainerPath")]
    public string? StorageContainerPath { get; set; }

    /// <summary>A shared access signature (SAS Key) that has write access to the blob container specified in storage_container_path parameter. If storage_account_access_key isn't specified, storage_container_sas_key is required.</summary>
    [JsonPropertyName("storageContainerSasKeySecretRef")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderStorageContainerSasKeySecretRef? StorageContainerSasKeySecretRef { get; set; }

    /// <summary>The ID of the security alert policy of the Synapse Workspace. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("workspaceSecurityAlertPolicyId")]
    public string? WorkspaceSecurityAlertPolicyId { get; set; }

    /// <summary>Reference to a WorkspaceSecurityAlertPolicy in synapse to populate workspaceSecurityAlertPolicyId.</summary>
    [JsonPropertyName("workspaceSecurityAlertPolicyIdRef")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderWorkspaceSecurityAlertPolicyIdRef? WorkspaceSecurityAlertPolicyIdRef { get; set; }

    /// <summary>Selector for a WorkspaceSecurityAlertPolicy in synapse to populate workspaceSecurityAlertPolicyId.</summary>
    [JsonPropertyName("workspaceSecurityAlertPolicyIdSelector")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecForProviderWorkspaceSecurityAlertPolicyIdSelector? WorkspaceSecurityAlertPolicyIdSelector { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderRecurringScans
{
    /// <summary>Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to false.</summary>
    [JsonPropertyName("emailSubscriptionAdminsEnabled")]
    public bool? EmailSubscriptionAdminsEnabled { get; set; }

    /// <summary>Specifies an array of email addresses to which the scan notification is sent.</summary>
    [JsonPropertyName("emails")]
    public IList<string>? Emails { get; set; }

    /// <summary>Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to false.</summary>
    [JsonPropertyName("enabled")]
    public bool? Enabled { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderWorkspaceSecurityAlertPolicyIdRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Reference to a WorkspaceSecurityAlertPolicy in synapse to populate workspaceSecurityAlertPolicyId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderWorkspaceSecurityAlertPolicyIdRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderWorkspaceSecurityAlertPolicyIdRefPolicy? Policy { get; set; }
}

/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderWorkspaceSecurityAlertPolicyIdSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>Selector for a WorkspaceSecurityAlertPolicy in synapse to populate workspaceSecurityAlertPolicyId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderWorkspaceSecurityAlertPolicyIdSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderWorkspaceSecurityAlertPolicyIdSelectorPolicy? Policy { get; set; }
}

/// <summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecInitProvider
{
    /// <summary>The recurring scans settings. The recurring_scans block supports fields documented below.</summary>
    [JsonPropertyName("recurringScans")]
    public IList<V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderRecurringScans>? RecurringScans { get; set; }

    /// <summary>A blob storage container path to hold the scan results (e.g. https://example.blob.core.windows.net/VaScans/).</summary>
    [JsonPropertyName("storageContainerPath")]
    public string? StorageContainerPath { get; set; }

    /// <summary>The ID of the security alert policy of the Synapse Workspace. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("workspaceSecurityAlertPolicyId")]
    public string? WorkspaceSecurityAlertPolicyId { get; set; }

    /// <summary>Reference to a WorkspaceSecurityAlertPolicy in synapse to populate workspaceSecurityAlertPolicyId.</summary>
    [JsonPropertyName("workspaceSecurityAlertPolicyIdRef")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderWorkspaceSecurityAlertPolicyIdRef? WorkspaceSecurityAlertPolicyIdRef { get; set; }

    /// <summary>Selector for a WorkspaceSecurityAlertPolicy in synapse to populate workspaceSecurityAlertPolicyId.</summary>
    [JsonPropertyName("workspaceSecurityAlertPolicyIdSelector")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecInitProviderWorkspaceSecurityAlertPolicyIdSelector? WorkspaceSecurityAlertPolicyIdSelector { get; set; }
}

/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecProviderConfigRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}

/// <summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecProviderConfigRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecProviderConfigRefPolicy? Policy { get; set; }
}

/// <summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpecWriteConnectionSecretToRef
{
    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Namespace of the secret.</summary>
    [JsonPropertyName("namespace")]
    public string Namespace { get; set; }
}

/// <summary>WorkspaceVulnerabilityAssessmentSpec defines the desired state of WorkspaceVulnerabilityAssessment</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentSpec
{
    /// <summary>DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223</summary>
    [JsonPropertyName("deletionPolicy")]
    public string? DeletionPolicy { get; set; }

    /// <summary></summary>
    [JsonPropertyName("forProvider")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecForProvider ForProvider { get; set; }

    /// <summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>
    [JsonPropertyName("initProvider")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecInitProvider? InitProvider { get; set; }

    /// <summary>THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md</summary>
    [JsonPropertyName("managementPolicies")]
    public IList<string>? ManagementPolicies { get; set; }

    /// <summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>
    [JsonPropertyName("providerConfigRef")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecProviderConfigRef? ProviderConfigRef { get; set; }

    /// <summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>
    [JsonPropertyName("writeConnectionSecretToRef")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpecWriteConnectionSecretToRef? WriteConnectionSecretToRef { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentStatusAtProviderRecurringScans
{
    /// <summary>Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to false.</summary>
    [JsonPropertyName("emailSubscriptionAdminsEnabled")]
    public bool? EmailSubscriptionAdminsEnabled { get; set; }

    /// <summary>Specifies an array of email addresses to which the scan notification is sent.</summary>
    [JsonPropertyName("emails")]
    public IList<string>? Emails { get; set; }

    /// <summary>Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to false.</summary>
    [JsonPropertyName("enabled")]
    public bool? Enabled { get; set; }
}

/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentStatusAtProvider
{
    /// <summary>The ID of the Synapse Workspace Vulnerability Assessment.</summary>
    [JsonPropertyName("id")]
    public string? Id { get; set; }

    /// <summary>The recurring scans settings. The recurring_scans block supports fields documented below.</summary>
    [JsonPropertyName("recurringScans")]
    public IList<V1beta1WorkspaceVulnerabilityAssessmentStatusAtProviderRecurringScans>? RecurringScans { get; set; }

    /// <summary>A blob storage container path to hold the scan results (e.g. https://example.blob.core.windows.net/VaScans/).</summary>
    [JsonPropertyName("storageContainerPath")]
    public string? StorageContainerPath { get; set; }

    /// <summary>The ID of the security alert policy of the Synapse Workspace. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("workspaceSecurityAlertPolicyId")]
    public string? WorkspaceSecurityAlertPolicyId { get; set; }
}

/// <summary>A Condition that may apply to a resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentStatusConditions
{
    /// <summary>LastTransitionTime is the last time this condition transitioned from one status to another.</summary>
    [JsonPropertyName("lastTransitionTime")]
    public string LastTransitionTime { get; set; }

    /// <summary>A Message containing details about this condition's last transition from one status to another, if any.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; set; }

    /// <summary>ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</summary>
    [JsonPropertyName("observedGeneration")]
    public long? ObservedGeneration { get; set; }

    /// <summary>A Reason for this condition's last transition from one status to another.</summary>
    [JsonPropertyName("reason")]
    public string Reason { get; set; }

    /// <summary>Status of this condition; is it currently True, False, or Unknown?</summary>
    [JsonPropertyName("status")]
    public string Status { get; set; }

    /// <summary>Type of this condition. At most one of each condition type may apply to a resource at any point in time.</summary>
    [JsonPropertyName("type")]
    public string Type { get; set; }
}

/// <summary>WorkspaceVulnerabilityAssessmentStatus defines the observed state of WorkspaceVulnerabilityAssessment.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1WorkspaceVulnerabilityAssessmentStatus
{
    /// <summary></summary>
    [JsonPropertyName("atProvider")]
    public V1beta1WorkspaceVulnerabilityAssessmentStatusAtProvider? AtProvider { get; set; }

    /// <summary>Conditions of the resource.</summary>
    [JsonPropertyName("conditions")]
    public IList<V1beta1WorkspaceVulnerabilityAssessmentStatusConditions>? Conditions { get; set; }

    /// <summary>ObservedGeneration is the latest metadata.generation which resulted in either a ready state, or stalled due to error it can not recover from without human intervention.</summary>
    [JsonPropertyName("observedGeneration")]
    public long? ObservedGeneration { get; set; }
}

/// <summary>WorkspaceVulnerabilityAssessment is the Schema for the WorkspaceVulnerabilityAssessments API. Manages the Vulnerability Assessment for a Synapse Workspace.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta1WorkspaceVulnerabilityAssessment : IKubernetesObject<V1ObjectMeta>, ISpec<V1beta1WorkspaceVulnerabilityAssessmentSpec>, IStatus<V1beta1WorkspaceVulnerabilityAssessmentStatus>
{
    public const string KubeApiVersion = "v1beta1";
    public const string KubeKind = "WorkspaceVulnerabilityAssessment";
    public const string KubeGroup = "synapse.azure.upbound.io";
    public const string KubePluralName = "workspacevulnerabilityassessments";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ObjectMeta Metadata { get; set; }

    /// <summary>WorkspaceVulnerabilityAssessmentSpec defines the desired state of WorkspaceVulnerabilityAssessment</summary>
    [JsonPropertyName("spec")]
    public V1beta1WorkspaceVulnerabilityAssessmentSpec Spec { get; set; }

    /// <summary>WorkspaceVulnerabilityAssessmentStatus defines the observed state of WorkspaceVulnerabilityAssessment.</summary>
    [JsonPropertyName("status")]
    public V1beta1WorkspaceVulnerabilityAssessmentStatus? Status { get; set; }
}