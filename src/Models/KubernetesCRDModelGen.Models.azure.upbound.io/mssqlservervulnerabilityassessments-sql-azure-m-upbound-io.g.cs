using k8s;
using k8s.Models;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;

namespace KubernetesCRDModelGen.Models.sql.azure.m.upbound.io;
#nullable enable
/// <summary>MSSQLServerVulnerabilityAssessment is the Schema for the MSSQLServerVulnerabilityAssessments API. Manages the Vulnerability Assessment for an MS SQL Server.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentList : IKubernetesObject<V1ListMeta>, IItems<V1beta1MSSQLServerVulnerabilityAssessment>
{
    public const string KubeApiVersion = "v1beta1";
    public const string KubeKind = "MSSQLServerVulnerabilityAssessmentList";
    public const string KubeGroup = "sql.azure.m.upbound.io";
    public const string KubePluralName = "mssqlservervulnerabilityassessments";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ListMeta Metadata { get; set; }

    /// <summary></summary>
    [JsonPropertyName("items")]
    public IList<V1beta1MSSQLServerVulnerabilityAssessment> Items { get; set; }
}
#nullable disable

#nullable enable
/// <summary>A recurring_scans block as defined below.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderRecurringScans
{
    /// <summary>Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to false.</summary>
    [JsonPropertyName("emailSubscriptionAdmins")]
    public bool? EmailSubscriptionAdmins { get; set; }

    /// <summary>Specifies an array of email addresses to which the scan notification is sent.</summary>
    [JsonPropertyName("emails")]
    public IList<string>? Emails { get; set; }

    /// <summary>Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to false.</summary>
    [JsonPropertyName("enabled")]
    public bool? Enabled { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderServerSecurityAlertPolicyIdRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Reference to a MSSQLServerSecurityAlertPolicy in sql to populate serverSecurityAlertPolicyId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderServerSecurityAlertPolicyIdRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Namespace of the referenced object</summary>
    [JsonPropertyName("namespace")]
    public string? Namespace { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderServerSecurityAlertPolicyIdRefPolicy? Policy { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderServerSecurityAlertPolicyIdSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Selector for a MSSQLServerSecurityAlertPolicy in sql to populate serverSecurityAlertPolicyId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderServerSecurityAlertPolicyIdSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Namespace for the selector</summary>
    [JsonPropertyName("namespace")]
    public string? Namespace { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderServerSecurityAlertPolicyIdSelectorPolicy? Policy { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Specifies the primary access key of the blob storage endpoint.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderStorageAccountAccessKeySecretRef
{
    /// <summary></summary>
    [JsonPropertyName("key")]
    public string Key { get; set; }

    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Specifies the shared access signature (SAS Key) that has write access to the blob container specified in storage_container_path property.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderStorageContainerSasKeySecretRef
{
    /// <summary></summary>
    [JsonPropertyName("key")]
    public string Key { get; set; }

    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }
}
#nullable disable

#nullable enable
/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecForProvider
{
    /// <summary>A recurring_scans block as defined below.</summary>
    [JsonPropertyName("recurringScans")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderRecurringScans? RecurringScans { get; set; }

    /// <summary>The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("serverSecurityAlertPolicyId")]
    public string? ServerSecurityAlertPolicyId { get; set; }

    /// <summary>Reference to a MSSQLServerSecurityAlertPolicy in sql to populate serverSecurityAlertPolicyId.</summary>
    [JsonPropertyName("serverSecurityAlertPolicyIdRef")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderServerSecurityAlertPolicyIdRef? ServerSecurityAlertPolicyIdRef { get; set; }

    /// <summary>Selector for a MSSQLServerSecurityAlertPolicy in sql to populate serverSecurityAlertPolicyId.</summary>
    [JsonPropertyName("serverSecurityAlertPolicyIdSelector")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderServerSecurityAlertPolicyIdSelector? ServerSecurityAlertPolicyIdSelector { get; set; }

    /// <summary>Specifies the primary access key of the blob storage endpoint.</summary>
    [JsonPropertyName("storageAccountAccessKeySecretRef")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderStorageAccountAccessKeySecretRef? StorageAccountAccessKeySecretRef { get; set; }

    /// <summary>Specifies the blob storage container path that will hold the scan results (e.g., https://example.blob.core.windows.net/example/).</summary>
    [JsonPropertyName("storageContainerPath")]
    public string? StorageContainerPath { get; set; }

    /// <summary>Specifies the shared access signature (SAS Key) that has write access to the blob container specified in storage_container_path property.</summary>
    [JsonPropertyName("storageContainerSasKeySecretRef")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecForProviderStorageContainerSasKeySecretRef? StorageContainerSasKeySecretRef { get; set; }
}
#nullable disable

#nullable enable
/// <summary>A recurring_scans block as defined below.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderRecurringScans
{
    /// <summary>Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to false.</summary>
    [JsonPropertyName("emailSubscriptionAdmins")]
    public bool? EmailSubscriptionAdmins { get; set; }

    /// <summary>Specifies an array of email addresses to which the scan notification is sent.</summary>
    [JsonPropertyName("emails")]
    public IList<string>? Emails { get; set; }

    /// <summary>Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to false.</summary>
    [JsonPropertyName("enabled")]
    public bool? Enabled { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Policies for referencing.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderServerSecurityAlertPolicyIdRefPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Reference to a MSSQLServerSecurityAlertPolicy in sql to populate serverSecurityAlertPolicyId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderServerSecurityAlertPolicyIdRef
{
    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>Namespace of the referenced object</summary>
    [JsonPropertyName("namespace")]
    public string? Namespace { get; set; }

    /// <summary>Policies for referencing.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderServerSecurityAlertPolicyIdRefPolicy? Policy { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Policies for selection.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderServerSecurityAlertPolicyIdSelectorPolicy
{
    /// <summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>
    [JsonPropertyName("resolution")]
    public string? Resolution { get; set; }

    /// <summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>
    [JsonPropertyName("resolve")]
    public string? Resolve { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Selector for a MSSQLServerSecurityAlertPolicy in sql to populate serverSecurityAlertPolicyId.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderServerSecurityAlertPolicyIdSelector
{
    /// <summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>
    [JsonPropertyName("matchControllerRef")]
    public bool? MatchControllerRef { get; set; }

    /// <summary>MatchLabels ensures an object with matching labels is selected.</summary>
    [JsonPropertyName("matchLabels")]
    public IDictionary<string, string>? MatchLabels { get; set; }

    /// <summary>Namespace for the selector</summary>
    [JsonPropertyName("namespace")]
    public string? Namespace { get; set; }

    /// <summary>Policies for selection.</summary>
    [JsonPropertyName("policy")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderServerSecurityAlertPolicyIdSelectorPolicy? Policy { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Specifies the primary access key of the blob storage endpoint.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderStorageAccountAccessKeySecretRef
{
    /// <summary></summary>
    [JsonPropertyName("key")]
    public string Key { get; set; }

    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }
}
#nullable disable

#nullable enable
/// <summary>Specifies the shared access signature (SAS Key) that has write access to the blob container specified in storage_container_path property.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderStorageContainerSasKeySecretRef
{
    /// <summary></summary>
    [JsonPropertyName("key")]
    public string Key { get; set; }

    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }
}
#nullable disable

#nullable enable
/// <summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProvider
{
    /// <summary>A recurring_scans block as defined below.</summary>
    [JsonPropertyName("recurringScans")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderRecurringScans? RecurringScans { get; set; }

    /// <summary>The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("serverSecurityAlertPolicyId")]
    public string? ServerSecurityAlertPolicyId { get; set; }

    /// <summary>Reference to a MSSQLServerSecurityAlertPolicy in sql to populate serverSecurityAlertPolicyId.</summary>
    [JsonPropertyName("serverSecurityAlertPolicyIdRef")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderServerSecurityAlertPolicyIdRef? ServerSecurityAlertPolicyIdRef { get; set; }

    /// <summary>Selector for a MSSQLServerSecurityAlertPolicy in sql to populate serverSecurityAlertPolicyId.</summary>
    [JsonPropertyName("serverSecurityAlertPolicyIdSelector")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderServerSecurityAlertPolicyIdSelector? ServerSecurityAlertPolicyIdSelector { get; set; }

    /// <summary>Specifies the primary access key of the blob storage endpoint.</summary>
    [JsonPropertyName("storageAccountAccessKeySecretRef")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderStorageAccountAccessKeySecretRef? StorageAccountAccessKeySecretRef { get; set; }

    /// <summary>Specifies the blob storage container path that will hold the scan results (e.g., https://example.blob.core.windows.net/example/).</summary>
    [JsonPropertyName("storageContainerPath")]
    public string? StorageContainerPath { get; set; }

    /// <summary>Specifies the shared access signature (SAS Key) that has write access to the blob container specified in storage_container_path property.</summary>
    [JsonPropertyName("storageContainerSasKeySecretRef")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProviderStorageContainerSasKeySecretRef? StorageContainerSasKeySecretRef { get; set; }
}
#nullable disable

#nullable enable
/// <summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecProviderConfigRef
{
    /// <summary>Kind of the referenced object.</summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary>Name of the referenced object.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }
}
#nullable disable

#nullable enable
/// <summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpecWriteConnectionSecretToRef
{
    /// <summary>Name of the secret.</summary>
    [JsonPropertyName("name")]
    public string Name { get; set; }
}
#nullable disable

#nullable enable
/// <summary>MSSQLServerVulnerabilityAssessmentSpec defines the desired state of MSSQLServerVulnerabilityAssessment</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentSpec
{
    /// <summary></summary>
    [JsonPropertyName("forProvider")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecForProvider ForProvider { get; set; }

    /// <summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>
    [JsonPropertyName("initProvider")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecInitProvider? InitProvider { get; set; }

    /// <summary>THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md</summary>
    [JsonPropertyName("managementPolicies")]
    public IList<string>? ManagementPolicies { get; set; }

    /// <summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>
    [JsonPropertyName("providerConfigRef")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecProviderConfigRef? ProviderConfigRef { get; set; }

    /// <summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>
    [JsonPropertyName("writeConnectionSecretToRef")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpecWriteConnectionSecretToRef? WriteConnectionSecretToRef { get; set; }
}
#nullable disable

#nullable enable
/// <summary>A recurring_scans block as defined below.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentStatusAtProviderRecurringScans
{
    /// <summary>Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to false.</summary>
    [JsonPropertyName("emailSubscriptionAdmins")]
    public bool? EmailSubscriptionAdmins { get; set; }

    /// <summary>Specifies an array of email addresses to which the scan notification is sent.</summary>
    [JsonPropertyName("emails")]
    public IList<string>? Emails { get; set; }

    /// <summary>Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to false.</summary>
    [JsonPropertyName("enabled")]
    public bool? Enabled { get; set; }
}
#nullable disable

#nullable enable
/// <summary></summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentStatusAtProvider
{
    /// <summary>The ID of the MS SQL Server Vulnerability Assessment.</summary>
    [JsonPropertyName("id")]
    public string? Id { get; set; }

    /// <summary>A recurring_scans block as defined below.</summary>
    [JsonPropertyName("recurringScans")]
    public V1beta1MSSQLServerVulnerabilityAssessmentStatusAtProviderRecurringScans? RecurringScans { get; set; }

    /// <summary>The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.</summary>
    [JsonPropertyName("serverSecurityAlertPolicyId")]
    public string? ServerSecurityAlertPolicyId { get; set; }

    /// <summary>Specifies the blob storage container path that will hold the scan results (e.g., https://example.blob.core.windows.net/example/).</summary>
    [JsonPropertyName("storageContainerPath")]
    public string? StorageContainerPath { get; set; }
}
#nullable disable

#nullable enable
/// <summary>A Condition that may apply to a resource.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentStatusConditions
{
    /// <summary>LastTransitionTime is the last time this condition transitioned from one status to another.</summary>
    [JsonPropertyName("lastTransitionTime")]
    public string LastTransitionTime { get; set; }

    /// <summary>A Message containing details about this condition's last transition from one status to another, if any.</summary>
    [JsonPropertyName("message")]
    public string? Message { get; set; }

    /// <summary>ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</summary>
    [JsonPropertyName("observedGeneration")]
    public long? ObservedGeneration { get; set; }

    /// <summary>A Reason for this condition's last transition from one status to another.</summary>
    [JsonPropertyName("reason")]
    public string Reason { get; set; }

    /// <summary>Status of this condition; is it currently True, False, or Unknown?</summary>
    [JsonPropertyName("status")]
    public string Status { get; set; }

    /// <summary>Type of this condition. At most one of each condition type may apply to a resource at any point in time.</summary>
    [JsonPropertyName("type")]
    public string Type { get; set; }
}
#nullable disable

#nullable enable
/// <summary>MSSQLServerVulnerabilityAssessmentStatus defines the observed state of MSSQLServerVulnerabilityAssessment.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public partial class V1beta1MSSQLServerVulnerabilityAssessmentStatus
{
    /// <summary></summary>
    [JsonPropertyName("atProvider")]
    public V1beta1MSSQLServerVulnerabilityAssessmentStatusAtProvider? AtProvider { get; set; }

    /// <summary>Conditions of the resource.</summary>
    [JsonPropertyName("conditions")]
    public IList<V1beta1MSSQLServerVulnerabilityAssessmentStatusConditions>? Conditions { get; set; }

    /// <summary>ObservedGeneration is the latest metadata.generation which resulted in either a ready state, or stalled due to error it can not recover from without human intervention.</summary>
    [JsonPropertyName("observedGeneration")]
    public long? ObservedGeneration { get; set; }
}
#nullable disable

#nullable enable
/// <summary>MSSQLServerVulnerabilityAssessment is the Schema for the MSSQLServerVulnerabilityAssessments API. Manages the Vulnerability Assessment for an MS SQL Server.</summary>
[global::System.CodeDom.Compiler.GeneratedCode("KubernetesCRDModelGen.Tool", "1.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[KubernetesEntity(Group = KubeGroup, Kind = KubeKind, ApiVersion = KubeApiVersion, PluralName = KubePluralName)]
public partial class V1beta1MSSQLServerVulnerabilityAssessment : IKubernetesObject<V1ObjectMeta>, ISpec<V1beta1MSSQLServerVulnerabilityAssessmentSpec>, IStatus<V1beta1MSSQLServerVulnerabilityAssessmentStatus>
{
    public const string KubeApiVersion = "v1beta1";
    public const string KubeKind = "MSSQLServerVulnerabilityAssessment";
    public const string KubeGroup = "sql.azure.m.upbound.io";
    public const string KubePluralName = "mssqlservervulnerabilityassessments";
    /// <summary></summary>
    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    /// <summary></summary>
    [JsonPropertyName("kind")]
    public string Kind { get; set; }

    /// <summary></summary>
    [JsonPropertyName("metadata")]
    public V1ObjectMeta Metadata { get; set; }

    /// <summary>MSSQLServerVulnerabilityAssessmentSpec defines the desired state of MSSQLServerVulnerabilityAssessment</summary>
    [JsonPropertyName("spec")]
    public V1beta1MSSQLServerVulnerabilityAssessmentSpec Spec { get; set; }

    /// <summary>MSSQLServerVulnerabilityAssessmentStatus defines the observed state of MSSQLServerVulnerabilityAssessment.</summary>
    [JsonPropertyName("status")]
    public V1beta1MSSQLServerVulnerabilityAssessmentStatus? Status { get; set; }
}
#nullable disable
