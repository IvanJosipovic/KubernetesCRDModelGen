name: CICD

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'alpha'
      - 'beta'
      - 'dev'
      - 'sync-charts'
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) || '0.0.1' }}
    steps:
    - uses: actions/checkout@v4

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v4
      id: semantic
      with:
        dry_run: true
        extra_plugins: |
          @semantic-release/changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: .NET Build
      run: dotnet build -c Release

    - name: .NET Test
      run: dotnet test -c Release --collect:"XPlat Code Coverage"

    - name: Coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.cobertura.xml
        fail_ci_if_error: true

    - name: Benchmarks
      working-directory: benchmarks/KubernetesCRDModelGen.Benchmarks
      run: dotnet run -c Release

    - name: .NET Pack
      run: dotnet pack -c Release -p:Version=${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) || '0.0.1' }}


    - name: Perform a Pester test from the Tests.ps1 file
      shell: pwsh
      run: |
        $projects = Get-ChildItem -Path $PWD\src\Models -Recurse -Filter *.csproj
        foreach($project in $projects){
          dotnet pack -c Release -p:Version=${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) || '0.0.1' }} $($project.FullName)
        }

    - name: Semantic Release
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: cycjimmy/semantic-release-action@v4
      with:
        extra_plugins: |
          @semantic-release/changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: .NET NuGet Push
      if: steps.semantic.outputs.new_release_published == 'true'
      run: dotnet nuget push src/**/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate

    - uses: actions/upload-artifact@v4
      with:
        name: NuGet Package
        path: src/**/*.nupkg
